          <Response>
            <getProduct_4_0Response>
              <responseInfo_4_0>
                <consumerResponse>
                  <SYSMESSG>
                    <systemMessageCode>0</systemMessageCode>
                    <systemMessageText>Record Found</systemMessageText>
                    <systemOutputFormatVersion>4.0</systemOutputFormatVersion>
                    <systemMessageDescription>Record Found For Entered Data</systemMessageDescription>
                  </SYSMESSG>
                  <PENQUIRY>
                    <ClientEnquiryRefNumber>2020030410721</ClientEnquiryRefNumber>
                    <EnqBureauMemberId>10183</EnqBureauMemberId>
                    <EnqPurpose>1</EnqPurpose>
                    <EnqProduct>ANCCR1004</EnqProduct>
                    <EnquiryApplicationType>N</EnquiryApplicationType>
                    <EnquiryAccountType />
                    <EnquiryAmount>0</EnquiryAmount>
                    <EnquiryTerms />
                    <ClientReference1>AUCMAP20240221114324564000192602</ClientReference1>
                    <ClientReference2 />
                    <ApplicationRole>1</ApplicationRole>
                    <EnquiryCreditPurpose>1</EnquiryCreditPurpose>
                  </PENQUIRY>
                  <BURPTHDR>
                    <BurRptDate>29-04-2024</BurRptDate>
                    <BurRptTitle>Experian Consumer Credit Repo</BurRptTitle>
                    <BurRptTime>205326</BurRptTime>
                    <BurValueAdd>Y</BurValueAdd>
                    <BurRptAmtMonetaryCd>AUD</BurRptAmtMonetaryCd>
                    <BurProductHitNoHitInd>Y</BurProductHitNoHitInd>
                    <BurRptNum>23113798</BurRptNum>
                  </BURPTHDR>
                  <PERSONPF>
                    <MatchCd>3</MatchCd>
                    <AddDt>02-02-2014</AddDt>
                    <PERSONPFID>
                      <Title>Mr</Title>
                      <FirstGivenName>BOBBY</FirstGivenName>
                      <MiddleName />
                      <OtherMiddleNames />
                      <FamilyName>CHARLTON</FamilyName>
                      <Suffix />
                      <BirthYear>1969</BirthYear>
                      <BirthMonth>04</BirthMonth>
                      <BirthDay>05</BirthDay>
                      <Gender>2</Gender>
                      <BestNameInd>Y</BestNameInd>
                      <EnqNameMatchInd>N</EnqNameMatchInd>
                      <EnqDOBMatchInd>N</EnqDOBMatchInd>
                      <BanInd>N</BanInd>
                      <ALIASNAM>
                        <AliasName>?</AliasName>
                        <AliasType>?</AliasType>
                      </ALIASNAM>
                      <ALIASNAM>
                        <AliasName>Tata</AliasName>
                        <AliasType>1</AliasType>
                      </ALIASNAM>
                      <IDENTCRD>
                        <BestIdInd>Y</BestIdInd>
                        <IdType>1</IdType>
                        <EnqIdMatchind>Y</EnqIdMatchind>
                        <IdNumber>CI12391</IdNumber>
                      </IDENTCRD>
                    </PERSONPFID>
                    <PADDRESS>
                      <PropertyName />
                      <StreetNumId>15-17</StreetNumId>
                      <StreetType>RD</StreetType>
                      <StreetName>PITTWATER</StreetName>
                      <StreetSuffix />
                      <UnitNumber>1</UnitNumber>
                      <UnitDesc>U</UnitDesc>
                      <LocalityName>MANLY</LocalityName>
                      <AddressLine1 />
                      <AddressLine2 />
                      <AddressLine3 />
                      <State>NSW</State>
                      <PostalCode>2095</PostalCode>
                      <CountryCode>AUS</CountryCode>
                      <ReportedSinceDate>24-07-2019</ReportedSinceDate>
                      <AddrDate>21-07-2021</AddrDate>
                      <BestAddrInd>Y</BestAddrInd>
                      <EnqAddMatchind>N</EnqAddMatchind>
                    </PADDRESS>
                    <PADDRESS>
                      <PropertyName />
                      <StreetNumId>100</StreetNumId>
                      <StreetType>ST</StreetType>
                      <StreetName>MILLER</StreetName>
                      <StreetSuffix />
                      <UnitNumber />
                      <UnitDesc />
                      <LocalityName>NORTH SYDNEY</LocalityName>
                      <AddressLine1 />
                      <AddressLine2 />
                      <AddressLine3 />
                      <State>NSW</State>
                      <PostalCode>2060</PostalCode>
                      <CountryCode />
                      <ReportedSinceDate>27-08-2018</ReportedSinceDate>
                      <AddrDate>22-11-2020</AddrDate>
                      <BestAddrInd>N</BestAddrInd>
                      <EnqAddMatchind>N</EnqAddMatchind>
                    </PADDRESS>
                    <PADDRESS>
                      <PropertyName />
                      <StreetNumId>65</StreetNumId>
                      <StreetType>ST</StreetType>
                      <StreetName>CAMPBELL</StreetName>
                      <StreetSuffix />
                      <UnitNumber />
                      <UnitDesc />
                      <LocalityName>NEWTOWN</LocalityName>
                      <AddressLine1 />
                      <AddressLine2 />
                      <AddressLine3 />
                      <State>NSW</State>
                      <PostalCode>2042</PostalCode>
                      <CountryCode>AUS</CountryCode>
                      <ReportedSinceDate>24-07-2019</ReportedSinceDate>
                      <AddrDate>02-06-2022</AddrDate>
                      <BestAddrInd>N</BestAddrInd>
                      <EnqAddMatchind>N</EnqAddMatchind>
                    </PADDRESS>
                    <EMPLOYER>
                      <EmployerName>Money Pty LTD</EmployerName>
                      <EmpDate>19-01-2022</EmpDate>
                    </EMPLOYER>
                  </PERSONPF>
                  <STMTALRT>
                    <StatementDate>13-06-2018</StatementDate>
                    <StatementExpirationDate>01-05-2019</StatementExpirationDate>
                    <StatementTypeCode>1</StatementTypeCode>
                    <StatementText>The person or business represented by this report was a victim of identity theft. Contact at the number(s) provided before extending credit.</StatementText>
                  </STMTALRT>
                  <CONSCRED>
                    <PSUMMARY>
                      <CreditPurpose>R</CreditPurpose>
                      <FirstReportedLimitAmt>15000</FirstReportedLimitAmt>
                      <FirstReportedLimitAmtEffectivePeriod>08-2016</FirstReportedLimitAmtEffectivePeriod>
                      <NumRHIReported>0</NumRHIReported>
                      <MostSevereRHI>U</MostSevereRHI>
                      <MostSevereRHIPeriod />
                      <NumFHIReported>0</NumFHIReported>
                      <FinancialHardshipIndicator />
                      <CreditorName>REG BANK</CreditorName>
                      <CreditorNameEffectivePeriod>08-2016</CreditorNameEffectivePeriod>
                      <CreditorIndustryCd>7</CreditorIndustryCd>
                      <AccountType>RM</AccountType>
                      <TermType>F</TermType>
                      <TermTypeEffectivePeriod>08-2016</TermTypeEffectivePeriod>
                      <TermOfLoan>720</TermOfLoan>
                      <UnitOfTime>M</UnitOfTime>
                      <TermOfLoanEffectivePeriod>08-2016</TermOfLoanEffectivePeriod>
                      <LoanPaymentMethod>P</LoanPaymentMethod>
                      <LoanPaymentMethodEffectivePeriod>08-2016</LoanPaymentMethodEffectivePeriod>
                      <AccountRelationship>1</AccountRelationship>
                      <AccountRelationshipEffectivePeriod>08-2016</AccountRelationshipEffectivePeriod>
                      <AccountStatus>O</AccountStatus>
                      <AccountStatusEffectivePeriod>08-2016</AccountStatusEffectivePeriod>
                      <CurrentLimit>15000</CurrentLimit>
                      <CurrentLimitEffectivePeriod>08-2016</CurrentLimitEffectivePeriod>
                      <TypeOfCredit>S</TypeOfCredit>
                      <TypeOfCreditEffectivePeriod>08-2016</TypeOfCreditEffectivePeriod>
                      <RelationshipStartDate>01-01-1999</RelationshipStartDate>
                      <RelationshipEndDate />
                      <FirstReportedAccountOpenDate>01-01-1999</FirstReportedAccountOpenDate>
                      <FirstReportedAccountClosedDate />
                      <LastReportedAccountOpenDate>01-01-1999</LastReportedAccountOpenDate>
                      <LastReportedAccountClosedDate />
                      <AccountNumber>987984161</AccountNumber>
                      <AccountNumberEffectivePeriod>08-2016</AccountNumberEffectivePeriod>
                      <AccountNumberSubID>56</AccountNumberSubID>
                      <AccountNumberSubIDEffectivePeriod>08-2016</AccountNumberSubIDEffectivePeriod>
                      <AccountHolderCount>1</AccountHolderCount>
                      <AccountHolderCountEffectivePeriod>08-2016</AccountHolderCountEffectivePeriod>
                    </PSUMMARY>
                    <PHDETAIL>
                      <PaymentPeriod>06-2018</PaymentPeriod>
                      <CreditorName>REG BANK</CreditorName>
                      <CreditorIndustryCd>7</CreditorIndustryCd>
                      <TermType>F</TermType>
                      <TermOfLoan>720</TermOfLoan>
                      <UnitOfTime>M</UnitOfTime>
                      <LoanPaymentMethod>P</LoanPaymentMethod>
                      <AccountRelationship>1</AccountRelationship>
                      <AccountStatus>O</AccountStatus>
                      <CurrentLimit>15000</CurrentLimit>
                      <TypeOfCredit>S</TypeOfCredit>
                      <RelationshipStartDate>01-01-1999</RelationshipStartDate>
                      <RelationshipEndDate />
                      <AccountOpenDate>01-01-1999</AccountOpenDate>
                      <AccountClosedDate />
                      <AccountNumber>987984161</AccountNumber>
                      <AccountNumberSubID>56</AccountNumberSubID>
                      <AccountHolderCount>1</AccountHolderCount>
                    </PHDETAIL>
                  </CONSCRED>
                  <CONSCRED>
                    <PSUMMARY>
                      <CreditPurpose>C</CreditPurpose>
                      <FirstReportedLimitAmt>15000</FirstReportedLimitAmt>
                      <FirstReportedLimitAmtEffectivePeriod>08-2019</FirstReportedLimitAmtEffectivePeriod>
                      <NumRHIReported>0</NumRHIReported>
                      <MostSevereRHI>U</MostSevereRHI>
                      <MostSevereRHIPeriod />
                      <NumFHIReported>0</NumFHIReported>
                      <FinancialHardshipIndicator />
                      <CreditorName>REGRESSION TESTING 1</CreditorName>
                      <CreditorNameEffectivePeriod>11-2019</CreditorNameEffectivePeriod>
                      <CreditorIndustryCd>7</CreditorIndustryCd>
                      <AccountType>CC</AccountType>
                      <TermType>F</TermType>
                      <TermTypeEffectivePeriod>08-2019</TermTypeEffectivePeriod>
                      <TermOfLoan>360</TermOfLoan>
                      <UnitOfTime>M</UnitOfTime>
                      <TermOfLoanEffectivePeriod>08-2019</TermOfLoanEffectivePeriod>
                      <LoanPaymentMethod>P</LoanPaymentMethod>
                      <LoanPaymentMethodEffectivePeriod>08-2019</LoanPaymentMethodEffectivePeriod>
                      <AccountRelationship>1</AccountRelationship>
                      <AccountRelationshipEffectivePeriod>08-2019</AccountRelationshipEffectivePeriod>
                      <AccountStatus>O</AccountStatus>
                      <AccountStatusEffectivePeriod>08-2019</AccountStatusEffectivePeriod>
                      <CurrentLimit>15000</CurrentLimit>
                      <CurrentLimitEffectivePeriod>08-2019</CurrentLimitEffectivePeriod>
                      <TypeOfCredit>N</TypeOfCredit>
                      <TypeOfCreditEffectivePeriod>08-2019</TypeOfCreditEffectivePeriod>
                      <RelationshipStartDate>01-01-2014</RelationshipStartDate>
                      <RelationshipEndDate />
                      <FirstReportedAccountOpenDate>01-01-2014</FirstReportedAccountOpenDate>
                      <FirstReportedAccountClosedDate />
                      <LastReportedAccountOpenDate>01-01-2014</LastReportedAccountOpenDate>
                      <LastReportedAccountClosedDate />
                      <AccountNumber>CCRACCT982</AccountNumber>
                      <AccountNumberEffectivePeriod>08-2019</AccountNumberEffectivePeriod>
                      <AccountNumberSubID>982</AccountNumberSubID>
                      <AccountNumberSubIDEffectivePeriod>08-2019</AccountNumberSubIDEffectivePeriod>
                      <AccountHolderCount>1</AccountHolderCount>
                      <AccountHolderCountEffectivePeriod>08-2019</AccountHolderCountEffectivePeriod>
                    </PSUMMARY>
                    <PHDETAIL>
                      <PaymentPeriod>11-2019</PaymentPeriod>
                      <CreditorName>REGRESSION TESTING 1</CreditorName>
                      <CreditorIndustryCd>7</CreditorIndustryCd>
                      <TermType>F</TermType>
                      <TermOfLoan>360</TermOfLoan>
                      <UnitOfTime>M</UnitOfTime>
                      <LoanPaymentMethod>P</LoanPaymentMethod>
                      <AccountRelationship>1</AccountRelationship>
                      <AccountStatus>O</AccountStatus>
                      <CurrentLimit>15000</CurrentLimit>
                      <TypeOfCredit>N</TypeOfCredit>
                      <RelationshipStartDate>01-01-2014</RelationshipStartDate>
                      <RelationshipEndDate />
                      <AccountOpenDate>01-01-2014</AccountOpenDate>
                      <AccountClosedDate />
                      <AccountNumber>CCRACCT982</AccountNumber>
                      <AccountNumberSubID>982</AccountNumberSubID>
                      <AccountHolderCount>1</AccountHolderCount>
                    </PHDETAIL>
                    <PHDETAIL>
                      <PaymentPeriod>11-2019</PaymentPeriod>
                      <CreditorName>REGRESSION TESTING 1</CreditorName>
                      <CreditorIndustryCd>7</CreditorIndustryCd>
                    </PHDETAIL>
                  </CONSCRED>
                  <CONSCRED>
                    <PSUMMARY>
                      <CreditPurpose>R</CreditPurpose>
                      <FirstReportedLimitAmt>15000</FirstReportedLimitAmt>
                      <FirstReportedLimitAmtEffectivePeriod>07-2016</FirstReportedLimitAmtEffectivePeriod>
                      <NumRHIReported>0</NumRHIReported>
                      <MostSevereRHI>U</MostSevereRHI>
                      <MostSevereRHIPeriod />
                      <NumFHIReported>0</NumFHIReported>
                      <FinancialHardshipIndicator />
                      <CreditorName>REGRESSION TESTING</CreditorName>
                      <CreditorNameEffectivePeriod>06-2018</CreditorNameEffectivePeriod>
                      <CreditorIndustryCd>4</CreditorIndustryCd>
                      <AccountType>CC</AccountType>
                      <TermType>R</TermType>
                      <TermTypeEffectivePeriod>06-2018</TermTypeEffectivePeriod>
                      <TermOfLoan />
                      <UnitOfTime />
                      <TermOfLoanEffectivePeriod />
                      <LoanPaymentMethod>P</LoanPaymentMethod>
                      <LoanPaymentMethodEffectivePeriod>07-2016</LoanPaymentMethodEffectivePeriod>
                      <AccountRelationship>1</AccountRelationship>
                      <AccountRelationshipEffectivePeriod>07-2016</AccountRelationshipEffectivePeriod>
                      <AccountStatus>O</AccountStatus>
                      <AccountStatusEffectivePeriod>07-2016</AccountStatusEffectivePeriod>
                      <CurrentLimit>15000</CurrentLimit>
                      <CurrentLimitEffectivePeriod>07-2016</CurrentLimitEffectivePeriod>
                      <TypeOfCredit>N</TypeOfCredit>
                      <TypeOfCreditEffectivePeriod>07-2016</TypeOfCreditEffectivePeriod>
                      <RelationshipStartDate>01-01-1994</RelationshipStartDate>
                      <RelationshipEndDate />
                      <FirstReportedAccountOpenDate>01-01-1994</FirstReportedAccountOpenDate>
                      <FirstReportedAccountClosedDate />
                      <LastReportedAccountOpenDate>01-01-1994</LastReportedAccountOpenDate>
                      <LastReportedAccountClosedDate />
                      <AccountNumber>883654XXXXXX123456</AccountNumber>
                      <AccountNumberEffectivePeriod>06-2018</AccountNumberEffectivePeriod>
                      <AccountNumberSubID>68</AccountNumberSubID>
                      <AccountNumberSubIDEffectivePeriod>06-2018</AccountNumberSubIDEffectivePeriod>
                      <AccountHolderCount>1</AccountHolderCount>
                      <AccountHolderCountEffectivePeriod>08-2016</AccountHolderCountEffectivePeriod>
                    </PSUMMARY>
                    <PHDETAIL>
                      <PaymentPeriod>06-2018</PaymentPeriod>
                      <CreditorName>REGRESSION TESTING</CreditorName>
                      <CreditorIndustryCd>4</CreditorIndustryCd>
                      <TermType>R</TermType>
                      <TermOfLoan />
                      <UnitOfTime />
                      <LoanPaymentMethod>P</LoanPaymentMethod>
                      <AccountRelationship>1</AccountRelationship>
                      <AccountStatus>O</AccountStatus>
                      <CurrentLimit>15000</CurrentLimit>
                      <TypeOfCredit>N</TypeOfCredit>
                      <RelationshipStartDate>01-01-1994</RelationshipStartDate>
                      <RelationshipEndDate />
                      <AccountOpenDate>01-01-1994</AccountOpenDate>
                      <AccountClosedDate />
                      <AccountNumber>883654XXXXXX123456</AccountNumber>
                      <AccountNumberSubID>68</AccountNumberSubID>
                      <AccountHolderCount>1</AccountHolderCount>
                    </PHDETAIL>
                    <PHDETAIL>
                      <PaymentPeriod>06-2018</PaymentPeriod>
                      <CreditorName>REGRESSION TESTING</CreditorName>
                      <CreditorIndustryCd>4</CreditorIndustryCd>
                      <TermType>R</TermType>
                      <AccountNumber>883654XXXXXX123456</AccountNumber>
                      <AccountNumberSubID>68</AccountNumberSubID>
                    </PHDETAIL>
                    <PHDETAIL>
                      <PaymentPeriod>08-2016</PaymentPeriod>
                      <CreditorName>Card Bank</CreditorName>
                      <CreditorIndustryCd>22</CreditorIndustryCd>
                      <TermType />
                      <AccountHolderCount>1</AccountHolderCount>
                    </PHDETAIL>
                    <PHDETAIL>
                      <PaymentPeriod>07-2016</PaymentPeriod>
                      <CreditorName>REGRESSION TESTING</CreditorName>
                      <CreditorIndustryCd>4</CreditorIndustryCd>
                      <TermType>R</TermType>
                      <AccountHolderCount>0</AccountHolderCount>
                    </PHDETAIL>
                  </CONSCRED>
                  <CONSCRED>
                    <PSUMMARY>
                      <CreditPurpose>R</CreditPurpose>
                      <FirstReportedLimitAmt>3000</FirstReportedLimitAmt>
                      <FirstReportedLimitAmtEffectivePeriod>07-2016</FirstReportedLimitAmtEffectivePeriod>
                      <NumRHIReported>0</NumRHIReported>
                      <MostSevereRHI>U</MostSevereRHI>
                      <MostSevereRHIPeriod />
                      <NumFHIReported>0</NumFHIReported>
                      <FinancialHardshipIndicator />
                      <CreditorName>Card Bank</CreditorName>
                      <CreditorNameEffectivePeriod>07-2016</CreditorNameEffectivePeriod>
                      <CreditorIndustryCd>22</CreditorIndustryCd>
                      <AccountType>OD</AccountType>
                      <TermType>R</TermType>
                      <TermTypeEffectivePeriod>07-2016</TermTypeEffectivePeriod>
                      <TermOfLoan />
                      <UnitOfTime />
                      <TermOfLoanEffectivePeriod />
                      <LoanPaymentMethod>N</LoanPaymentMethod>
                      <LoanPaymentMethodEffectivePeriod>07-2016</LoanPaymentMethodEffectivePeriod>
                      <AccountRelationship>1</AccountRelationship>
                      <AccountRelationshipEffectivePeriod>07-2016</AccountRelationshipEffectivePeriod>
                      <AccountStatus>O</AccountStatus>
                      <AccountStatusEffectivePeriod>07-2016</AccountStatusEffectivePeriod>
                      <CurrentLimit>3000</CurrentLimit>
                      <CurrentLimitEffectivePeriod>07-2016</CurrentLimitEffectivePeriod>
                      <TypeOfCredit>N</TypeOfCredit>
                      <TypeOfCreditEffectivePeriod>07-2016</TypeOfCreditEffectivePeriod>
                      <RelationshipStartDate>10-11-1990</RelationshipStartDate>
                      <RelationshipEndDate />
                      <FirstReportedAccountOpenDate>10-11-1990</FirstReportedAccountOpenDate>
                      <FirstReportedAccountClosedDate />
                      <LastReportedAccountOpenDate>10-11-1990</LastReportedAccountOpenDate>
                      <LastReportedAccountClosedDate />
                      <AccountNumber>479479464</AccountNumber>
                      <AccountNumberEffectivePeriod>07-2016</AccountNumberEffectivePeriod>
                      <AccountNumberSubID>/</AccountNumberSubID>
                      <AccountNumberSubIDEffectivePeriod>07-2016</AccountNumberSubIDEffectivePeriod>
                      <AccountHolderCount>0</AccountHolderCount>
                      <AccountHolderCountEffectivePeriod>07-2016</AccountHolderCountEffectivePeriod>
                    </PSUMMARY>
                    <PHDETAIL>
                      <PaymentPeriod>06-2018</PaymentPeriod>
                      <CreditorName>Card Bank</CreditorName>
                      <CreditorIndustryCd>22</CreditorIndustryCd>
                      <TermType>R</TermType>
                      <TermOfLoan />
                      <UnitOfTime />
                      <LoanPaymentMethod>N</LoanPaymentMethod>
                      <AccountRelationship>1</AccountRelationship>
                      <AccountStatus>O</AccountStatus>
                      <CurrentLimit>3000</CurrentLimit>
                      <TypeOfCredit>N</TypeOfCredit>
                      <RelationshipStartDate>10-11-1990</RelationshipStartDate>
                      <RelationshipEndDate />
                      <AccountOpenDate>10-11-1990</AccountOpenDate>
                      <AccountClosedDate />
                      <AccountNumber>479479464</AccountNumber>
                      <AccountNumberSubID>/</AccountNumberSubID>
                      <AccountHolderCount>0</AccountHolderCount>
                    </PHDETAIL>
                  </CONSCRED>
                  <CONSCRED>
                    <PSUMMARY>
                      <CreditPurpose>R</CreditPurpose>
                      <FirstReportedLimitAmt>2514</FirstReportedLimitAmt>
                      <FirstReportedLimitAmtEffectivePeriod>01-2020</FirstReportedLimitAmtEffectivePeriod>
                      <NumRHIReported>0</NumRHIReported>
                      <MostSevereRHI>U</MostSevereRHI>
                      <MostSevereRHIPeriod />
                      <NumFHIReported>0</NumFHIReported>
                      <FinancialHardshipIndicator />
                      <CreditorName>Experian_PPV</CreditorName>
                      <CreditorNameEffectivePeriod>01-2020</CreditorNameEffectivePeriod>
                      <CreditorIndustryCd>3</CreditorIndustryCd>
                      <AccountType>OD</AccountType>
                      <TermType>F</TermType>
                      <TermTypeEffectivePeriod>01-2020</TermTypeEffectivePeriod>
                      <TermOfLoan>5</TermOfLoan>
                      <UnitOfTime>M</UnitOfTime>
                      <TermOfLoanEffectivePeriod>01-2020</TermOfLoanEffectivePeriod>
                      <LoanPaymentMethod>N</LoanPaymentMethod>
                      <LoanPaymentMethodEffectivePeriod>01-2020</LoanPaymentMethodEffectivePeriod>
                      <AccountRelationship>1</AccountRelationship>
                      <AccountRelationshipEffectivePeriod>01-2020</AccountRelationshipEffectivePeriod>
                      <AccountStatus>O</AccountStatus>
                      <AccountStatusEffectivePeriod>01-2020</AccountStatusEffectivePeriod>
                      <CurrentLimit>2514</CurrentLimit>
                      <CurrentLimitEffectivePeriod>01-2020</CurrentLimitEffectivePeriod>
                      <TypeOfCredit>U</TypeOfCredit>
                      <TypeOfCreditEffectivePeriod>01-2020</TypeOfCreditEffectivePeriod>
                      <RelationshipStartDate>09-01-2020</RelationshipStartDate>
                      <RelationshipEndDate />
                      <FirstReportedAccountOpenDate>09-01-2020</FirstReportedAccountOpenDate>
                      <FirstReportedAccountClosedDate />
                      <LastReportedAccountOpenDate>09-01-2020</LastReportedAccountOpenDate>
                      <LastReportedAccountClosedDate />
                      <AccountNumber>10012020</AccountNumber>
                      <AccountNumberEffectivePeriod>01-2020</AccountNumberEffectivePeriod>
                      <AccountNumberSubID>04</AccountNumberSubID>
                      <AccountNumberSubIDEffectivePeriod>01-2020</AccountNumberSubIDEffectivePeriod>
                      <AccountHolderCount>0</AccountHolderCount>
                      <AccountHolderCountEffectivePeriod>01-2020</AccountHolderCountEffectivePeriod>
                    </PSUMMARY>
                    <PHDETAIL>
                      <PaymentPeriod>01-2020</PaymentPeriod>
                      <CreditorName>Experian_PPV</CreditorName>
                      <CreditorIndustryCd>3</CreditorIndustryCd>
                      <TermType>F</TermType>
                      <TermOfLoan>5</TermOfLoan>
                      <UnitOfTime>M</UnitOfTime>
                      <LoanPaymentMethod>N</LoanPaymentMethod>
                      <AccountRelationship>1</AccountRelationship>
                      <AccountStatus>O</AccountStatus>
                      <CurrentLimit>2514</CurrentLimit>
                      <TypeOfCredit>U</TypeOfCredit>
                      <RelationshipStartDate>09-01-2020</RelationshipStartDate>
                      <RelationshipEndDate />
                      <AccountOpenDate>09-01-2020</AccountOpenDate>
                      <AccountClosedDate />
                      <AccountNumber>10012020</AccountNumber>
                      <AccountNumberSubID>04</AccountNumberSubID>
                      <AccountHolderCount>0</AccountHolderCount>
                    </PHDETAIL>
                  </CONSCRED>
                  <CONSCRED>
                    <PSUMMARY>
                      <CreditPurpose>R</CreditPurpose>
                      <FirstReportedLimitAmt>2505</FirstReportedLimitAmt>
                      <FirstReportedLimitAmtEffectivePeriod>01-2020</FirstReportedLimitAmtEffectivePeriod>
                      <NumRHIReported>0</NumRHIReported>
                      <MostSevereRHI>U</MostSevereRHI>
                      <MostSevereRHIPeriod />
                      <NumFHIReported>0</NumFHIReported>
                      <FinancialHardshipIndicator />
                      <CreditorName>Experian Credit Service DS</CreditorName>
                      <CreditorNameEffectivePeriod>01-2020</CreditorNameEffectivePeriod>
                      <CreditorIndustryCd>12</CreditorIndustryCd>
                      <AccountType>PF</AccountType>
                      <TermType>R</TermType>
                      <TermTypeEffectivePeriod>01-2020</TermTypeEffectivePeriod>
                      <TermOfLoan>3</TermOfLoan>
                      <UnitOfTime>M</UnitOfTime>
                      <TermOfLoanEffectivePeriod>01-2020</TermOfLoanEffectivePeriod>
                      <LoanPaymentMethod>I</LoanPaymentMethod>
                      <LoanPaymentMethodEffectivePeriod>01-2020</LoanPaymentMethodEffectivePeriod>
                      <AccountRelationship>1</AccountRelationship>
                      <AccountRelationshipEffectivePeriod>01-2020</AccountRelationshipEffectivePeriod>
                      <AccountStatus>O</AccountStatus>
                      <AccountStatusEffectivePeriod>01-2020</AccountStatusEffectivePeriod>
                      <CurrentLimit>2505</CurrentLimit>
                      <CurrentLimitEffectivePeriod>01-2020</CurrentLimitEffectivePeriod>
                      <TypeOfCredit>U</TypeOfCredit>
                      <TypeOfCreditEffectivePeriod>01-2020</TypeOfCreditEffectivePeriod>
                      <RelationshipStartDate>09-01-2020</RelationshipStartDate>
                      <RelationshipEndDate />
                      <FirstReportedAccountOpenDate>09-01-2020</FirstReportedAccountOpenDate>
                      <FirstReportedAccountClosedDate />
                      <LastReportedAccountOpenDate>09-01-2020</LastReportedAccountOpenDate>
                      <LastReportedAccountClosedDate />
                      <AccountNumber>10012020</AccountNumber>
                      <AccountNumberEffectivePeriod>01-2020</AccountNumberEffectivePeriod>
                      <AccountNumberSubID>03</AccountNumberSubID>
                      <AccountNumberSubIDEffectivePeriod>01-2020</AccountNumberSubIDEffectivePeriod>
                      <AccountHolderCount>0</AccountHolderCount>
                      <AccountHolderCountEffectivePeriod>01-2020</AccountHolderCountEffectivePeriod>
                    </PSUMMARY>
                    <PHDETAIL>
                      <PaymentPeriod>01-2020</PaymentPeriod>
                      <CreditorName>Experian Credit Service DS</CreditorName>
                      <CreditorIndustryCd>12</CreditorIndustryCd>
                      <TermType>R</TermType>
                      <TermOfLoan>3</TermOfLoan>
                      <UnitOfTime>M</UnitOfTime>
                      <LoanPaymentMethod>I</LoanPaymentMethod>
                      <AccountRelationship>1</AccountRelationship>
                      <AccountStatus>O</AccountStatus>
                      <CurrentLimit>2505</CurrentLimit>
                      <TypeOfCredit>U</TypeOfCredit>
                      <RelationshipStartDate>09-01-2020</RelationshipStartDate>
                      <RelationshipEndDate />
                      <AccountOpenDate>09-01-2020</AccountOpenDate>
                      <AccountClosedDate />
                      <AccountNumber>10012020</AccountNumber>
                      <AccountNumberSubID>03</AccountNumberSubID>
                      <AccountHolderCount>0</AccountHolderCount>
                    </PHDETAIL>
                  </CONSCRED>
                  <CONSCRED>
                    <PSUMMARY>
                      <CreditPurpose>R</CreditPurpose>
                      <FirstReportedLimitAmt>2500</FirstReportedLimitAmt>
                      <FirstReportedLimitAmtEffectivePeriod>01-2020</FirstReportedLimitAmtEffectivePeriod>
                      <NumRHIReported>0</NumRHIReported>
                      <MostSevereRHI>U</MostSevereRHI>
                      <MostSevereRHIPeriod />
                      <NumFHIReported>0</NumFHIReported>
                      <FinancialHardshipIndicator />
                      <CreditorName>Experian_PPV</CreditorName>
                      <CreditorNameEffectivePeriod>01-2020</CreditorNameEffectivePeriod>
                      <CreditorIndustryCd>3</CreditorIndustryCd>
                      <AccountType>PF</AccountType>
                      <TermType>F</TermType>
                      <TermTypeEffectivePeriod>01-2020</TermTypeEffectivePeriod>
                      <TermOfLoan>8</TermOfLoan>
                      <UnitOfTime>M</UnitOfTime>
                      <TermOfLoanEffectivePeriod>01-2020</TermOfLoanEffectivePeriod>
                      <LoanPaymentMethod>I</LoanPaymentMethod>
                      <LoanPaymentMethodEffectivePeriod>01-2020</LoanPaymentMethodEffectivePeriod>
                      <AccountRelationship>1</AccountRelationship>
                      <AccountRelationshipEffectivePeriod>01-2020</AccountRelationshipEffectivePeriod>
                      <AccountStatus>O</AccountStatus>
                      <AccountStatusEffectivePeriod>01-2020</AccountStatusEffectivePeriod>
                      <CurrentLimit>2500</CurrentLimit>
                      <CurrentLimitEffectivePeriod>01-2020</CurrentLimitEffectivePeriod>
                      <TypeOfCredit>U</TypeOfCredit>
                      <TypeOfCreditEffectivePeriod>01-2020</TypeOfCreditEffectivePeriod>
                      <RelationshipStartDate>09-01-2020</RelationshipStartDate>
                      <RelationshipEndDate />
                      <FirstReportedAccountOpenDate>09-01-2020</FirstReportedAccountOpenDate>
                      <FirstReportedAccountClosedDate />
                      <LastReportedAccountOpenDate>09-01-2020</LastReportedAccountOpenDate>
                      <LastReportedAccountClosedDate />
                      <AccountNumber>10012020</AccountNumber>
                      <AccountNumberEffectivePeriod>01-2020</AccountNumberEffectivePeriod>
                      <AccountNumberSubID>02</AccountNumberSubID>
                      <AccountNumberSubIDEffectivePeriod>01-2020</AccountNumberSubIDEffectivePeriod>
                      <AccountHolderCount>0</AccountHolderCount>
                      <AccountHolderCountEffectivePeriod>01-2020</AccountHolderCountEffectivePeriod>
                    </PSUMMARY>
                    <PHDETAIL>
                      <PaymentPeriod>01-2022</PaymentPeriod>
                      <CreditorName>Experian_PPV</CreditorName>
                      <CreditorIndustryCd>3</CreditorIndustryCd>
                      <TermType>F</TermType>
                      <TermOfLoan>8</TermOfLoan>
                      <UnitOfTime>M</UnitOfTime>
                      <LoanPaymentMethod>I</LoanPaymentMethod>
                      <AccountRelationship>1</AccountRelationship>
                      <AccountStatus>O</AccountStatus>
                      <CurrentLimit>2500</CurrentLimit>
                      <TypeOfCredit>U</TypeOfCredit>
                      <RelationshipStartDate>09-01-2020</RelationshipStartDate>
                      <RelationshipEndDate />
                      <AccountOpenDate>09-01-2020</AccountOpenDate>
                      <AccountClosedDate />
                      <AccountNumber>10012020</AccountNumber>
                      <AccountNumberSubID>02</AccountNumberSubID>
                      <AccountHolderCount>0</AccountHolderCount>
                    </PHDETAIL>
                  </CONSCRED>
                  <CONSCRED>
                    <PSUMMARY>
                      <CreditPurpose>R</CreditPurpose>
                      <FirstReportedLimitAmt>25000</FirstReportedLimitAmt>
                      <FirstReportedLimitAmtEffectivePeriod>01-2020</FirstReportedLimitAmtEffectivePeriod>
                      <NumRHIReported>0</NumRHIReported>
                      <MostSevereRHI>U</MostSevereRHI>
                      <MostSevereRHIPeriod />
                      <NumFHIReported>0</NumFHIReported>
                      <FinancialHardshipIndicator />
                      <CreditorName>Experian_PPV</CreditorName>
                      <CreditorNameEffectivePeriod>01-2020</CreditorNameEffectivePeriod>
                      <CreditorIndustryCd>3</CreditorIndustryCd>
                      <AccountType>AL</AccountType>
                      <TermType>F</TermType>
                      <TermTypeEffectivePeriod>01-2020</TermTypeEffectivePeriod>
                      <TermOfLoan>11</TermOfLoan>
                      <UnitOfTime>M</UnitOfTime>
                      <TermOfLoanEffectivePeriod>01-2020</TermOfLoanEffectivePeriod>
                      <LoanPaymentMethod>N</LoanPaymentMethod>
                      <LoanPaymentMethodEffectivePeriod>01-2020</LoanPaymentMethodEffectivePeriod>
                      <AccountRelationship>1</AccountRelationship>
                      <AccountRelationshipEffectivePeriod>01-2020</AccountRelationshipEffectivePeriod>
                      <AccountStatus>O</AccountStatus>
                      <AccountStatusEffectivePeriod>01-2020</AccountStatusEffectivePeriod>
                      <CurrentLimit>25000</CurrentLimit>
                      <CurrentLimitEffectivePeriod>01-2020</CurrentLimitEffectivePeriod>
                      <TypeOfCredit>U</TypeOfCredit>
                      <TypeOfCreditEffectivePeriod>01-2020</TypeOfCreditEffectivePeriod>
                      <RelationshipStartDate>10-01-2020</RelationshipStartDate>
                      <RelationshipEndDate />
                      <FirstReportedAccountOpenDate>10-01-2020</FirstReportedAccountOpenDate>
                      <FirstReportedAccountClosedDate />
                      <LastReportedAccountOpenDate>10-01-2020</LastReportedAccountOpenDate>
                      <LastReportedAccountClosedDate />
                      <AccountNumber>10012020</AccountNumber>
                      <AccountNumberEffectivePeriod>01-2020</AccountNumberEffectivePeriod>
                      <AccountNumberSubID>1</AccountNumberSubID>
                      <AccountNumberSubIDEffectivePeriod>01-2020</AccountNumberSubIDEffectivePeriod>
                      <AccountHolderCount>0</AccountHolderCount>
                      <AccountHolderCountEffectivePeriod>01-2020</AccountHolderCountEffectivePeriod>
                    </PSUMMARY>
                    <PHDETAIL>
                      <PaymentPeriod>12-2021</PaymentPeriod>
                      <CreditorName>Experian_PPV</CreditorName>
                      <CreditorIndustryCd>3</CreditorIndustryCd>
                      <TermType>F</TermType>
                      <TermOfLoan>11</TermOfLoan>
                      <UnitOfTime>M</UnitOfTime>
                      <LoanPaymentMethod>N</LoanPaymentMethod>
                      <AccountRelationship>1</AccountRelationship>
                      <AccountStatus>O</AccountStatus>
                      <CurrentLimit>25000</CurrentLimit>
                      <TypeOfCredit>U</TypeOfCredit>
                      <RelationshipStartDate>10-01-2020</RelationshipStartDate>
                      <RelationshipEndDate />
                      <AccountOpenDate>10-01-2020</AccountOpenDate>
                      <AccountClosedDate />
                      <AccountNumber>10012020</AccountNumber>
                      <AccountNumberSubID>1</AccountNumberSubID>
                      <AccountHolderCount>0</AccountHolderCount>
                    </PHDETAIL>
                  </CONSCRED>
                  <CONSCRED>
                    <PSUMMARY>
                      <CreditPurpose>R</CreditPurpose>
                      <FirstReportedLimitAmt>15000</FirstReportedLimitAmt>
                      <FirstReportedLimitAmtEffectivePeriod>08-2016</FirstReportedLimitAmtEffectivePeriod>
                      <NumRHIReported>0</NumRHIReported>
                      <MostSevereRHI>U</MostSevereRHI>
                      <MostSevereRHIPeriod />
                      <NumFHIReported>0</NumFHIReported>
                      <FinancialHardshipIndicator />
                      <CreditorName>Card Bank</CreditorName>
                      <CreditorNameEffectivePeriod>08-2016</CreditorNameEffectivePeriod>
                      <CreditorIndustryCd>22</CreditorIndustryCd>
                      <AccountType>CC</AccountType>
                      <TermType />
                      <TermTypeEffectivePeriod />
                      <TermOfLoan />
                      <UnitOfTime />
                      <TermOfLoanEffectivePeriod />
                      <LoanPaymentMethod>P</LoanPaymentMethod>
                      <LoanPaymentMethodEffectivePeriod>08-2016</LoanPaymentMethodEffectivePeriod>
                      <AccountRelationship>1</AccountRelationship>
                      <AccountRelationshipEffectivePeriod>08-2016</AccountRelationshipEffectivePeriod>
                      <AccountStatus>O</AccountStatus>
                      <AccountStatusEffectivePeriod>08-2016</AccountStatusEffectivePeriod>
                      <CurrentLimit>15000</CurrentLimit>
                      <CurrentLimitEffectivePeriod>08-2016</CurrentLimitEffectivePeriod>
                      <TypeOfCredit>N</TypeOfCredit>
                      <TypeOfCreditEffectivePeriod>08-2016</TypeOfCreditEffectivePeriod>
                      <RelationshipStartDate>01-01-1994</RelationshipStartDate>
                      <RelationshipEndDate />
                      <FirstReportedAccountOpenDate>01-01-1994</FirstReportedAccountOpenDate>
                      <FirstReportedAccountClosedDate />
                      <LastReportedAccountOpenDate>01-01-1994</LastReportedAccountOpenDate>
                      <LastReportedAccountClosedDate />
                      <AccountNumber>12Y654XXXXXX123456</AccountNumber>
                      <AccountNumberEffectivePeriod>08-2016</AccountNumberEffectivePeriod>
                      <AccountNumberSubID>56</AccountNumberSubID>
                      <AccountNumberSubIDEffectivePeriod>08-2016</AccountNumberSubIDEffectivePeriod>
                      <AccountHolderCount>1</AccountHolderCount>
                      <AccountHolderCountEffectivePeriod>08-2016</AccountHolderCountEffectivePeriod>
                    </PSUMMARY>
                    <PHDETAIL>
                      <PaymentPeriod>06-2018</PaymentPeriod>
                      <CreditorName>Card Bank</CreditorName>
                      <CreditorIndustryCd>22</CreditorIndustryCd>
                      <TermType />
                      <TermOfLoan />
                      <UnitOfTime />
                      <LoanPaymentMethod>P</LoanPaymentMethod>
                      <AccountRelationship>1</AccountRelationship>
                      <AccountStatus>O</AccountStatus>
                      <CurrentLimit>15000</CurrentLimit>
                      <TypeOfCredit>N</TypeOfCredit>
                      <RelationshipStartDate>01-01-1994</RelationshipStartDate>
                      <RelationshipEndDate />
                      <AccountOpenDate>01-01-1994</AccountOpenDate>
                      <AccountClosedDate />
                      <AccountNumber>12Y654XXXXXX123456</AccountNumber>
                      <AccountNumberSubID>56</AccountNumberSubID>
                      <AccountHolderCount>1</AccountHolderCount>
                    </PHDETAIL>
                  </CONSCRED>
                  <CONSCRED>
                    <PSUMMARY>
                      <CreditPurpose>R</CreditPurpose>
                      <FirstReportedLimitAmt>2000</FirstReportedLimitAmt>
                      <FirstReportedLimitAmtEffectivePeriod>03-2019</FirstReportedLimitAmtEffectivePeriod>
                      <NumRHIReported>0</NumRHIReported>
                      <MostSevereRHI>U</MostSevereRHI>
                      <MostSevereRHIPeriod />
                      <NumFHIReported>0</NumFHIReported>
                      <FinancialHardshipIndicator />
                      <CreditorName>REGRESSION TESTING</CreditorName>
                      <CreditorNameEffectivePeriod>03-2019</CreditorNameEffectivePeriod>
                      <CreditorIndustryCd>4</CreditorIndustryCd>
                      <AccountType>CC</AccountType>
                      <TermType>F</TermType>
                      <TermTypeEffectivePeriod>03-2019</TermTypeEffectivePeriod>
                      <TermOfLoan />
                      <UnitOfTime />
                      <TermOfLoanEffectivePeriod />
                      <LoanPaymentMethod>P</LoanPaymentMethod>
                      <LoanPaymentMethodEffectivePeriod>03-2019</LoanPaymentMethodEffectivePeriod>
                      <AccountRelationship>1</AccountRelationship>
                      <AccountRelationshipEffectivePeriod>03-2019</AccountRelationshipEffectivePeriod>
                      <AccountStatus>O</AccountStatus>
                      <AccountStatusEffectivePeriod>03-2019</AccountStatusEffectivePeriod>
                      <CurrentLimit>2000</CurrentLimit>
                      <CurrentLimitEffectivePeriod>03-2019</CurrentLimitEffectivePeriod>
                      <TypeOfCredit>N</TypeOfCredit>
                      <TypeOfCreditEffectivePeriod>03-2019</TypeOfCreditEffectivePeriod>
                      <RelationshipStartDate>01-02-2019</RelationshipStartDate>
                      <RelationshipEndDate />
                      <FirstReportedAccountOpenDate>01-02-2019</FirstReportedAccountOpenDate>
                      <FirstReportedAccountClosedDate />
                      <LastReportedAccountOpenDate>01-02-2019</LastReportedAccountOpenDate>
                      <LastReportedAccountClosedDate />
                      <AccountNumber>102425XXXXXX1423</AccountNumber>
                      <AccountNumberEffectivePeriod>03-2019</AccountNumberEffectivePeriod>
                      <AccountNumberSubID>1254</AccountNumberSubID>
                      <AccountNumberSubIDEffectivePeriod>03-2019</AccountNumberSubIDEffectivePeriod>
                      <AccountHolderCount>0</AccountHolderCount>
                      <AccountHolderCountEffectivePeriod>03-2019</AccountHolderCountEffectivePeriod>
                    </PSUMMARY>
                    <PHDETAIL>
                      <PaymentPeriod>04-2019</PaymentPeriod>
                      <CreditorName>REGRESSION TESTING</CreditorName>
                      <CreditorIndustryCd>4</CreditorIndustryCd>
                      <TermType>F</TermType>
                      <TermOfLoan />
                      <UnitOfTime />
                      <LoanPaymentMethod>P</LoanPaymentMethod>
                      <AccountRelationship>1</AccountRelationship>
                      <AccountStatus>O</AccountStatus>
                      <CurrentLimit>2000</CurrentLimit>
                      <TypeOfCredit>N</TypeOfCredit>
                      <RelationshipStartDate>01-02-2019</RelationshipStartDate>
                      <RelationshipEndDate />
                      <AccountOpenDate>01-02-2019</AccountOpenDate>
                      <AccountClosedDate />
                      <AccountNumber>102425XXXXXX1423</AccountNumber>
                      <AccountNumberSubID>1254</AccountNumberSubID>
                      <AccountHolderCount>0</AccountHolderCount>
                    </PHDETAIL>
                  </CONSCRED>
                  <CONSDFLT>
                    <DFDETAIL>
                      <CreditPurpose>R</CreditPurpose>
                      <CreditorName>Experian Credit Service DS</CreditorName>
                      <CreditorIndustryCd>12</CreditorIndustryCd>
                      <AccountType>CC</AccountType>
                      <AccountRelationship>1</AccountRelationship>
                      <AccountDate>12-01-2022</AccountDate>
                      <AccountStatus>O</AccountStatus>
                      <PaymentStatus>D</PaymentStatus>
                      <DefaultAmount>5362</DefaultAmount>
                      <NewArrangementType />
                      <OriginalDefaultAmt>5362</OriginalDefaultAmt>
                      <OriginalDefaultDate>12-01-2022</OriginalDefaultDate>
                      <AccountNumber>3015987654</AccountNumber>
                      <AccountNumberSubID>02</AccountNumberSubID>
                    </DFDETAIL>
                  </CONSDFLT>
                  <CONSDFLT>
                    <DFDETAIL>
                      <CreditPurpose>R</CreditPurpose>
                      <CreditorName>Experian_PPV</CreditorName>
                      <CreditorIndustryCd>3</CreditorIndustryCd>
                      <AccountType>CC</AccountType>
                      <AccountRelationship>1</AccountRelationship>
                      <AccountDate>24-11-2020</AccountDate>
                      <AccountStatus>C</AccountStatus>
                      <PaymentStatus>P</PaymentStatus>
                      <DefaultAmount>5000</DefaultAmount>
                      <NewArrangementType />
                      <OriginalDefaultAmt>5000</OriginalDefaultAmt>
                      <OriginalDefaultDate>15-10-2020</OriginalDefaultDate>
                      <AccountNumber>123456789</AccountNumber>
                      <AccountNumberSubID />
                    </DFDETAIL>
                    <DFDETAIL>
                      <CreditPurpose>R</CreditPurpose>
                      <CreditorName>Experian_PPV</CreditorName>
                      <CreditorIndustryCd>3</CreditorIndustryCd>
                      <AccountType>CC</AccountType>
                      <AccountRelationship>1</AccountRelationship>
                      <AccountDate>15-10-2020</AccountDate>
                      <AccountStatus>O</AccountStatus>
                      <PaymentStatus>D</PaymentStatus>
                      <DefaultAmount>5000</DefaultAmount>
                      <NewArrangementType />
                      <OriginalDefaultAmt>5000</OriginalDefaultAmt>
                      <OriginalDefaultDate>15-10-2020</OriginalDefaultDate>
                      <AccountNumber>123456789</AccountNumber>
                      <AccountNumberSubID />
                    </DFDETAIL>
                  </CONSDFLT>
                  <CONSDFLT>
                    <DFDETAIL>
                      <CreditPurpose>R</CreditPurpose>
                      <CreditorName>Experian_PPV</CreditorName>
                      <CreditorIndustryCd>3</CreditorIndustryCd>
                      <AccountType>OD</AccountType>
                      <AccountRelationship>1</AccountRelationship>
                      <AccountDate>03-03-2022</AccountDate>
                      <AccountStatus>O</AccountStatus>
                      <PaymentStatus>D</PaymentStatus>
                      <DefaultAmount>5663</DefaultAmount>
                      <NewArrangementType />
                      <OriginalDefaultAmt>5663</OriginalDefaultAmt>
                      <OriginalDefaultDate>03-03-2022</OriginalDefaultDate>
                      <AccountNumber>663996</AccountNumber>
                      <AccountNumberSubID />
                    </DFDETAIL>
                  </CONSDFLT>
                  <CONSDFLT>
                    <DFDETAIL>
                      <CreditPurpose>R</CreditPurpose>
                      <CreditorName>Experian_PPV</CreditorName>
                      <CreditorIndustryCd>3</CreditorIndustryCd>
                      <AccountType>CC</AccountType>
                      <AccountRelationship>1</AccountRelationship>
                      <AccountDate>13-01-2022</AccountDate>
                      <AccountStatus>O</AccountStatus>
                      <PaymentStatus>D</PaymentStatus>
                      <DefaultAmount>2505</DefaultAmount>
                      <NewArrangementType />
                      <OriginalDefaultAmt>2000</OriginalDefaultAmt>
                      <OriginalDefaultDate>10-10-2020</OriginalDefaultDate>
                      <AccountNumber>12345678</AccountNumber>
                      <AccountNumberSubID />
                    </DFDETAIL>
                    <DFDETAIL>
                      <CreditPurpose>R</CreditPurpose>
                      <CreditorName>Experian_PPV</CreditorName>
                      <CreditorIndustryCd>3</CreditorIndustryCd>
                      <AccountType>CC</AccountType>
                      <AccountRelationship>1</AccountRelationship>
                      <AccountDate>13-01-2022</AccountDate>
                      <AccountStatus>O</AccountStatus>
                      <PaymentStatus>D</PaymentStatus>
                      <DefaultAmount>2500</DefaultAmount>
                      <NewArrangementType />
                      <OriginalDefaultAmt>2000</OriginalDefaultAmt>
                      <OriginalDefaultDate>10-10-2020</OriginalDefaultDate>
                      <AccountNumber>12345678</AccountNumber>
                      <AccountNumberSubID />
                    </DFDETAIL>
                    <DFDETAIL>
                      <CreditPurpose>R</CreditPurpose>
                      <CreditorName>Experian_PPV</CreditorName>
                      <CreditorIndustryCd>3</CreditorIndustryCd>
                      <AccountType>CC</AccountType>
                      <AccountRelationship>1</AccountRelationship>
                      <AccountDate>24-11-2020</AccountDate>
                      <AccountStatus>O</AccountStatus>
                      <PaymentStatus>D</PaymentStatus>
                      <DefaultAmount>2000</DefaultAmount>
                      <NewArrangementType />
                      <OriginalDefaultAmt>2000</OriginalDefaultAmt>
                      <OriginalDefaultDate>10-10-2020</OriginalDefaultDate>
                      <AccountNumber>12345678</AccountNumber>
                      <AccountNumberSubID />
                    </DFDETAIL>
                    <DFDETAIL>
                      <CreditPurpose>R</CreditPurpose>
                      <CreditorName>Experian_PPV</CreditorName>
                      <CreditorIndustryCd>3</CreditorIndustryCd>
                      <AccountType>CC</AccountType>
                      <AccountRelationship>1</AccountRelationship>
                      <AccountDate>23-11-2020</AccountDate>
                      <AccountStatus>O</AccountStatus>
                      <PaymentStatus>D</PaymentStatus>
                      <DefaultAmount>3000</DefaultAmount>
                      <NewArrangementType />
                      <OriginalDefaultAmt>2000</OriginalDefaultAmt>
                      <OriginalDefaultDate>10-10-2020</OriginalDefaultDate>
                      <AccountNumber>12345678</AccountNumber>
                      <AccountNumberSubID />
                    </DFDETAIL>
                    <DFDETAIL>
                      <CreditPurpose>R</CreditPurpose>
                      <CreditorName>Experian_PPV</CreditorName>
                      <CreditorIndustryCd>3</CreditorIndustryCd>
                      <AccountType>CC</AccountType>
                      <AccountRelationship>1</AccountRelationship>
                      <AccountDate>10-10-2020</AccountDate>
                      <AccountStatus>O</AccountStatus>
                      <PaymentStatus>D</PaymentStatus>
                      <DefaultAmount>2000</DefaultAmount>
                      <NewArrangementType />
                      <OriginalDefaultAmt>2000</OriginalDefaultAmt>
                      <OriginalDefaultDate>10-10-2020</OriginalDefaultDate>
                      <AccountNumber>12345678</AccountNumber>
                      <AccountNumberSubID />
                    </DFDETAIL>
                  </CONSDFLT>
                  <CONSDFLT>
                    <DFDETAIL>
                      <CreditPurpose>R</CreditPurpose>
                      <CreditorName>Experian_PPV</CreditorName>
                      <CreditorIndustryCd>3</CreditorIndustryCd>
                      <AccountType>AL</AccountType>
                      <AccountRelationship>1</AccountRelationship>
                      <AccountDate>18-11-2020</AccountDate>
                      <AccountStatus>O</AccountStatus>
                      <PaymentStatus>D</PaymentStatus>
                      <DefaultAmount>1000</DefaultAmount>
                      <NewArrangementType />
                      <OriginalDefaultAmt>1000</OriginalDefaultAmt>
                      <OriginalDefaultDate>17-10-2020</OriginalDefaultDate>
                      <AccountNumber>66111891</AccountNumber>
                      <AccountNumberSubID />
                    </DFDETAIL>
                    <DFDETAIL>
                      <CreditPurpose>R</CreditPurpose>
                      <CreditorName>Experian_PPV</CreditorName>
                      <CreditorIndustryCd>3</CreditorIndustryCd>
                      <AccountType>AL</AccountType>
                      <AccountRelationship>1</AccountRelationship>
                      <AccountDate>17-10-2020</AccountDate>
                      <AccountStatus>O</AccountStatus>
                      <PaymentStatus>D</PaymentStatus>
                      <DefaultAmount>1000</DefaultAmount>
                      <NewArrangementType />
                      <OriginalDefaultAmt>1000</OriginalDefaultAmt>
                      <OriginalDefaultDate>17-10-2020</OriginalDefaultDate>
                      <AccountNumber>66111891</AccountNumber>
                      <AccountNumberSubID />
                    </DFDETAIL>
                  </CONSDFLT>
                  <CONSDFLT>
                    <DFDETAIL>
                      <CreditPurpose>R</CreditPurpose>
                      <CreditorName>Experian Credit Service DS</CreditorName>
                      <CreditorIndustryCd>12</CreditorIndustryCd>
                      <AccountType>PF</AccountType>
                      <AccountRelationship>1</AccountRelationship>
                      <AccountDate>22-01-2020</AccountDate>
                      <AccountStatus>O</AccountStatus>
                      <PaymentStatus>D</PaymentStatus>
                      <DefaultAmount>45870</DefaultAmount>
                      <NewArrangementType />
                      <OriginalDefaultAmt>45874</OriginalDefaultAmt>
                      <OriginalDefaultDate>09-01-2020</OriginalDefaultDate>
                      <AccountNumber>10012020</AccountNumber>
                      <AccountNumberSubID>05</AccountNumberSubID>
                    </DFDETAIL>
                    <DFDETAIL>
                      <CreditPurpose>R</CreditPurpose>
                      <CreditorName>Experian Credit Service DS</CreditorName>
                      <CreditorIndustryCd>12</CreditorIndustryCd>
                      <AccountType>PF</AccountType>
                      <AccountRelationship>1</AccountRelationship>
                      <AccountDate>17-01-2020</AccountDate>
                      <AccountStatus>O</AccountStatus>
                      <PaymentStatus>D</PaymentStatus>
                      <DefaultAmount>45875</DefaultAmount>
                      <NewArrangementType />
                      <OriginalDefaultAmt>45874</OriginalDefaultAmt>
                      <OriginalDefaultDate>09-01-2020</OriginalDefaultDate>
                      <AccountNumber>10012020</AccountNumber>
                      <AccountNumberSubID>05</AccountNumberSubID>
                    </DFDETAIL>
                    <DFDETAIL>
                      <CreditPurpose>R</CreditPurpose>
                      <CreditorName>Experian Credit Service DS</CreditorName>
                      <CreditorIndustryCd>12</CreditorIndustryCd>
                      <AccountType>PF</AccountType>
                      <AccountRelationship>1</AccountRelationship>
                      <AccountDate>09-01-2020</AccountDate>
                      <AccountStatus>O</AccountStatus>
                      <PaymentStatus>D</PaymentStatus>
                      <DefaultAmount>45874</DefaultAmount>
                      <NewArrangementType />
                      <OriginalDefaultAmt>45874</OriginalDefaultAmt>
                      <OriginalDefaultDate>09-01-2020</OriginalDefaultDate>
                      <AccountNumber>10012020</AccountNumber>
                      <AccountNumberSubID>05</AccountNumberSubID>
                    </DFDETAIL>
                  </CONSDFLT>
                  <CONSDFLT>
                    <DFDETAIL>
                      <CreditPurpose>R</CreditPurpose>
                      <CreditorName>Experian_PPV</CreditorName>
                      <CreditorIndustryCd>3</CreditorIndustryCd>
                      <AccountType>AL</AccountType>
                      <AccountRelationship>1</AccountRelationship>
                      <AccountDate>01-03-2022</AccountDate>
                      <AccountStatus>O</AccountStatus>
                      <PaymentStatus>D</PaymentStatus>
                      <DefaultAmount>5576</DefaultAmount>
                      <NewArrangementType />
                      <OriginalDefaultAmt>5326</OriginalDefaultAmt>
                      <OriginalDefaultDate>19-01-2022</OriginalDefaultDate>
                      <AccountNumber>654654654</AccountNumber>
                      <AccountNumberSubID />
                    </DFDETAIL>
                    <DFDETAIL>
                      <CreditPurpose>R</CreditPurpose>
                      <CreditorName>Experian_PPV</CreditorName>
                      <CreditorIndustryCd>3</CreditorIndustryCd>
                      <AccountType>AL</AccountType>
                      <AccountRelationship>1</AccountRelationship>
                      <AccountDate>19-01-2022</AccountDate>
                      <AccountStatus>O</AccountStatus>
                      <PaymentStatus>D</PaymentStatus>
                      <DefaultAmount>5326</DefaultAmount>
                      <NewArrangementType />
                      <OriginalDefaultAmt>5326</OriginalDefaultAmt>
                      <OriginalDefaultDate>19-01-2022</OriginalDefaultDate>
                      <AccountNumber>654654654</AccountNumber>
                      <AccountNumberSubID />
                    </DFDETAIL>
                  </CONSDFLT>
                  <CONSCCP>
                    <CreditPurpose>1</CreditPurpose>
                    <CreditorName>Test Speciality Finance</CreditorName>
                    <CreditorIndustryCd>7</CreditorIndustryCd>
                    <AccountNumber>8578996</AccountNumber>
                    <AccountNumberSubID>/</AccountNumberSubID>
                  </CONSCCP>
                  <CONSCCP>
                    <CreditPurpose>1</CreditPurpose>
                    <CreditorName>BANK 2</CreditorName>
                    <CreditorIndustryCd>4</CreditorIndustryCd>
                    <AccountNumber>165647687</AccountNumber>
                    <AccountNumberSubID>/</AccountNumberSubID>
                  </CONSCCP>
                  <CRTPUBRC>
                    <CaseTypeCd>2</CaseTypeCd>
                    <CourtCaseNumber>VIC12345902</CourtCaseNumber>
                    <CaseStatusCd />
                    <CaseOpenDate>05-03-2018</CaseOpenDate>
                    <CaseCloseDate />
                    <CaseStatusDate />
                    <BTRUSTEE>
                      <TrusteeNumber>1</TrusteeNumber>
                      <DateStarted>05-03-2018</DateStarted>
                      <TrusteeGivenNames />
                      <TrusteeBusinessName>ITSA</TrusteeBusinessName>
                      <TrusteeBusinessAddress>PO BOX 10443 BRISBANE ADELAIDE STREET QLD 4000</TrusteeBusinessAddress>
                      <TrusteeContactName>OFFICIAL TRUSTEE IN BANKRUPTCY</TrusteeContactName>
                      <TrusteeContactPhone>1300 364 785</TrusteeContactPhone>
                    </BTRUSTEE>
                  </CRTPUBRC>
                  <ENQRHIST>
                    <EnquiryDate>29-04-2024</EnquiryDate>
                    <EnquiryPurposeCd>1</EnquiryPurposeCd>
                    <EnquiryConsiderationAmt>0</EnquiryConsiderationAmt>
                    <BureauMemberIndustryCd>4</BureauMemberIndustryCd>
                    <EnquiryAccountTypeCode />
                    <ApplicationRole>1</ApplicationRole>
                    <EnqCreditPurpose>1</EnqCreditPurpose>
                    <BureauMemberName>HSBC Bank Australia Ltd</BureauMemberName>
                  </ENQRHIST>
                  <ENQRHIST>
                    <EnquiryDate>25-04-2024</EnquiryDate>
                    <EnquiryPurposeCd>1</EnquiryPurposeCd>
                    <EnquiryConsiderationAmt>0</EnquiryConsiderationAmt>
                    <BureauMemberIndustryCd>4</BureauMemberIndustryCd>
                    <EnquiryAccountTypeCode>CC</EnquiryAccountTypeCode>
                    <ApplicationRole>1</ApplicationRole>
                    <EnqCreditPurpose>1</EnqCreditPurpose>
                    <BureauMemberName>HSBC Bank Australia Ltd</BureauMemberName>
                  </ENQRHIST>
                  <ENQRHIST>
                    <EnquiryDate>18-04-2024</EnquiryDate>
                    <EnquiryPurposeCd>1</EnquiryPurposeCd>
                    <EnquiryConsiderationAmt>0</EnquiryConsiderationAmt>
                    <BureauMemberIndustryCd>4</BureauMemberIndustryCd>
                    <EnquiryAccountTypeCode />
                    <ApplicationRole>1</ApplicationRole>
                    <EnqCreditPurpose>1</EnqCreditPurpose>
                    <BureauMemberName>HSBC Bank Australia Ltd</BureauMemberName>
                  </ENQRHIST>
                  <ENQRHIST>
                    <EnquiryDate>04-04-2024</EnquiryDate>
                    <EnquiryPurposeCd>1</EnquiryPurposeCd>
                    <EnquiryConsiderationAmt>0</EnquiryConsiderationAmt>
                    <BureauMemberIndustryCd>4</BureauMemberIndustryCd>
                    <EnquiryAccountTypeCode />
                    <ApplicationRole>1</ApplicationRole>
                    <EnqCreditPurpose>1</EnqCreditPurpose>
                    <BureauMemberName>HSBC Bank Australia Ltd</BureauMemberName>
                  </ENQRHIST>
                  <ENQRHIST>
                    <EnquiryDate>26-03-2024</EnquiryDate>
                    <EnquiryPurposeCd>1</EnquiryPurposeCd>
                    <EnquiryConsiderationAmt>0</EnquiryConsiderationAmt>
                    <BureauMemberIndustryCd>4</BureauMemberIndustryCd>
                    <EnquiryAccountTypeCode />
                    <ApplicationRole>1</ApplicationRole>
                    <EnqCreditPurpose>1</EnqCreditPurpose>
                    <BureauMemberName>HSBC Bank Australia Ltd</BureauMemberName>
                  </ENQRHIST>
                  <ENQRHIST>
                    <EnquiryDate>13-03-2024</EnquiryDate>
                    <EnquiryPurposeCd>1</EnquiryPurposeCd>
                    <EnquiryConsiderationAmt>0</EnquiryConsiderationAmt>
                    <BureauMemberIndustryCd>4</BureauMemberIndustryCd>
                    <EnquiryAccountTypeCode>CC</EnquiryAccountTypeCode>
                    <ApplicationRole>1</ApplicationRole>
                    <EnqCreditPurpose>1</EnqCreditPurpose>
                    <BureauMemberName>HSBC Bank Australia Ltd</BureauMemberName>
                  </ENQRHIST>
                  <ENQRHIST>
                    <EnquiryDate>23-02-2024</EnquiryDate>
                    <EnquiryPurposeCd>1</EnquiryPurposeCd>
                    <EnquiryConsiderationAmt>0</EnquiryConsiderationAmt>
                    <BureauMemberIndustryCd>4</BureauMemberIndustryCd>
                    <EnquiryAccountTypeCode>CC</EnquiryAccountTypeCode>
                    <ApplicationRole>1</ApplicationRole>
                    <EnqCreditPurpose>1</EnqCreditPurpose>
                    <BureauMemberName>HSBC Bank Australia Ltd</BureauMemberName>
                  </ENQRHIST>
                  <ENQRHIST>
                    <EnquiryDate>15-02-2024</EnquiryDate>
                    <EnquiryPurposeCd>1</EnquiryPurposeCd>
                    <EnquiryConsiderationAmt>0</EnquiryConsiderationAmt>
                    <BureauMemberIndustryCd>4</BureauMemberIndustryCd>
                    <EnquiryAccountTypeCode>CC</EnquiryAccountTypeCode>
                    <ApplicationRole>1</ApplicationRole>
                    <EnqCreditPurpose>1</EnqCreditPurpose>
                    <BureauMemberName>HSBC Bank Australia Ltd</BureauMemberName>
                  </ENQRHIST>
                  <ENQRHIST>
                    <EnquiryDate>03-10-2023</EnquiryDate>
                    <EnquiryPurposeCd>1</EnquiryPurposeCd>
                    <EnquiryConsiderationAmt>0</EnquiryConsiderationAmt>
                    <BureauMemberIndustryCd>4</BureauMemberIndustryCd>
                    <EnquiryAccountTypeCode>CC</EnquiryAccountTypeCode>
                    <ApplicationRole>1</ApplicationRole>
                    <EnqCreditPurpose>1</EnqCreditPurpose>
                    <BureauMemberName>HSBC Bank Australia Ltd</BureauMemberName>
                  </ENQRHIST>
                  <ENQRHIST>
                    <EnquiryDate>09-03-2023</EnquiryDate>
                    <EnquiryPurposeCd>1</EnquiryPurposeCd>
                    <EnquiryConsiderationAmt>50000</EnquiryConsiderationAmt>
                    <BureauMemberIndustryCd>4</BureauMemberIndustryCd>
                    <EnquiryAccountTypeCode />
                    <ApplicationRole>1</ApplicationRole>
                    <EnqCreditPurpose>1</EnqCreditPurpose>
                    <BureauMemberName>Experian Credit Service</BureauMemberName>
                  </ENQRHIST>
                  <ENQRHIST>
                    <EnquiryDate>11-01-2023</EnquiryDate>
                    <EnquiryPurposeCd>1</EnquiryPurposeCd>
                    <EnquiryConsiderationAmt>50000</EnquiryConsiderationAmt>
                    <BureauMemberIndustryCd>4</BureauMemberIndustryCd>
                    <EnquiryAccountTypeCode />
                    <ApplicationRole>1</ApplicationRole>
                    <EnqCreditPurpose>1</EnqCreditPurpose>
                    <BureauMemberName>Experian Credit Service</BureauMemberName>
                  </ENQRHIST>
                  <ENQRHIST>
                    <EnquiryDate>15-11-2022</EnquiryDate>
                    <EnquiryPurposeCd>1</EnquiryPurposeCd>
                    <EnquiryConsiderationAmt>0</EnquiryConsiderationAmt>
                    <BureauMemberIndustryCd>4</BureauMemberIndustryCd>
                    <EnquiryAccountTypeCode>CC</EnquiryAccountTypeCode>
                    <ApplicationRole>1</ApplicationRole>
                    <EnqCreditPurpose>1</EnqCreditPurpose>
                    <BureauMemberName>HSBC Bank Australia Ltd</BureauMemberName>
                  </ENQRHIST>
                  <ENQRHIST>
                    <EnquiryDate>27-10-2022</EnquiryDate>
                    <EnquiryPurposeCd>1</EnquiryPurposeCd>
                    <EnquiryConsiderationAmt>0</EnquiryConsiderationAmt>
                    <BureauMemberIndustryCd>4</BureauMemberIndustryCd>
                    <EnquiryAccountTypeCode>CC</EnquiryAccountTypeCode>
                    <ApplicationRole>1</ApplicationRole>
                    <EnqCreditPurpose>1</EnqCreditPurpose>
                    <BureauMemberName>HSBC Bank Australia Ltd</BureauMemberName>
                  </ENQRHIST>
                  <ENQRHIST>
                    <EnquiryDate>05-10-2022</EnquiryDate>
                    <EnquiryPurposeCd>1</EnquiryPurposeCd>
                    <EnquiryConsiderationAmt>50000</EnquiryConsiderationAmt>
                    <BureauMemberIndustryCd>4</BureauMemberIndustryCd>
                    <EnquiryAccountTypeCode />
                    <ApplicationRole>1</ApplicationRole>
                    <EnqCreditPurpose>1</EnqCreditPurpose>
                    <BureauMemberName>Experian Credit Service</BureauMemberName>
                  </ENQRHIST>
                  <ENQRHIST>
                    <EnquiryDate>26-09-2022</EnquiryDate>
                    <EnquiryPurposeCd>1</EnquiryPurposeCd>
                    <EnquiryConsiderationAmt>0</EnquiryConsiderationAmt>
                    <BureauMemberIndustryCd>4</BureauMemberIndustryCd>
                    <EnquiryAccountTypeCode>CC</EnquiryAccountTypeCode>
                    <ApplicationRole>1</ApplicationRole>
                    <EnqCreditPurpose>1</EnqCreditPurpose>
                    <BureauMemberName>HSBC Bank Australia Ltd</BureauMemberName>
                  </ENQRHIST>
                  <ENQRHIST>
                    <EnquiryDate>21-09-2022</EnquiryDate>
                    <EnquiryPurposeCd>1</EnquiryPurposeCd>
                    <EnquiryConsiderationAmt>50000</EnquiryConsiderationAmt>
                    <BureauMemberIndustryCd>4</BureauMemberIndustryCd>
                    <EnquiryAccountTypeCode />
                    <ApplicationRole>1</ApplicationRole>
                    <EnqCreditPurpose>1</EnqCreditPurpose>
                    <BureauMemberName>Experian Credit Service</BureauMemberName>
                  </ENQRHIST>
                  <ENQRHIST>
                    <EnquiryDate>16-09-2022</EnquiryDate>
                    <EnquiryPurposeCd>1</EnquiryPurposeCd>
                    <EnquiryConsiderationAmt>50000</EnquiryConsiderationAmt>
                    <BureauMemberIndustryCd />
                    <EnquiryAccountTypeCode />
                    <ApplicationRole>1</ApplicationRole>
                    <EnqCreditPurpose>1</EnqCreditPurpose>
                    <BureauMemberName>REST Test Company</BureauMemberName>
                  </ENQRHIST>
                  <ENQRHIST>
                    <EnquiryDate>16-09-2022</EnquiryDate>
                    <EnquiryPurposeCd>1</EnquiryPurposeCd>
                    <EnquiryConsiderationAmt>50000</EnquiryConsiderationAmt>
                    <BureauMemberIndustryCd>4</BureauMemberIndustryCd>
                    <EnquiryAccountTypeCode />
                    <ApplicationRole>1</ApplicationRole>
                    <EnqCreditPurpose>1</EnqCreditPurpose>
                    <BureauMemberName>Experian Credit Service</BureauMemberName>
                  </ENQRHIST>
                  <ENQRHIST>
                    <EnquiryDate>07-09-2022</EnquiryDate>
                    <EnquiryPurposeCd>1</EnquiryPurposeCd>
                    <EnquiryConsiderationAmt>50000</EnquiryConsiderationAmt>
                    <BureauMemberIndustryCd>4</BureauMemberIndustryCd>
                    <EnquiryAccountTypeCode />
                    <ApplicationRole>1</ApplicationRole>
                    <EnqCreditPurpose>1</EnqCreditPurpose>
                    <BureauMemberName>Experian Credit Service</BureauMemberName>
                  </ENQRHIST>
                  <ENQRHIST>
                    <EnquiryDate>05-09-2022</EnquiryDate>
                    <EnquiryPurposeCd>1</EnquiryPurposeCd>
                    <EnquiryConsiderationAmt>0</EnquiryConsiderationAmt>
                    <BureauMemberIndustryCd>4</BureauMemberIndustryCd>
                    <EnquiryAccountTypeCode>CC</EnquiryAccountTypeCode>
                    <ApplicationRole>1</ApplicationRole>
                    <EnqCreditPurpose>1</EnqCreditPurpose>
                    <BureauMemberName>HSBC Bank Australia Ltd</BureauMemberName>
                  </ENQRHIST>
                  <ENQRHIST>
                    <EnquiryDate>30-08-2022</EnquiryDate>
                    <EnquiryPurposeCd>1</EnquiryPurposeCd>
                    <EnquiryConsiderationAmt>0</EnquiryConsiderationAmt>
                    <BureauMemberIndustryCd>4</BureauMemberIndustryCd>
                    <EnquiryAccountTypeCode />
                    <ApplicationRole>1</ApplicationRole>
                    <EnqCreditPurpose>1</EnqCreditPurpose>
                    <BureauMemberName>Experian Credit Service</BureauMemberName>
                  </ENQRHIST>
                  <ENQRHIST>
                    <EnquiryDate>30-08-2022</EnquiryDate>
                    <EnquiryPurposeCd>1</EnquiryPurposeCd>
                    <EnquiryConsiderationAmt>50000</EnquiryConsiderationAmt>
                    <BureauMemberIndustryCd>4</BureauMemberIndustryCd>
                    <EnquiryAccountTypeCode />
                    <ApplicationRole>1</ApplicationRole>
                    <EnqCreditPurpose>1</EnqCreditPurpose>
                    <BureauMemberName>Experian Credit Service</BureauMemberName>
                  </ENQRHIST>
                  <ENQRHIST>
                    <EnquiryDate>22-08-2022</EnquiryDate>
                    <EnquiryPurposeCd>1</EnquiryPurposeCd>
                    <EnquiryConsiderationAmt>0</EnquiryConsiderationAmt>
                    <BureauMemberIndustryCd>4</BureauMemberIndustryCd>
                    <EnquiryAccountTypeCode>CC</EnquiryAccountTypeCode>
                    <ApplicationRole>1</ApplicationRole>
                    <EnqCreditPurpose>1</EnqCreditPurpose>
                    <BureauMemberName>HSBC Bank Australia Ltd</BureauMemberName>
                  </ENQRHIST>
                  <ENQRHIST>
                    <EnquiryDate>08-08-2022</EnquiryDate>
                    <EnquiryPurposeCd>1</EnquiryPurposeCd>
                    <EnquiryConsiderationAmt>0</EnquiryConsiderationAmt>
                    <BureauMemberIndustryCd>4</BureauMemberIndustryCd>
                    <EnquiryAccountTypeCode>CC</EnquiryAccountTypeCode>
                    <ApplicationRole>1</ApplicationRole>
                    <EnqCreditPurpose>1</EnqCreditPurpose>
                    <BureauMemberName>HSBC Bank Australia Ltd</BureauMemberName>
                  </ENQRHIST>
                  <ENQRHIST>
                    <EnquiryDate>25-07-2022</EnquiryDate>
                    <EnquiryPurposeCd>1</EnquiryPurposeCd>
                    <EnquiryConsiderationAmt>0</EnquiryConsiderationAmt>
                    <BureauMemberIndustryCd>4</BureauMemberIndustryCd>
                    <EnquiryAccountTypeCode>CC</EnquiryAccountTypeCode>
                    <ApplicationRole>1</ApplicationRole>
                    <EnqCreditPurpose>1</EnqCreditPurpose>
                    <BureauMemberName>HSBC Bank Australia Ltd</BureauMemberName>
                  </ENQRHIST>
                  <ENQRHIST>
                    <EnquiryDate>19-07-2022</EnquiryDate>
                    <EnquiryPurposeCd>1</EnquiryPurposeCd>
                    <EnquiryConsiderationAmt>50000</EnquiryConsiderationAmt>
                    <BureauMemberIndustryCd>4</BureauMemberIndustryCd>
                    <EnquiryAccountTypeCode />
                    <ApplicationRole>1</ApplicationRole>
                    <EnqCreditPurpose>1</EnqCreditPurpose>
                    <BureauMemberName>Experian Credit Service</BureauMemberName>
                  </ENQRHIST>
                  <ENQRHIST>
                    <EnquiryDate>23-06-2022</EnquiryDate>
                    <EnquiryPurposeCd>1</EnquiryPurposeCd>
                    <EnquiryConsiderationAmt>50000</EnquiryConsiderationAmt>
                    <BureauMemberIndustryCd>4</BureauMemberIndustryCd>
                    <EnquiryAccountTypeCode />
                    <ApplicationRole>1</ApplicationRole>
                    <EnqCreditPurpose>1</EnqCreditPurpose>
                    <BureauMemberName>Experian Credit Service</BureauMemberName>
                  </ENQRHIST>
                  <ENQRHIST>
                    <EnquiryDate>18-05-2022</EnquiryDate>
                    <EnquiryPurposeCd>1</EnquiryPurposeCd>
                    <EnquiryConsiderationAmt>50000</EnquiryConsiderationAmt>
                    <BureauMemberIndustryCd>4</BureauMemberIndustryCd>
                    <EnquiryAccountTypeCode />
                    <ApplicationRole>1</ApplicationRole>
                    <EnqCreditPurpose>1</EnqCreditPurpose>
                    <BureauMemberName>Experian Credit Service</BureauMemberName>
                  </ENQRHIST>
                  <ENQRHIST>
                    <EnquiryDate>11-04-2022</EnquiryDate>
                    <EnquiryPurposeCd>1</EnquiryPurposeCd>
                    <EnquiryConsiderationAmt>0</EnquiryConsiderationAmt>
                    <BureauMemberIndustryCd>4</BureauMemberIndustryCd>
                    <EnquiryAccountTypeCode>CC</EnquiryAccountTypeCode>
                    <ApplicationRole>1</ApplicationRole>
                    <EnqCreditPurpose>1</EnqCreditPurpose>
                    <BureauMemberName>HSBC Bank Australia Ltd</BureauMemberName>
                  </ENQRHIST>
                  <ENQRHIST>
                    <EnquiryDate>04-04-2022</EnquiryDate>
                    <EnquiryPurposeCd>1</EnquiryPurposeCd>
                    <EnquiryConsiderationAmt>0</EnquiryConsiderationAmt>
                    <BureauMemberIndustryCd>4</BureauMemberIndustryCd>
                    <EnquiryAccountTypeCode>CC</EnquiryAccountTypeCode>
                    <ApplicationRole>1</ApplicationRole>
                    <EnqCreditPurpose>1</EnqCreditPurpose>
                    <BureauMemberName>HSBC Bank Australia Ltd</BureauMemberName>
                  </ENQRHIST>
                  <ENQRHIST>
                    <EnquiryDate>28-03-2022</EnquiryDate>
                    <EnquiryPurposeCd>1</EnquiryPurposeCd>
                    <EnquiryConsiderationAmt>0</EnquiryConsiderationAmt>
                    <BureauMemberIndustryCd>4</BureauMemberIndustryCd>
                    <EnquiryAccountTypeCode>CC</EnquiryAccountTypeCode>
                    <ApplicationRole>1</ApplicationRole>
                    <EnqCreditPurpose>1</EnqCreditPurpose>
                    <BureauMemberName>HSBC Bank Australia Ltd</BureauMemberName>
                  </ENQRHIST>
                  <ENQRHIST>
                    <EnquiryDate>02-03-2022</EnquiryDate>
                    <EnquiryPurposeCd>1</EnquiryPurposeCd>
                    <EnquiryConsiderationAmt>-1</EnquiryConsiderationAmt>
                    <BureauMemberIndustryCd>4</BureauMemberIndustryCd>
                    <EnquiryAccountTypeCode>PF</EnquiryAccountTypeCode>
                    <ApplicationRole>1</ApplicationRole>
                    <EnqCreditPurpose>2</EnqCreditPurpose>
                    <BureauMemberName>Experian Credit Service</BureauMemberName>
                  </ENQRHIST>
                  <ENQRHIST>
                    <EnquiryDate>01-03-2022</EnquiryDate>
                    <EnquiryPurposeCd>1</EnquiryPurposeCd>
                    <EnquiryConsiderationAmt>-1</EnquiryConsiderationAmt>
                    <BureauMemberIndustryCd>4</BureauMemberIndustryCd>
                    <EnquiryAccountTypeCode>RM</EnquiryAccountTypeCode>
                    <ApplicationRole>1</ApplicationRole>
                    <EnqCreditPurpose>1</EnqCreditPurpose>
                    <BureauMemberName>Experian Credit Service</BureauMemberName>
                  </ENQRHIST>
                  <ENQRHIST>
                    <EnquiryDate>28-02-2022</EnquiryDate>
                    <EnquiryPurposeCd>1</EnquiryPurposeCd>
                    <EnquiryConsiderationAmt>500</EnquiryConsiderationAmt>
                    <BureauMemberIndustryCd>4</BureauMemberIndustryCd>
                    <EnquiryAccountTypeCode>CC</EnquiryAccountTypeCode>
                    <ApplicationRole>1</ApplicationRole>
                    <EnqCreditPurpose>1</EnqCreditPurpose>
                    <BureauMemberName>Experian Credit Service</BureauMemberName>
                  </ENQRHIST>
                  <ENQRHIST>
                    <EnquiryDate>26-02-2022</EnquiryDate>
                    <EnquiryPurposeCd>1</EnquiryPurposeCd>
                    <EnquiryConsiderationAmt>50000</EnquiryConsiderationAmt>
                    <BureauMemberIndustryCd>4</BureauMemberIndustryCd>
                    <EnquiryAccountTypeCode />
                    <ApplicationRole>1</ApplicationRole>
                    <EnqCreditPurpose>1</EnqCreditPurpose>
                    <BureauMemberName>Experian Credit Service</BureauMemberName>
                  </ENQRHIST>
                  <ENQRHIST>
                    <EnquiryDate>22-02-2022</EnquiryDate>
                    <EnquiryPurposeCd>1</EnquiryPurposeCd>
                    <EnquiryConsiderationAmt>0</EnquiryConsiderationAmt>
                    <BureauMemberIndustryCd>4</BureauMemberIndustryCd>
                    <EnquiryAccountTypeCode>CC</EnquiryAccountTypeCode>
                    <ApplicationRole>1</ApplicationRole>
                    <EnqCreditPurpose>1</EnqCreditPurpose>
                    <BureauMemberName>HSBC Bank Australia Ltd</BureauMemberName>
                  </ENQRHIST>
                  <ENQRHIST>
                    <EnquiryDate>11-02-2022</EnquiryDate>
                    <EnquiryPurposeCd>1</EnquiryPurposeCd>
                    <EnquiryConsiderationAmt>0</EnquiryConsiderationAmt>
                    <BureauMemberIndustryCd>4</BureauMemberIndustryCd>
                    <EnquiryAccountTypeCode>CC</EnquiryAccountTypeCode>
                    <ApplicationRole>1</ApplicationRole>
                    <EnqCreditPurpose>1</EnqCreditPurpose>
                    <BureauMemberName>HSBC Bank Australia Ltd</BureauMemberName>
                  </ENQRHIST>
                  <ENQRHIST>
                    <EnquiryDate>27-01-2022</EnquiryDate>
                    <EnquiryPurposeCd>1</EnquiryPurposeCd>
                    <EnquiryConsiderationAmt>50000</EnquiryConsiderationAmt>
                    <BureauMemberIndustryCd>4</BureauMemberIndustryCd>
                    <EnquiryAccountTypeCode />
                    <ApplicationRole>1</ApplicationRole>
                    <EnqCreditPurpose>1</EnqCreditPurpose>
                    <BureauMemberName>Experian Credit Service</BureauMemberName>
                  </ENQRHIST>
                  <ENQRHIST>
                    <EnquiryDate>20-01-2022</EnquiryDate>
                    <EnquiryPurposeCd>1</EnquiryPurposeCd>
                    <EnquiryConsiderationAmt>50000</EnquiryConsiderationAmt>
                    <BureauMemberIndustryCd>4</BureauMemberIndustryCd>
                    <EnquiryAccountTypeCode />
                    <ApplicationRole>1</ApplicationRole>
                    <EnqCreditPurpose>1</EnqCreditPurpose>
                    <BureauMemberName>Experian Credit Service</BureauMemberName>
                  </ENQRHIST>
                  <ENQRHIST>
                    <EnquiryDate>19-01-2022</EnquiryDate>
                    <EnquiryPurposeCd>1</EnquiryPurposeCd>
                    <EnquiryConsiderationAmt>10000</EnquiryConsiderationAmt>
                    <BureauMemberIndustryCd>4</BureauMemberIndustryCd>
                    <EnquiryAccountTypeCode>AL</EnquiryAccountTypeCode>
                    <ApplicationRole>1</ApplicationRole>
                    <EnqCreditPurpose>1</EnqCreditPurpose>
                    <BureauMemberName>Experian Credit Service</BureauMemberName>
                  </ENQRHIST>
                  <ENQRHIST>
                    <EnquiryDate>17-01-2022</EnquiryDate>
                    <EnquiryPurposeCd>1</EnquiryPurposeCd>
                    <EnquiryConsiderationAmt>0</EnquiryConsiderationAmt>
                    <BureauMemberIndustryCd>4</BureauMemberIndustryCd>
                    <EnquiryAccountTypeCode>CC</EnquiryAccountTypeCode>
                    <ApplicationRole>1</ApplicationRole>
                    <EnqCreditPurpose>1</EnqCreditPurpose>
                    <BureauMemberName>HSBC Bank Australia Ltd</BureauMemberName>
                  </ENQRHIST>
                  <ENQRHIST>
                    <EnquiryDate>06-01-2022</EnquiryDate>
                    <EnquiryPurposeCd>1</EnquiryPurposeCd>
                    <EnquiryConsiderationAmt>50000</EnquiryConsiderationAmt>
                    <BureauMemberIndustryCd>4</BureauMemberIndustryCd>
                    <EnquiryAccountTypeCode />
                    <ApplicationRole>1</ApplicationRole>
                    <EnqCreditPurpose>1</EnqCreditPurpose>
                    <BureauMemberName>Experian Credit Service</BureauMemberName>
                  </ENQRHIST>
                  <ENQRHIST>
                    <EnquiryDate>05-01-2022</EnquiryDate>
                    <EnquiryPurposeCd>1</EnquiryPurposeCd>
                    <EnquiryConsiderationAmt>50000</EnquiryConsiderationAmt>
                    <BureauMemberIndustryCd>4</BureauMemberIndustryCd>
                    <EnquiryAccountTypeCode />
                    <ApplicationRole>1</ApplicationRole>
                    <EnqCreditPurpose>1</EnqCreditPurpose>
                    <BureauMemberName>Experian Credit Service</BureauMemberName>
                  </ENQRHIST>
                  <ENQRHIST>
                    <EnquiryDate>03-01-2022</EnquiryDate>
                    <EnquiryPurposeCd>1</EnquiryPurposeCd>
                    <EnquiryConsiderationAmt>0</EnquiryConsiderationAmt>
                    <BureauMemberIndustryCd>4</BureauMemberIndustryCd>
                    <EnquiryAccountTypeCode>CC</EnquiryAccountTypeCode>
                    <ApplicationRole>1</ApplicationRole>
                    <EnqCreditPurpose>1</EnqCreditPurpose>
                    <BureauMemberName>HSBC Bank Australia Ltd</BureauMemberName>
                  </ENQRHIST>
                  <ENQRHIST>
                    <EnquiryDate>23-12-2021</EnquiryDate>
                    <EnquiryPurposeCd>1</EnquiryPurposeCd>
                    <EnquiryConsiderationAmt>-1</EnquiryConsiderationAmt>
                    <BureauMemberIndustryCd>4</BureauMemberIndustryCd>
                    <EnquiryAccountTypeCode>AO</EnquiryAccountTypeCode>
                    <ApplicationRole>1</ApplicationRole>
                    <EnqCreditPurpose>1</EnqCreditPurpose>
                    <BureauMemberName>Experian Credit Service</BureauMemberName>
                  </ENQRHIST>
                  <ENQRHIST>
                    <EnquiryDate>13-12-2021</EnquiryDate>
                    <EnquiryPurposeCd>1</EnquiryPurposeCd>
                    <EnquiryConsiderationAmt>0</EnquiryConsiderationAmt>
                    <BureauMemberIndustryCd>4</BureauMemberIndustryCd>
                    <EnquiryAccountTypeCode>CC</EnquiryAccountTypeCode>
                    <ApplicationRole>1</ApplicationRole>
                    <EnqCreditPurpose>1</EnqCreditPurpose>
                    <BureauMemberName>HSBC Bank Australia Ltd</BureauMemberName>
                  </ENQRHIST>
                  <ENQRHIST>
                    <EnquiryDate>13-12-2021</EnquiryDate>
                    <EnquiryPurposeCd>1</EnquiryPurposeCd>
                    <EnquiryConsiderationAmt>-1</EnquiryConsiderationAmt>
                    <BureauMemberIndustryCd>4</BureauMemberIndustryCd>
                    <EnquiryAccountTypeCode>AO</EnquiryAccountTypeCode>
                    <ApplicationRole>1</ApplicationRole>
                    <EnqCreditPurpose>1</EnqCreditPurpose>
                    <BureauMemberName>Experian Credit Service</BureauMemberName>
                  </ENQRHIST>
                  <ENQRHIST>
                    <EnquiryDate>11-12-2021</EnquiryDate>
                    <EnquiryPurposeCd>1</EnquiryPurposeCd>
                    <EnquiryConsiderationAmt>50000</EnquiryConsiderationAmt>
                    <BureauMemberIndustryCd>4</BureauMemberIndustryCd>
                    <EnquiryAccountTypeCode />
                    <ApplicationRole>1</ApplicationRole>
                    <EnqCreditPurpose>1</EnqCreditPurpose>
                    <BureauMemberName>Experian Credit Service</BureauMemberName>
                  </ENQRHIST>
                  <ENQRHIST>
                    <EnquiryDate>08-12-2021</EnquiryDate>
                    <EnquiryPurposeCd>1</EnquiryPurposeCd>
                    <EnquiryConsiderationAmt>-1</EnquiryConsiderationAmt>
                    <BureauMemberIndustryCd>4</BureauMemberIndustryCd>
                    <EnquiryAccountTypeCode>CC</EnquiryAccountTypeCode>
                    <ApplicationRole>1</ApplicationRole>
                    <EnqCreditPurpose>1</EnqCreditPurpose>
                    <BureauMemberName>Experian Credit Service</BureauMemberName>
                  </ENQRHIST>
                  <ENQRHIST>
                    <EnquiryDate>04-12-2021</EnquiryDate>
                    <EnquiryPurposeCd>1</EnquiryPurposeCd>
                    <EnquiryConsiderationAmt>50000</EnquiryConsiderationAmt>
                    <BureauMemberIndustryCd>4</BureauMemberIndustryCd>
                    <EnquiryAccountTypeCode />
                    <ApplicationRole>1</ApplicationRole>
                    <EnqCreditPurpose>1</EnqCreditPurpose>
                    <BureauMemberName>Experian Credit Service</BureauMemberName>
                  </ENQRHIST>
                  <ENQRHIST>
                    <EnquiryDate>04-12-2021</EnquiryDate>
                    <EnquiryPurposeCd>1</EnquiryPurposeCd>
                    <EnquiryConsiderationAmt>50000</EnquiryConsiderationAmt>
                    <BureauMemberIndustryCd>4</BureauMemberIndustryCd>
                    <EnquiryAccountTypeCode />
                    <ApplicationRole />
                    <EnqCreditPurpose>1</EnqCreditPurpose>
                    <BureauMemberName>Experian Credit Service</BureauMemberName>
                  </ENQRHIST>
                  <ENQRHIST>
                    <EnquiryDate>03-12-2021</EnquiryDate>
                    <EnquiryPurposeCd>1</EnquiryPurposeCd>
                    <EnquiryConsiderationAmt>0</EnquiryConsiderationAmt>
                    <BureauMemberIndustryCd>4</BureauMemberIndustryCd>
                    <EnquiryAccountTypeCode>CC</EnquiryAccountTypeCode>
                    <ApplicationRole>1</ApplicationRole>
                    <EnqCreditPurpose>1</EnqCreditPurpose>
                    <BureauMemberName>HSBC Bank Australia Ltd</BureauMemberName>
                  </ENQRHIST>
                  <ENQRHIST>
                    <EnquiryDate>03-12-2021</EnquiryDate>
                    <EnquiryPurposeCd>1</EnquiryPurposeCd>
                    <EnquiryConsiderationAmt>50000</EnquiryConsiderationAmt>
                    <BureauMemberIndustryCd>4</BureauMemberIndustryCd>
                    <EnquiryAccountTypeCode />
                    <ApplicationRole>1</ApplicationRole>
                    <EnqCreditPurpose>1</EnqCreditPurpose>
                    <BureauMemberName>Experian Credit Service</BureauMemberName>
                  </ENQRHIST>
                  <ENQRHIST>
                    <EnquiryDate>02-12-2021</EnquiryDate>
                    <EnquiryPurposeCd>1</EnquiryPurposeCd>
                    <EnquiryConsiderationAmt>50000</EnquiryConsiderationAmt>
                    <BureauMemberIndustryCd>4</BureauMemberIndustryCd>
                    <EnquiryAccountTypeCode />
                    <ApplicationRole>1</ApplicationRole>
                    <EnqCreditPurpose>1</EnqCreditPurpose>
                    <BureauMemberName>Experian Credit Service</BureauMemberName>
                  </ENQRHIST>
                  <ENQRHIST>
                    <EnquiryDate>26-11-2021</EnquiryDate>
                    <EnquiryPurposeCd>1</EnquiryPurposeCd>
                    <EnquiryConsiderationAmt>0</EnquiryConsiderationAmt>
                    <BureauMemberIndustryCd>4</BureauMemberIndustryCd>
                    <EnquiryAccountTypeCode>CC</EnquiryAccountTypeCode>
                    <ApplicationRole>1</ApplicationRole>
                    <EnqCreditPurpose>1</EnqCreditPurpose>
                    <BureauMemberName>HSBC Bank Australia Ltd</BureauMemberName>
                  </ENQRHIST>
                  <ENQRHIST>
                    <EnquiryDate>18-11-2021</EnquiryDate>
                    <EnquiryPurposeCd>1</EnquiryPurposeCd>
                    <EnquiryConsiderationAmt>50000</EnquiryConsiderationAmt>
                    <BureauMemberIndustryCd>4</BureauMemberIndustryCd>
                    <EnquiryAccountTypeCode />
                    <ApplicationRole>1</ApplicationRole>
                    <EnqCreditPurpose>1</EnqCreditPurpose>
                    <BureauMemberName>Experian Credit Service</BureauMemberName>
                  </ENQRHIST>
                  <ENQRHIST>
                    <EnquiryDate>13-11-2021</EnquiryDate>
                    <EnquiryPurposeCd>1</EnquiryPurposeCd>
                    <EnquiryConsiderationAmt>50000</EnquiryConsiderationAmt>
                    <BureauMemberIndustryCd>4</BureauMemberIndustryCd>
                    <EnquiryAccountTypeCode />
                    <ApplicationRole>1</ApplicationRole>
                    <EnqCreditPurpose>1</EnqCreditPurpose>
                    <BureauMemberName>Experian Credit Service</BureauMemberName>
                  </ENQRHIST>
                  <ENQRHIST>
                    <EnquiryDate>13-11-2021</EnquiryDate>
                    <EnquiryPurposeCd>1</EnquiryPurposeCd>
                    <EnquiryConsiderationAmt>50000</EnquiryConsiderationAmt>
                    <BureauMemberIndustryCd>4</BureauMemberIndustryCd>
                    <EnquiryAccountTypeCode />
                    <ApplicationRole />
                    <EnqCreditPurpose>1</EnqCreditPurpose>
                    <BureauMemberName>Experian Credit Service</BureauMemberName>
                  </ENQRHIST>
                  <ENQRHIST>
                    <EnquiryDate>13-11-2021</EnquiryDate>
                    <EnquiryPurposeCd>1</EnquiryPurposeCd>
                    <EnquiryConsiderationAmt>50000</EnquiryConsiderationAmt>
                    <BureauMemberIndustryCd>4</BureauMemberIndustryCd>
                    <EnquiryAccountTypeCode />
                    <ApplicationRole>1</ApplicationRole>
                    <EnqCreditPurpose>1</EnqCreditPurpose>
                    <BureauMemberName>Experian Credit Service</BureauMemberName>
                  </ENQRHIST>
                  <ENQRHIST>
                    <EnquiryDate>13-11-2021</EnquiryDate>
                    <EnquiryPurposeCd>1</EnquiryPurposeCd>
                    <EnquiryConsiderationAmt>50000</EnquiryConsiderationAmt>
                    <BureauMemberIndustryCd>4</BureauMemberIndustryCd>
                    <EnquiryAccountTypeCode />
                    <ApplicationRole>1</ApplicationRole>
                    <EnqCreditPurpose>1</EnqCreditPurpose>
                    <BureauMemberName>Experian Credit Service</BureauMemberName>
                  </ENQRHIST>
                  <ENQRHIST>
                    <EnquiryDate>13-11-2021</EnquiryDate>
                    <EnquiryPurposeCd>1</EnquiryPurposeCd>
                    <EnquiryConsiderationAmt>50000</EnquiryConsiderationAmt>
                    <BureauMemberIndustryCd>4</BureauMemberIndustryCd>
                    <EnquiryAccountTypeCode />
                    <ApplicationRole>1</ApplicationRole>
                    <EnqCreditPurpose>1</EnqCreditPurpose>
                    <BureauMemberName>Experian Credit Service</BureauMemberName>
                  </ENQRHIST>
                  <ENQRHIST>
                    <EnquiryDate>02-11-2021</EnquiryDate>
                    <EnquiryPurposeCd>1</EnquiryPurposeCd>
                    <EnquiryConsiderationAmt>50000</EnquiryConsiderationAmt>
                    <BureauMemberIndustryCd>4</BureauMemberIndustryCd>
                    <EnquiryAccountTypeCode />
                    <ApplicationRole>1</ApplicationRole>
                    <EnqCreditPurpose>1</EnqCreditPurpose>
                    <BureauMemberName>Experian Credit Service</BureauMemberName>
                  </ENQRHIST>
                  <ENQRHIST>
                    <EnquiryDate>06-10-2021</EnquiryDate>
                    <EnquiryPurposeCd>1</EnquiryPurposeCd>
                    <EnquiryConsiderationAmt>0</EnquiryConsiderationAmt>
                    <BureauMemberIndustryCd>4</BureauMemberIndustryCd>
                    <EnquiryAccountTypeCode>CC</EnquiryAccountTypeCode>
                    <ApplicationRole>1</ApplicationRole>
                    <EnqCreditPurpose>1</EnqCreditPurpose>
                    <BureauMemberName>HSBC Bank Australia Ltd</BureauMemberName>
                  </ENQRHIST>
                  <ENQRHIST>
                    <EnquiryDate>16-09-2021</EnquiryDate>
                    <EnquiryPurposeCd>1</EnquiryPurposeCd>
                    <EnquiryConsiderationAmt>0</EnquiryConsiderationAmt>
                    <BureauMemberIndustryCd>4</BureauMemberIndustryCd>
                    <EnquiryAccountTypeCode>CC</EnquiryAccountTypeCode>
                    <ApplicationRole>1</ApplicationRole>
                    <EnqCreditPurpose>1</EnqCreditPurpose>
                    <BureauMemberName>HSBC Bank Australia Ltd</BureauMemberName>
                  </ENQRHIST>
                  <ENQRHIST>
                    <EnquiryDate>09-09-2021</EnquiryDate>
                    <EnquiryPurposeCd>1</EnquiryPurposeCd>
                    <EnquiryConsiderationAmt>5000</EnquiryConsiderationAmt>
                    <BureauMemberIndustryCd>4</BureauMemberIndustryCd>
                    <EnquiryAccountTypeCode>CC</EnquiryAccountTypeCode>
                    <ApplicationRole>1</ApplicationRole>
                    <EnqCreditPurpose>1</EnqCreditPurpose>
                    <BureauMemberName>Experian Credit Service</BureauMemberName>
                  </ENQRHIST>
                  <ENQRHIST>
                    <EnquiryDate>02-09-2021</EnquiryDate>
                    <EnquiryPurposeCd>1</EnquiryPurposeCd>
                    <EnquiryConsiderationAmt>0</EnquiryConsiderationAmt>
                    <BureauMemberIndustryCd>4</BureauMemberIndustryCd>
                    <EnquiryAccountTypeCode>CC</EnquiryAccountTypeCode>
                    <ApplicationRole>1</ApplicationRole>
                    <EnqCreditPurpose>1</EnqCreditPurpose>
                    <BureauMemberName>HSBC Bank Australia Ltd</BureauMemberName>
                  </ENQRHIST>
                  <ENQRHIST>
                    <EnquiryDate>30-08-2021</EnquiryDate>
                    <EnquiryPurposeCd>1</EnquiryPurposeCd>
                    <EnquiryConsiderationAmt>-1</EnquiryConsiderationAmt>
                    <BureauMemberIndustryCd>4</BureauMemberIndustryCd>
                    <EnquiryAccountTypeCode>CC</EnquiryAccountTypeCode>
                    <ApplicationRole>1</ApplicationRole>
                    <EnqCreditPurpose>1</EnqCreditPurpose>
                    <BureauMemberName>Experian Credit Service</BureauMemberName>
                  </ENQRHIST>
                  <ENQRHIST>
                    <EnquiryDate>25-08-2021</EnquiryDate>
                    <EnquiryPurposeCd>1</EnquiryPurposeCd>
                    <EnquiryConsiderationAmt>50000</EnquiryConsiderationAmt>
                    <BureauMemberIndustryCd />
                    <EnquiryAccountTypeCode />
                    <ApplicationRole>1</ApplicationRole>
                    <EnqCreditPurpose>1</EnqCreditPurpose>
                    <BureauMemberName>REST PPV Pen Test Company</BureauMemberName>
                  </ENQRHIST>
                  <ENQRHIST>
                    <EnquiryDate>24-08-2021</EnquiryDate>
                    <EnquiryPurposeCd>1</EnquiryPurposeCd>
                    <EnquiryConsiderationAmt>50000</EnquiryConsiderationAmt>
                    <BureauMemberIndustryCd />
                    <EnquiryAccountTypeCode />
                    <ApplicationRole>1</ApplicationRole>
                    <EnqCreditPurpose>1</EnqCreditPurpose>
                    <BureauMemberName>REST PPV Pen Test Company</BureauMemberName>
                  </ENQRHIST>
                  <ENQRHIST>
                    <EnquiryDate>17-08-2021</EnquiryDate>
                    <EnquiryPurposeCd>1</EnquiryPurposeCd>
                    <EnquiryConsiderationAmt>0</EnquiryConsiderationAmt>
                    <BureauMemberIndustryCd>4</BureauMemberIndustryCd>
                    <EnquiryAccountTypeCode>CC</EnquiryAccountTypeCode>
                    <ApplicationRole>1</ApplicationRole>
                    <EnqCreditPurpose>1</EnqCreditPurpose>
                    <BureauMemberName>HSBC Bank Australia Ltd</BureauMemberName>
                  </ENQRHIST>
                  <ENQRHIST>
                    <EnquiryDate>17-08-2021</EnquiryDate>
                    <EnquiryPurposeCd>1</EnquiryPurposeCd>
                    <EnquiryConsiderationAmt>50000</EnquiryConsiderationAmt>
                    <BureauMemberIndustryCd>4</BureauMemberIndustryCd>
                    <EnquiryAccountTypeCode />
                    <ApplicationRole>1</ApplicationRole>
                    <EnqCreditPurpose>1</EnqCreditPurpose>
                    <BureauMemberName>Experian Credit Service</BureauMemberName>
                  </ENQRHIST>
                  <ENQRHIST>
                    <EnquiryDate>02-08-2021</EnquiryDate>
                    <EnquiryPurposeCd>1</EnquiryPurposeCd>
                    <EnquiryConsiderationAmt>-1</EnquiryConsiderationAmt>
                    <BureauMemberIndustryCd>4</BureauMemberIndustryCd>
                    <EnquiryAccountTypeCode />
                    <ApplicationRole>1</ApplicationRole>
                    <EnqCreditPurpose>1</EnqCreditPurpose>
                    <BureauMemberName>Experian Credit Service</BureauMemberName>
                  </ENQRHIST>
                  <ENQRHIST>
                    <EnquiryDate>31-10-2019</EnquiryDate>
                    <EnquiryPurposeCd>1</EnquiryPurposeCd>
                    <EnquiryConsiderationAmt>5000</EnquiryConsiderationAmt>
                    <BureauMemberIndustryCd>4</BureauMemberIndustryCd>
                    <EnquiryAccountTypeCode>LU</EnquiryAccountTypeCode>
                    <ApplicationRole />
                    <EnqCreditPurpose>1</EnqCreditPurpose>
                    <BureauMemberName>MONEY PLACE AFSL LTD</BureauMemberName>
                  </ENQRHIST>
                  <ENQRHIST>
                    <EnquiryDate>31-10-2019</EnquiryDate>
                    <EnquiryPurposeCd>1</EnquiryPurposeCd>
                    <EnquiryConsiderationAmt>25000</EnquiryConsiderationAmt>
                    <BureauMemberIndustryCd>4</BureauMemberIndustryCd>
                    <EnquiryAccountTypeCode>LU</EnquiryAccountTypeCode>
                    <ApplicationRole />
                    <EnqCreditPurpose>1</EnqCreditPurpose>
                    <BureauMemberName>MONEY PLACE AFSL LTD</BureauMemberName>
                  </ENQRHIST>
                  <ENQRHIST>
                    <EnquiryDate>31-10-2019</EnquiryDate>
                    <EnquiryPurposeCd>1</EnquiryPurposeCd>
                    <EnquiryConsiderationAmt>5000</EnquiryConsiderationAmt>
                    <BureauMemberIndustryCd>4</BureauMemberIndustryCd>
                    <EnquiryAccountTypeCode>LU</EnquiryAccountTypeCode>
                    <ApplicationRole />
                    <EnqCreditPurpose>1</EnqCreditPurpose>
                    <BureauMemberName>MONEY PLACE AFSL LTD</BureauMemberName>
                  </ENQRHIST>
                  <MODEL0001>
                    <ModelNameCd>9</ModelNameCd>
                    <ScoreValue>434</ScoreValue>
                    <ScoreCardNum>5</ScoreCardNum>
                    <ScoreFactor1 />
                    <ScoreFactor2 />
                    <ScoreFactor3 />
                    <ScoreFactor4 />
                    <ScoreFactor5 />
                  </MODEL0001>
                  <MODEL0001>
                    <ModelNameCd>20</ModelNameCd>
                    <ScoreValue>49</ScoreValue>
                    <ScoreCardNum>1</ScoreCardNum>
                    <ScoreFactor1 />
                    <ScoreFactor2 />
                    <ScoreFactor3 />
                    <ScoreFactor4 />
                    <ScoreFactor5 />
                  </MODEL0001>
                  <MODEL0001>
                    <ModelNameCd>16</ModelNameCd>
                    <ScoreValue>49</ScoreValue>
                    <ScoreCardNum>1</ScoreCardNum>
                    <ScoreFactor1 />
                    <ScoreFactor2 />
                    <ScoreFactor3 />
                    <ScoreFactor4 />
                    <ScoreFactor5 />
                  </MODEL0001>
                  <ATTRIBUTE>
                    <AttributeName>PE008NABFAA</AttributeName>
                    <AttributeValue>2</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PN027NAAAAA</AttributeName>
                    <AttributeValue>-999</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR071NABLBN</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR031CABLBN</AttributeName>
                    <AttributeValue>U</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR034CAPLAA</AttributeName>
                    <AttributeValue>D</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR029CAAAAA</AttributeName>
                    <AttributeValue>U</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR030CACCAA</AttributeName>
                    <AttributeValue>U</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR056NAAAAA</AttributeName>
                    <AttributeValue>-999</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PC053VOAAAA</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR121NAAAAA</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR074NAPLAA</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PC053VACCAA</AttributeName>
                    <AttributeValue>47000</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PP002NAAAAA</AttributeName>
                    <AttributeValue>55</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PE012NACCAA</AttributeName>
                    <AttributeValue>5</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PE021NALTSM</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PN019NACCAA</AttributeName>
                    <AttributeValue>2</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PE016NAPLAA</AttributeName>
                    <AttributeValue>4</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PC018NABTBN</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PC074VABTBN</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR097PAAAAA</AttributeName>
                    <AttributeValue>0.0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PF007NAAOAA</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PF009NAAAAA</AttributeName>
                    <AttributeValue>-999</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR051CAAAAA</AttributeName>
                    <AttributeValue>U</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PC053VAAABN</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PC109VACCAA</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PE012NAAABN</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PE020NAAABN</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR032CARMAA</AttributeName>
                    <AttributeValue>U</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR024CABTBN</AttributeName>
                    <AttributeValue>U</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR025CALTSM</AttributeName>
                    <AttributeValue>U</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR107NAAAAA</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PX006RAAABN</AttributeName>
                    <AttributeValue>-999.0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PF010NAAAAA</AttributeName>
                    <AttributeValue>-999</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR003CAAAAA</AttributeName>
                    <AttributeValue>U</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PC018NAAAAA</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR031CALTSM</AttributeName>
                    <AttributeValue>U</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR022CACCAA</AttributeName>
                    <AttributeValue>U</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR095PNAAAA</AttributeName>
                    <AttributeValue>0.0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PE014NARMAA</AttributeName>
                    <AttributeValue>1</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR030CAAAAA</AttributeName>
                    <AttributeValue>U</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PC070VALTSM</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PF007NAODAA</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR029CACCAA</AttributeName>
                    <AttributeValue>U</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PC074VAAABN</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PC053VOCCAA</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PX016VAAAAA</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PN010NAREAA</AttributeName>
                    <AttributeValue>-999</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PC053VAAAAA</AttributeName>
                    <AttributeValue>97519</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR024CAAAAA</AttributeName>
                    <AttributeValue>U</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PE016NABFAA</AttributeName>
                    <AttributeValue>39</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PE012NAAAAA</AttributeName>
                    <AttributeValue>9</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR022CNAAAA</AttributeName>
                    <AttributeValue>U</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PN019NAAAAA</AttributeName>
                    <AttributeValue>6</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR017PAAAAA</AttributeName>
                    <AttributeValue>0.0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR037CAAAAA</AttributeName>
                    <AttributeValue>-N</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PE011NAPLAA</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PC013CAAAAA</AttributeName>
                    <AttributeValue>-N</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR113NAAAAA</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PC058VACCAA</AttributeName>
                    <AttributeValue>15000</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PF015NAAAAA</AttributeName>
                    <AttributeValue>-999</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PC005NAAAAA</AttributeName>
                    <AttributeValue>-999</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR024CAAABN</AttributeName>
                    <AttributeValue>U</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR048CAAAAA</AttributeName>
                    <AttributeValue>-N</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PC002NARMAA</AttributeName>
                    <AttributeValue>303</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PC014NNAAAA</AttributeName>
                    <AttributeValue>181</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PC007VAAAAA</AttributeName>
                    <AttributeValue>25000</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PX006RAAAAA</AttributeName>
                    <AttributeValue>-999.0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PC019NALTSM</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PC017NABLBN</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PC053VABTBN</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PC070VABLBN</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR102NAAAAA</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PC003NACCAA</AttributeName>
                    <AttributeValue>62</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PE012NABTBN</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR022CAAAAA</AttributeName>
                    <AttributeValue>U</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PC018NARMAA</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PE011NABFAA</AttributeName>
                    <AttributeValue>8</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PF002CAAAAA</AttributeName>
                    <AttributeValue>N</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PC007VARMAA</AttributeName>
                    <AttributeValue>15000</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR024CARMAA</AttributeName>
                    <AttributeValue>U</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PC016NAAAAA</AttributeName>
                    <AttributeValue>10</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PX006RABTBN</AttributeName>
                    <AttributeValue>-999.0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR015PAAAAA</AttributeName>
                    <AttributeValue>0.0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR075NAAAAA</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PC055VAAABN</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR028CAPLAA</AttributeName>
                    <AttributeValue>U</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PC058VAAAAA</AttributeName>
                    <AttributeValue>25000</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PC056VABLBN</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR023CALTSM</AttributeName>
                    <AttributeValue>U</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR025CABLBN</AttributeName>
                    <AttributeValue>U</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PJ014CAAAAA</AttributeName>
                    <AttributeValue />
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PE025NABTBN</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PN004VATUAA</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PC056VALTSM</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PX014VAAAAA</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PC110VACCAA</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PF007NACCAA</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR032CAPLAA</AttributeName>
                    <AttributeValue>U</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR075NABTBN</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR077NAAAAA</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PF007NAAABN</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PC017NALTSM</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PC045RAAAAA</AttributeName>
                    <AttributeValue>1.0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR075NAAABN</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PE014NAPLAA</AttributeName>
                    <AttributeValue>1</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PC055VABTBN</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PC106VACCAA</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PN022NAAAAA</AttributeName>
                    <AttributeValue>1</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PC037NAAAAA</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR023CABLBN</AttributeName>
                    <AttributeValue>U</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR080NAAAAA</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PE011NARMAA</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PF008NALTSM</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PC053VAODAA</AttributeName>
                    <AttributeValue>5514</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PC017NAREAA</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR105NAAAAA</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PC017NAALAA</AttributeName>
                    <AttributeValue>1</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PC002NAPLAA</AttributeName>
                    <AttributeValue>51</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR110NAAAAA</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PC053VOODAA</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PF007NAAAAA</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PC011CAAAAA</AttributeName>
                    <AttributeValue>AL</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR030CARMAA</AttributeName>
                    <AttributeValue>U</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR095PAAAAA</AttributeName>
                    <AttributeValue>0.0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PF012NAAAAA</AttributeName>
                    <AttributeValue>-999</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PE025NAAABN</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PE012NARMAA</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PC077VACCAA</AttributeName>
                    <AttributeValue>1410</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PF004CAAAAA</AttributeName>
                    <AttributeValue>N</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PC051RAAAAA</AttributeName>
                    <AttributeValue>0.968</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR099NAAAAA</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PE011NALTSM</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PC007VAPLAA</AttributeName>
                    <AttributeValue>25000</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PE016NABLBN</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PP005NAAAAA</AttributeName>
                    <AttributeValue>-999</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PN006VAAAAA</AttributeName>
                    <AttributeValue>70225</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR039CAAAAA</AttributeName>
                    <AttributeValue>-N</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR033CAAABN</AttributeName>
                    <AttributeValue>U</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR111NAAAAA</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PC101VACCAA</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PC017NOPLAA</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PX018VAAAAA</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PC022NAAAAA</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR028CARMAA</AttributeName>
                    <AttributeValue>U</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PE003NABTBN</AttributeName>
                    <AttributeValue>-999</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PJ008NAAAAA</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR074NABTBN</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PC003NALTSM</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PN004VAPLAA</AttributeName>
                    <AttributeValue>52446</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PN024NAAAAA</AttributeName>
                    <AttributeValue>2</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PF019NAAAAA</AttributeName>
                    <AttributeValue>-999</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PC006VARMAA</AttributeName>
                    <AttributeValue>15000</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PC015NAAAAA</AttributeName>
                    <AttributeValue>-999</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PC035NAAAAA</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PE012NABFAA</AttributeName>
                    <AttributeValue>9</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PF013NAAAAA</AttributeName>
                    <AttributeValue>-999</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PF007NALTSM</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR026CAAAAA</AttributeName>
                    <AttributeValue>U</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR033CACCAA</AttributeName>
                    <AttributeValue>U</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PX005RABLBN</AttributeName>
                    <AttributeValue>-999.0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PC058VARMAA</AttributeName>
                    <AttributeValue>15000</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PN019NAREAA</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR002CALTSM</AttributeName>
                    <AttributeValue>U</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PC034NAAAAA</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PE016NATUAA</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR025CAAABN</AttributeName>
                    <AttributeValue>U</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR040CAAAAA</AttributeName>
                    <AttributeValue>-N</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PE011NABLBN</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PC027NAAAAA</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR020NAAAAA</AttributeName>
                    <AttributeValue>-999</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PF014NAAAAA</AttributeName>
                    <AttributeValue>-999</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR072NAAABN</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR073NAAAAA</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR041CAAAAA</AttributeName>
                    <AttributeValue>-N</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PC059VAPLAA</AttributeName>
                    <AttributeValue>25000</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PJ015CAAAAA</AttributeName>
                    <AttributeValue>-</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PF001CAAAAA</AttributeName>
                    <AttributeValue>N</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR061NAAAAA</AttributeName>
                    <AttributeValue>-999</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR002CABLBN</AttributeName>
                    <AttributeValue>U</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PN011CAAAAA</AttributeName>
                    <AttributeValue>OD</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR025CAAAAA</AttributeName>
                    <AttributeValue>U</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR029CARMAA</AttributeName>
                    <AttributeValue>U</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR109NAAAAA</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PN025NAAAAA</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PE012NAPLAA</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PF020NAAAAA</AttributeName>
                    <AttributeValue>-999</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PC053VAPLAA</AttributeName>
                    <AttributeValue>30005</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PE025NALTSM</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PC030NAAABN</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR028CABTBN</AttributeName>
                    <AttributeValue>U</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR032CAAAAA</AttributeName>
                    <AttributeValue>U</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PC026NAAAAA</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR034CARMAA</AttributeName>
                    <AttributeValue>U</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR072NAAAAA</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR074NARMAA</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PX002NAAAAA</AttributeName>
                    <AttributeValue>9</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PC019NAAAAA</AttributeName>
                    <AttributeValue>6</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR034CACCAA</AttributeName>
                    <AttributeValue>D</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR024CACCAA</AttributeName>
                    <AttributeValue>U</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PN004VABFAA</AttributeName>
                    <AttributeValue>65976</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PN004VARMAA</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PE020NALTSM</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PN010NATUAA</AttributeName>
                    <AttributeValue>-999</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PC006VAPLAA</AttributeName>
                    <AttributeValue>2505</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR072NABTBN</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR005NAAAAA</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PC102VACCAA</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR032CABTBN</AttributeName>
                    <AttributeValue>U</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR120NAAAAA</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PF017NAAAAA</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PC002NALTSM</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PX017VAAAAA</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR057NAAAAA</AttributeName>
                    <AttributeValue>-999</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PC019NABTBN</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PC023NAAAAA</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PJ004NAAAAA</AttributeName>
                    <AttributeValue>73</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PC058VAPLAA</AttributeName>
                    <AttributeValue>25000</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PF008NAAOAA</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PE016NALTSM</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PC003NABLBN</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PC024NAAAAA</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PC017NAODAA</AttributeName>
                    <AttributeValue>2</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR032CACCAA</AttributeName>
                    <AttributeValue>U</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PC019NAAABN</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR011NAAAAA</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PE003NABFAA</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR025CACCAA</AttributeName>
                    <AttributeValue>U</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR028CAAABN</AttributeName>
                    <AttributeValue>U</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR031CAAABN</AttributeName>
                    <AttributeValue>U</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PE021NABLBN</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PC030NABTBN</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR034CAAAAA</AttributeName>
                    <AttributeValue>D</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR002CNAAAA</AttributeName>
                    <AttributeValue>U</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR008NAAAAA</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR058NAAAAA</AttributeName>
                    <AttributeValue>-999</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR033CABTBN</AttributeName>
                    <AttributeValue>U</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR123NAAAAA</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PJ016VAAAAA</AttributeName>
                    <AttributeValue>-9999999</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR031CACCAA</AttributeName>
                    <AttributeValue>U</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR028CAAAAA</AttributeName>
                    <AttributeValue>U</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PC025NAAAAA</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PC074VALTSM</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR007NAAAAA</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PC074VABLBN</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PE020NABLBN</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PE029VABLBN</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PC002NABLBN</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PC018NAAABN</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PF018NAAAAA</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR012NAAAAA</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PC031NABTBN</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR122NAAAAA</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PN002CAAAAA</AttributeName>
                    <AttributeValue>D</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR032CAAABN</AttributeName>
                    <AttributeValue>U</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR003CNAAAA</AttributeName>
                    <AttributeValue>U</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PC053VARMAA</AttributeName>
                    <AttributeValue>15000</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PC018NACCAA</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR033CAAAAA</AttributeName>
                    <AttributeValue>U</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PC017NAAABN</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR031CABTBN</AttributeName>
                    <AttributeValue>U</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PC012CAAAAA</AttributeName>
                    <AttributeValue>-N</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PX007RAAAAA</AttributeName>
                    <AttributeValue>-999.0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PC018NABLBN</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR089NAAAAA</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PF016NAAAAA</AttributeName>
                    <AttributeValue>-999</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR049CAAAAA</AttributeName>
                    <AttributeValue>-N</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR023CAAABN</AttributeName>
                    <AttributeValue>U</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR071NABTBN</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PC006VACCAA</AttributeName>
                    <AttributeValue>15000</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PC055VALTSM</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR101NAAAAA</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR076NAAAAA</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PC077VAPLAA</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PE009NAPLAA</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PC017NACCAA</AttributeName>
                    <AttributeValue>4</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PJ005NAAAAA</AttributeName>
                    <AttributeValue>-999</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR028CACCAA</AttributeName>
                    <AttributeValue>U</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PE029VALTSM</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PF008NAODAA</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR010NAAAAA</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PF003CAAAAA</AttributeName>
                    <AttributeValue>N</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PC031NAAABN</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR071NAAAAA</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PE013NAAAAA</AttributeName>
                    <AttributeValue>28</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR031CAAAAA</AttributeName>
                    <AttributeValue>U</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR009NAAAAA</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PC059VACCAA</AttributeName>
                    <AttributeValue>15000</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR016PAAAAA</AttributeName>
                    <AttributeValue>0.0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR020NARMAA</AttributeName>
                    <AttributeValue>-999</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR024CABLBN</AttributeName>
                    <AttributeValue>U</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR023CAAAAA</AttributeName>
                    <AttributeValue>U</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PC038NAAAAA</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PC055VABLBN</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PP003NAAAAA</AttributeName>
                    <AttributeValue>122</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PC006VAAAAA</AttributeName>
                    <AttributeValue>3000</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PC017NAAAAA</AttributeName>
                    <AttributeValue>10</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PC018NALTSM</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR090NAAAAA</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PN010NARMAA</AttributeName>
                    <AttributeValue>-999</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PC004NAAAAA</AttributeName>
                    <AttributeValue>-999</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PN024NNAAAA</AttributeName>
                    <AttributeValue>2</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PN028VAAAAA</AttributeName>
                    <AttributeValue>16351</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR033CARMAA</AttributeName>
                    <AttributeValue>U</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PF008NAAABN</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PC017NOAAAA</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR055NAAAAA</AttributeName>
                    <AttributeValue>-999</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR036CAAAAA</AttributeName>
                    <AttributeValue>-N</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PN019NATUAA</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PF008NACCAA</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PE012NABLBN</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PX015VAAAAA</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PC059VAAAAA</AttributeName>
                    <AttributeValue>25000</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR071NAAABN</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PC017NABTBN</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR098PAAAAA</AttributeName>
                    <AttributeValue>0.0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR084NAAAAA</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PE010NABFAA</AttributeName>
                    <AttributeValue>8</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PC070VABTBN</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PN004VAAAAA</AttributeName>
                    <AttributeValue>65976</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR023CACCAA</AttributeName>
                    <AttributeValue>U</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR028CAODAA</AttributeName>
                    <AttributeValue>U</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR032CALTSM</AttributeName>
                    <AttributeValue>U</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PN002CARMAA</AttributeName>
                    <AttributeValue>U</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR082NAAAAA</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR042CAAAAA</AttributeName>
                    <AttributeValue>-N</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR052CAAAAA</AttributeName>
                    <AttributeValue>U</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PX006RABLBN</AttributeName>
                    <AttributeValue>-999.0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR031CARMAA</AttributeName>
                    <AttributeValue>U</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PC036NAAAAA</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR025CABTBN</AttributeName>
                    <AttributeValue>U</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR108NAAAAA</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PF005CAAAAA</AttributeName>
                    <AttributeValue>N</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PE009NARMAA</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR038CAAAAA</AttributeName>
                    <AttributeValue>-N</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PC044RAAAAA</AttributeName>
                    <AttributeValue>1.0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PE012NALTSM</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PE007NABFAA</AttributeName>
                    <AttributeValue>1</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PE025NABLBN</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PC105VACCAA</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PC017NORMAA</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PJ007NAAAAA</AttributeName>
                    <AttributeValue>1</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PE003NALTSM</AttributeName>
                    <AttributeValue>-999</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PN023NAAAAA</AttributeName>
                    <AttributeValue>2</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PN015NAAAAA</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR112NAAAAA</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PF008NAAAAA</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PJ021NAAAAA</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR020NAPLAA</AttributeName>
                    <AttributeValue>1</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PN004VACCAA</AttributeName>
                    <AttributeValue>7867</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR075NABLBN</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR096PAAAAA</AttributeName>
                    <AttributeValue>0.0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PC003NAPLAA</AttributeName>
                    <AttributeValue>51</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PX013VAAAAA</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR050CAAAAA</AttributeName>
                    <AttributeValue>U</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR106NAAAAA</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PX006RALTSM</AttributeName>
                    <AttributeValue>-999.0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PE003NAAABN</AttributeName>
                    <AttributeValue>-999</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PC010CAAAAA</AttributeName>
                    <AttributeValue>OD</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PN002CABFAA</AttributeName>
                    <AttributeValue>D</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR033CAPLAA</AttributeName>
                    <AttributeValue>U</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PF011NAAAAA</AttributeName>
                    <AttributeValue>-999</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PN010NABFAA</AttributeName>
                    <AttributeValue>788</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR023CABTBN</AttributeName>
                    <AttributeValue>U</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PE009NABFAA</AttributeName>
                    <AttributeValue>4</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PC014NAAAAA</AttributeName>
                    <AttributeValue>181</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR014PAAAAA</AttributeName>
                    <AttributeValue>0.0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PN010NAPLAA</AttributeName>
                    <AttributeValue>831</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PC059VARMAA</AttributeName>
                    <AttributeValue>15000</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR021CAAAAA</AttributeName>
                    <AttributeValue>U</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR025CARMAA</AttributeName>
                    <AttributeValue>U</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PX005RALTSM</AttributeName>
                    <AttributeValue>-999.0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR074NAAABN</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR024CALTSM</AttributeName>
                    <AttributeValue>U</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PC056VABTBN</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR029CAPLAA</AttributeName>
                    <AttributeValue>U</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PX012VAAAAA</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PC017NARMAA</AttributeName>
                    <AttributeValue>1</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR074NACCAA</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR079NAAAAA</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PE010NAAAAA</AttributeName>
                    <AttributeValue>8</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PC053VAREAA</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PC053VAALAA</AttributeName>
                    <AttributeValue>25000</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR104NAAAAA</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR031CAPLAA</AttributeName>
                    <AttributeValue>U</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PC043RAAAAA</AttributeName>
                    <AttributeValue>1.0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR024CNAAAA</AttributeName>
                    <AttributeValue>U</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR097PNAAAA</AttributeName>
                    <AttributeValue>0.0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR074NABLBN</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PC030NALTSM</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PC002NAAAAA</AttributeName>
                    <AttributeValue>401</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PF008NARMAA</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PC018NAPLAA</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PE003NABLBN</AttributeName>
                    <AttributeValue>-999</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PE016NABTBN</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR019PAAAAA</AttributeName>
                    <AttributeValue>0.0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PC077VAAAAA</AttributeName>
                    <AttributeValue>1410</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR046CAAAAA</AttributeName>
                    <AttributeValue>-N</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PE008NAAAAA</AttributeName>
                    <AttributeValue>2</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR086NAAAAA</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PF006CAAAAA</AttributeName>
                    <AttributeValue>N</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PC056VAAABN</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PX005RABTBN</AttributeName>
                    <AttributeValue>-999.0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR024CAPLAA</AttributeName>
                    <AttributeValue>U</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PN019NARMAA</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR094NAAAAA</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PN010NACCAA</AttributeName>
                    <AttributeValue>838</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PE016NAAAAA</AttributeName>
                    <AttributeValue>74</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PC002NAAABN</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PC003NARMAA</AttributeName>
                    <AttributeValue>303</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR047CAAAAA</AttributeName>
                    <AttributeValue>-N</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR028CALTSM</AttributeName>
                    <AttributeValue>U</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PN023NAAASF</AttributeName>
                    <AttributeValue>1</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR075NALTSM</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PC002NACCAA</AttributeName>
                    <AttributeValue>363</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PC053VOPLAA</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PE016NAAABN</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PX005RAAAAA</AttributeName>
                    <AttributeValue>-999.0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR023CARMAA</AttributeName>
                    <AttributeValue>U</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR054CAAAAA</AttributeName>
                    <AttributeValue>U</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PN024NAAASP</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PE011NABTBN</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR103NAAAAA</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR078NAAAAA</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PC051RARMAA</AttributeName>
                    <AttributeValue>0.972</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PE011NAAAAA</AttributeName>
                    <AttributeValue>8</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PN024NAAASF</AttributeName>
                    <AttributeValue>1</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR002CABTBN</AttributeName>
                    <AttributeValue>U</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PN019NABFAA</AttributeName>
                    <AttributeValue>6</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR074NALTSM</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PF007NARMAA</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR030CAPLAA</AttributeName>
                    <AttributeValue>U</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR025CAPLAA</AttributeName>
                    <AttributeValue>U</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PN023NAAASP</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR023CNAAAA</AttributeName>
                    <AttributeValue>U</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR022CARMAA</AttributeName>
                    <AttributeValue>U</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR018PAAAAA</AttributeName>
                    <AttributeValue>0.0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PN023NNAAAA</AttributeName>
                    <AttributeValue>2</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR096PNAAAA</AttributeName>
                    <AttributeValue>0.0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PC017NAPLAA</AttributeName>
                    <AttributeValue>3</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR053CAAAAA</AttributeName>
                    <AttributeValue>U</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PE016NACCAA</AttributeName>
                    <AttributeValue>30</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR092NAAAAA</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR002CAAAAA</AttributeName>
                    <AttributeValue>U</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PE007NAAAAA</AttributeName>
                    <AttributeValue>1</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PX005RAAABN</AttributeName>
                    <AttributeValue>-999.0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PC018NOAAAA</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PE021NAAABN</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PC053VABLBN</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PN004VAREAA</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PC077VARMAA</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PC017NOODAA</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR085NAAAAA</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PE011NAAABN</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR033CALTSM</AttributeName>
                    <AttributeValue>U</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PE016NARMAA</AttributeName>
                    <AttributeValue>1</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PC003NAAABN</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR028CABLBN</AttributeName>
                    <AttributeValue>U</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PF008NAPLAA</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PE002DAAAAA</AttributeName>
                    <AttributeValue>2024-04-29</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PC019NABLBN</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR100NAAAAA</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PC007VACCAA</AttributeName>
                    <AttributeValue>2000</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR025CNAAAA</AttributeName>
                    <AttributeValue>U</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR072NABLBN</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PC017NOCCAA</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR032CABLBN</AttributeName>
                    <AttributeValue>U</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PE029VAAABN</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR002CAAABN</AttributeName>
                    <AttributeValue>U</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PC053VALTSM</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PE014NACCAA</AttributeName>
                    <AttributeValue>30</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PN019NAPLAA</AttributeName>
                    <AttributeValue>3</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PC003NAAAAA</AttributeName>
                    <AttributeValue>51</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PE009NACCAA</AttributeName>
                    <AttributeValue>1</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PE011NACCAA</AttributeName>
                    <AttributeValue>4</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR004CAAAAA</AttributeName>
                    <AttributeValue>U</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PC070VAAABN</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR098PNAAAA</AttributeName>
                    <AttributeValue>0.0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR071NALTSM</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PC053VORMAA</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR023CAPLAA</AttributeName>
                    <AttributeValue>U</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PC031NALTSM</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR033CABLBN</AttributeName>
                    <AttributeValue>U</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PC003NABTBN</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PE015NAAAAA</AttributeName>
                    <AttributeValue>71</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PC030NABLBN</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PE021NABTBN</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PX001CAAAAA</AttributeName>
                    <AttributeValue>Y</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR093NAAAAA</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR088NAAAAA</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PC051RAPLAA</AttributeName>
                    <AttributeValue>-999.0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PE020NABTBN</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PE029VABTBN</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR072NALTSM</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PC002NABTBN</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PE014NAAAAA</AttributeName>
                    <AttributeValue>71</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PF007NAPLAA</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PE009NAAAAA</AttributeName>
                    <AttributeValue>4</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PN010NAAAAA</AttributeName>
                    <AttributeValue>788</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PR022CAPLAA</AttributeName>
                    <AttributeValue>U</AttributeValue>
                  </ATTRIBUTE>
                  <ATTRIBUTE>
                    <AttributeName>PC031NABLBN</AttributeName>
                    <AttributeValue>0</AttributeValue>
                  </ATTRIBUTE>
                </consumerResponse>
              </responseInfo_4_0>
            </getProduct_4_0Response>
          </Response>


import streamlit as st

def display_form():
    st.image("logo.png", width=200)
    st.markdown('<h1 class="centered-title">Search Criteria</h1>', unsafe_allow_html=True)

    # Initialize session state for form fields if not already initialized
    if 'unique_id' not in st.session_state:
        st.session_state.unique_id = ""
    if 'application_id' not in st.session_state:
        st.session_state.application_id = ""
    if 'first_name' not in st.session_state:
        st.session_state.first_name = ""
    if 'last_name' not in st.session_state:
        st.session_state.last_name = ""
    if 'country_code' not in st.session_state:
        st.session_state.country_code = ""
    if 'application_date' not in st.session_state:
        st.session_state.application_date = None
    if 'application_time' not in st.session_state:
        st.session_state.application_time = None
    if 'group_member' not in st.session_state:
        st.session_state.group_member = ""
    if 'strategy_code' not in st.session_state:
        st.session_state.strategy_code = ""
    if 'search_type' not in st.session_state:
        st.session_state.search_type = "Full Search"
    if 'call_type' not in st.session_state:
        st.session_state.call_type = "Consumer"

    # Define the form
    with st.form(key="search_form"):
        unique_id = st.text_input("Unique ID", value=st.session_state.unique_id)
        application_id = st.text_input("Application ID *", value=st.session_state.application_id)
        first_name = st.text_input("First Name", value=st.session_state.first_name)
        last_name = st.text_input("Last Name", value=st.session_state.last_name)
        country_code = st.text_input("Country Code", value=st.session_state.country_code)
        application_date = st.date_input("Application Date", value=st.session_state.application_date)
        application_time = st.time_input("Application Time", value=st.session_state.application_time)
        group_member = st.text_input("Group Member", value=st.session_state.group_member)
        strategy_code = st.text_input("Strategy Code", value=st.session_state.strategy_code)
        search_type = st.selectbox("Search Type", ["Full Search", "Partial Search"], index=["Full Search", "Partial Search"].index(st.session_state.search_type))
        call_type = st.selectbox("Call Type", ["Consumer", "Business"], index=["Consumer", "Business"].index(st.session_state.call_type))

        # Submit button inside the form
        submitted = st.form_submit_button("Submit")
        if submitted:
            # Only proceed if Application ID is filled
            if application_id:
                st.session_state.form_data = {
                    "Unique ID": unique_id,
                    "Application ID": application_id,
                    "First Name": first_name,
                    "Last Name": last_name,
                    "Country Code": country_code,
                    "Application Date": application_date,
                    "Application Time": application_time,
                    "Group Member": group_member,
                    "Strategy Code": strategy_code,
                    "Search Type": search_type,
                    "Call Type": call_type,
                }
                st.session_state.page = "output"  # Navigate to the output page
            else:
                st.warning("Please enter the Application ID.")  # Show a warning if not filled

    # Add the Clear button outside the form
    if st.button("Clear Criteria"):
        # Reset the session state for all form fields
        for key in ['unique_id', 'application_id', 'first_name', 'last_name', 'country_code', 
                     'application_date', 'application_time', 'group_member', 'strategy_code', 
                     'search_type', 'call_type']:
            if key in st.session_state:
                del st.session_state[key]  # Remove key from session state

        # Reset the default values in session state
        st.session_state.unique_id = ""
        st.session_state.application_id = "    "
        st.session_state.first_name = ""
        st.session_state.last_name = ""
        st.session_state.country_code = ""
        st.session_state.application_date = None
        st.session_state.application_time = None
        st.session_state.group_member = ""
        st.session_state.strategy_code = ""
        st.session_state.search_type = "Full Search"
        st.session_state.call_type = "Consumer"

        st.rerun()  # Refresh to clear the form

# Function to display the output page
def display_output():
    st.image("logo.png", width=200)
    st.markdown('<h1 class="centered-title">Output Page</h1>', unsafe_allow_html=True)
    if 'form_data' in st.session_state:
        st.write(st.session_state.form_data)
    else:
        st.write("No data available.")

# Determine which page to show
if 'page' not in st.session_state:
    st.session_state.page = "form"

if st.session_state.page == "form":
    display_form()
else:
    display_output()



######## new main.py

import streamlit as st
import pandas as pd

def display_form():
    st.set_page_config(initial_sidebar_state="collapsed")
    st.markdown(
     """ 
     <style>
       .collapsedControl{
            visibility: hidden;
        }
      </style>
     """,
      unsafe_allow_html=True
  )
    st.markdown(
        """
        <div data-testid="collapsedControl">
        </div>
        """,
        unsafe_allow_html=True
    )
    st.image("logo.png", width=250)
    st.markdown('<h1 class="centered-title">Search Criteria</h1>', unsafe_allow_html=True)
    
    st.markdown(
        """
        <style>
         .centered-title {
            text-align: center;  
            font-size: 40px;     
            font-weight: bold;   
            color: black;        
        }
        .reportview-container {
            background-color: black;  
            color: white;  
            height: 10px;
            width: 100%;
            margin-bottom: 30px;
        }
        .st-emotion-cache-1vt4y43 {
        display: inline-flex;
       -webkit-box-align: center;
        align-items: center;
       -webkit-box-pack: center;
        justify-content: center;
        font-weight: 400;
        padding: 0.25rem 0.75rem;
        border-radius: 10.5rem;
        min-height: 2.5rem;
         margin: 0px;
         line-height: 1.6;
        color: white !important;
         width: auto;
         user-select: none;
         background-color: rgb(23 143 255) !important;
         border: 1px solid rgba(49, 51, 63, 0.2);
        float: center;
    }
        .search-label {
            font-size: 35px;  
            text-transform: uppercase;  
            margin-top: 5px;
        }
        .required {
            color: red;  
        }
        .custom-button {
            background-color: #4CAF50; 
            color: white;
            border: none;
            padding: 10px 20px;
            text-align: center;
            text-decoration: none;
            display: inline-block;
            font-size: 16px;
            cursor: pointer;
            border-radius: 5px;
            margin-right: 10px; 
        }
        .custom-button-clear {
            background-color: #f44336; 
            color: white;
            border: none;
            padding: 10px 20px;
            text-align: center;
            text-decoration: none;
            display: inline-block;
            font-size: 16px;
            cursor: pointer;
            border-radius: 5px;
        }
        .st-emotion-cache-13ln4jf {
            max-width: 100% !important;  
            width: 100% !important;      
            padding: 4rem 1rem 10rem; !important;
        }
        .css-1lcbmhc {
            padding-left: 0 !important;  
            padding-right: 0 !important; 
        }
        .form-container {
            margin-left: 200%;  
            margin-right: 200%;  
        }
        </style>
        """,
        unsafe_allow_html=True
    )

    st.markdown(
        """
        <div class="reportview-container">
           <div class="logo-container">
            <div class="search-label">Search Criteria</div>
        </div>
        </div>
        """,
        unsafe_allow_html=True
    )
    
    if 'unique_id' not in st.session_state:
        st.session_state.unique_id = ""
    if 'application_id' not in st.session_state:
        st.session_state.application_id = ""
    if 'first_name' not in st.session_state:
        st.session_state.first_name = ""
    if 'last_name' not in st.session_state:
        st.session_state.last_name = ""
    if 'country_code' not in st.session_state:
        st.session_state.country_code = ""
    if 'application_date' not in st.session_state:
        st.session_state.application_date = None
    if 'application_time' not in st.session_state:
        st.session_state.application_time = None
    if 'group_member' not in st.session_state:
        st.session_state.group_member = ""
    if 'strategy_code' not in st.session_state:
        st.session_state.strategy_code = ""
    if 'search_type' not in st.session_state:
        st.session_state.search_type = "Full Search"
    if 'call_type' not in st.session_state:
        st.session_state.call_type = "Consumer"

   
    with st.form(key="search_form"):
        unique_id = st.text_input("Unique ID", value=st.session_state.unique_id)
        application_id = st.text_input("Application ID *", value=st.session_state.application_id)
        first_name = st.text_input("First Name", value=st.session_state.first_name)
        last_name = st.text_input("Last Name", value=st.session_state.last_name)
        country_code = st.text_input("Country Code", value=st.session_state.country_code)
        application_date = st.date_input("Application Date", value=st.session_state.application_date)
        application_time = st.time_input("Application Time", value=st.session_state.application_time)
        group_member = st.text_input("Group Member", value=st.session_state.group_member)
        strategy_code = st.text_input("Strategy Code", value=st.session_state.strategy_code)
        search_type = st.selectbox("Search Type", ["Full Search", "Partial Search"], index=["Full Search", "Partial Search"].index(st.session_state.search_type))
        call_type = st.selectbox("Call Type", ["Consumer", "Business"], index=["Consumer", "Business"].index(st.session_state.call_type))


        submitted = st.form_submit_button("Submit")
        if submitted:
            if application_id:
                st.session_state.form_data = {
                    "Unique ID": unique_id,
                    "Application ID": application_id,
                    "First Name": first_name,
                    "Last Name": last_name,
                    "Country Code": country_code,
                    "Application Date": application_date,
                    "Application Time": application_time,
                    "Group Member": group_member,
                    "Strategy Code": strategy_code,
                    "Search Type": search_type,
                    "Call Type": call_type,
                }
                st.session_state.page = "output"  
            else:
                st.warning("Please enter the Application ID.")  
                
    if st.button("Clear Criteria"):
        for key in ['unique_id', 'application_id', 'first_name', 'last_name', 'country_code', 
                     'application_date', 'application_time', 'group_member', 'strategy_code', 
                     'search_type', 'call_type']:
            if key in st.session_state:
                del st.session_state[key]

        
        st.session_state.unique_id = "   "
        st.session_state.application_id = "   "
        st.session_state.first_name = "   "
        st.session_state.last_name = "   "
        st.session_state.country_code = "   "
        st.session_state.application_date = None
        st.session_state.application_time = None
        st.session_state.group_member = "   "
        st.session_state.strategy_code = "   "
        st.session_state.search_type = "Full Search"
        st.session_state.call_type = "Consumer"

        st.rerun()  
        
# 2nd page
def display_output():
    st.image("logo.png", width=200)

    st.markdown(
        """
        <div class="reportview-container">
           <div class="logo-container">
        </div>
        </div>
        """,
        unsafe_allow_html=True
    )

    if 'form_data' in st.session_state:
        form_data = st.session_state.form_data

        # Create three copies of form_data with different Credit Bureaus
        credit_bureaus = [

            '<a href="./Equifax.py" target="_blank">Equifax</a>',
            '<a href="/pages/Experian.py" target="_blank">Experian</a>',
            '<a href="./Illion.py" target="_blank">Illion</a>'
        ]

        # Generate rows with the same form data but different credit bureau links
        data_rows = []
        for bureau in credit_bureaus:
            row_data = form_data.copy()  
            row_data["Credit Bureaus"] = bureau 
            data_rows.append(row_data)

    
        data = pd.DataFrame(data_rows)

        st.markdown(
            """
            <style>
             .st-emotion-cache-13ln4jf {
                max-width: 100% !important;  
                width: 100% !important;      
                padding: 4rem 1rem 10rem; !important;
            }
            .stApp {
                margin-left: 0rem;
            }
            .centered-title {
                text-align: center;  
                font-size: 40px;     
                font-weight: bold;   
                color: black;        
            }
            .reportview-container {
                background-color: black;  
                color: white;  
                height: 10px;
                width: 100%;
                margin-bottom: 30px;
            }
            .logo-container {
                display: flex;
                align-items: center;
                justify-content: center;
            }
            .dataframe {
                margin-right: 100px;
                margin-left: 100px;
            }
            .css-1lcbmhc {
                padding-left: 0 !important;  
                padding-right: 0 !important; 
            }
            .back-button {
                margin-left: 20%;  
            }
            .stButton {
                margin-left: 110px;
            }
            .st-emotion-cache-1vt4y43 {
                display: inline-flex;
                -webkit-box-align: center;
                align-items: center;
                -webkit-box-pack: center;
                justify-content: center;
                font-weight: 400;
                padding: 0.25rem 0.75rem;
                border-radius: 0.5rem;
                min-height: 2.5rem;
                margin: 0px;
                line-height: 1.6;
                color: white;
                width: auto;
                user-select: none;
                background-color: rgb(22 133 238 / 99%);
                border: 1px solid rgba(49, 51, 63, 0.2);
            }
            </style>
            """,
            unsafe_allow_html=True
        )

        # Render the data including links in a table
        st.markdown(data.to_html(escape=False, index=False), unsafe_allow_html=True)

    if st.button("Return"):
        if 'form_data' in st.session_state:
            del st.session_state.form_data
        st.session_state.page = "form"

# Determine which page to show
if 'page' not in st.session_state:
    st.session_state.page = "form"

if st.session_state.page == "form":
    display_form()
else:
    display_output()

####

import streamlit as st
import pandas as pd
import plotly.express as px
from lxml import etree
import io


def load_xml(file):
    try:
        tree = etree.parse(file)
        root = tree.getroot()
        return root
    except Exception as e:
        st.error(f"Error loading XML file: {e}")
        return None


def extract_data_for_account_lxml(element):
    raw_data = []
    aggregated_data = []

    interface_aggregations = element.xpath(".//InterfaceAggregations")

    for interface in interface_aggregations:
        aggregation_locals = interface.xpath(".//AggregationLocal")
        for agg_local in aggregation_locals:
            raw_items = agg_local.xpath("./Raw")
            for raw_item in raw_items:
                name = raw_item.get("Name")
                value = raw_item.get("Value")
                raw_data.append({"Name": name, "Value": value})

            aggregated_items = agg_local.xpath("./Aggregated")
            for agg_item in aggregated_items:
                name = agg_item.get("Name")
                value = agg_item.get("Value")
                description = agg_item.get("Description")

                group_number = None
                
                if "G1" in name:
                    group_number = 1  
                elif "G2" in name:
                    group_number = 2  
                elif "G3" in name:
                    group_number = 3  
                elif "G4" in name:
                    group_number = 4  
                elif "G5" in name:
                    group_number = 5  
                elif "G6" in name:
                    group_number = 6  
                elif "G7" in name:
                    group_number = 7  
                elif "G8" in name:
                    group_number = 8  
                elif "G9" in name:
                    group_number = 9  
                elif "G10" in name:
                    group_number = 10 
                else:
                    group_number = 11
                    
                group_number = min(group_number, 11)
                    
                aggregated_data.append({
                    "Name": name,
                    "Value": value,
                    "Description": description,
                })

    aggregated_data = sorted(aggregated_data, key=lambda x: x["Name"])

    return raw_data, aggregated_data


def extract_psummary_data(root):
    psummary_data = []

    for psummary in root.xpath(".//PSUMMARY"):
        creditor_name = psummary.findtext("CreditorName", default="N/A")
        first_reported_limit_amt = int(psummary.findtext("FirstReportedLimitAmt", default=0))
        current_limit = int(psummary.findtext("CurrentLimit", default=0))
        account_status = psummary.findtext("AccountStatus", default="N/A")
        credit_card_type = psummary.findtext("CreditCardType", default="N/A")

        psummary_data.append({
            'CreditorName': creditor_name,
            'FirstReportedLimitAmt': first_reported_limit_amt,
            'CurrentLimit': current_limit,
            'AccountStatus': account_status,
            'CreditCardType': credit_card_type  
        })

    return pd.DataFrame(psummary_data)

def  request_page():
    st.write(".")
    
def raw_page():
    st.title("Raw Table")

    file = './1_Account_035_Result.xml'
    root = load_xml(file)

    if root is None:
        st.error("Failed to load XML file.")
        return

    # Extract raw data using the existing function
    raw_data, _ = extract_data_for_account_lxml(root)

    if raw_data:
        # Convert raw data to a DataFrame for display
        raw_df = pd.DataFrame(raw_data)
        st.table(raw_df)  # Display the raw data in a table format
    else:
        st.write("No Raw Data Found.")


def analyze_page():
    st.title("Analysis")

    if 'data' not in st.session_state or st.session_state.data.empty:
        st.error("No data available to plot. Please check the XML file.")
        return

    data = st.session_state.data
    graph_type = st.selectbox("Select a graph type to display:", ["Line Graph", "Bar Graph", "Pie Chart"])

    if graph_type == "Line Graph":
        st.subheader("Line Graph of FirstReportedLimitAmt by Creditor Name")
        line_fig = px.line(data, x='CreditorName', y='FirstReportedLimitAmt', title="First Reported Limit Amount by Creditor Name")
        st.plotly_chart(line_fig)

    elif graph_type == "Bar Graph":
        st.subheader("Bar Graph of CurrentLimit by Creditor Name")
        bar_fig = px.bar(data, x='CreditorName', y='CurrentLimit', title="Current Limit by Creditor Name")
        st.plotly_chart(bar_fig)

    elif graph_type == "Pie Chart":
        st.subheader("Pie Chart of Account Status (Open vs Closed)")
        filtered_data = data[data['AccountStatus'].isin(['Open', 'Closed'])]
        if filtered_data.empty:
            st.error("No data available for Open or Closed accounts.")
            return

        pie_data = filtered_data['AccountStatus'].value_counts().reset_index()
        pie_data.columns = ['AccountStatus', 'Count']
        pie_fig = px.pie(pie_data, names='AccountStatus', values='Count', title="Distribution of Account Statuses")
        st.plotly_chart(pie_fig)

        if st.button("Back to Search", key="back_to_home_details"):
            st.session_state.page = "search"


        
def download_xml_button(xml_content, filename):
    xml_bytes = io.BytesIO()
    xml_bytes.write(xml_content.encode('utf-8'))
    xml_bytes.seek(0)
    st.download_button(
        label=f"Download {filename}",
        data=xml_bytes,
        file_name=filename,
        mime="application/xml"
)



def main():
 
    st.markdown(""" 
        <style>
        /* Style for the Provenir ID and Reference# */
        .top-info {
            position: absolute; 
            top: 10px; 
            right: 10px; 
            text-align: right; 
            font-size: 12px;
            font-family: Arial, sans-serif;
            color: black;
        }
       
        /* Align the text beside the logo */
        .header-text {
            display: inline-block;
            vertical-align: middle;
            font-family: Arial, sans-serif;
            font-size: 20px;
            font-weight: bold;
            color: black;
        }

        .st-emotion-cache-1vt4y43 {
    display: inline-flex;
    -webkit-box-align: center;
    align-items: center;
    -webkit-box-pack: center;
    justify-content: center;
    font-weight: 400;
    padding: 0.25rem 0.75rem;
    border-radius: 0.1rem; 
    min-height: 1.5rem;
    margin: 0px;
    line-height: 1.3;
    color: inherit;
    width: auto;
    user-select: none;
    background-color: rgb(240 240 240);
    border: 2px solid rgb(0 0 0);
}
    @media (max-width: 1024px) {
        .st-emotion-cache-1vt4y43 {
            width: 100%;  /* Make the buttons take full width on smaller screens */
            margin-bottom: 10px;  /* Add space between buttons */
        }
    }

    @media (max-width: 768px) {
        .st-emotion-cache-1vt4y43 {
            font-size: 12px;  /* Reduce the font size for smaller screens */
            padding: 0.2rem 0.6rem;  /* Reduce padding for better fit */
        }
        .st-emotion-cache-165ax5l {
    width: 90% !important;
    margin-bottom: 1rem;
    color: rgb(49, 51, 63);
    border-collapse: collapse;
    border: 1px solid rgba(49, 51, 63, 0.1);
    margin-left: 50px;
}
    }
      @media (max-width: 620px){
    .st-emotion-cache-165ax5l {
    width: 50% !important;
    margin-bottom: 1rem;
    color: rgb(49, 51, 63);
    border-collapse: collapse;
    border: 1px solid rgba(49, 51, 63, 0.1);
    margin-left: 20px;
}
}
        /* Add spacing below header */
        .header-section {
            padding-bottom: 20px;
        }

        </style>
    """, unsafe_allow_html=True)

    # Add Provenir ID and Reference# at the top
    st.markdown("""
        <div class='top-info'>
        <b>Provenir ID:</b> AUCMAP202401120802374200002<br>
        <b>Reference#:</b> 2024012639315
        </div>
    """, unsafe_allow_html=True)

    st.image("logo.png", width=200)

    col1, col2, col3, col4, col5, col6, col7, col8, col9 = st.columns([1, 1, 1, 1, 1, 1, 1, 1,1])

    with col1:
        if st.button("Request"):
                request_data = f"<Request><AccountNumber>{st.session_state.account_number}</AccountNumber></Request>"
                download_xml_button(request_data, "request.xml")
        st.session_state.page = "Request"
                
    with col2:
          if st.button("Response"):
                response_data = etree.tostring(root, pretty_print=True, encoding='utf8').decode('utf8')
                download_xml_button(response_data, "response.xml")

    with col3:
          if st.button("Demograph"):
                st.session_state.page = "Demograph"
    with col4:
          if st.button("Analyze"):
                st.session_state.page = "analyze"
    with col5:
          if st.button("VeriCheck"):
                st.session_state.page = "VeriCheck"
    with col6:
          if st.button("AML"):
                st.session_state.page = "AML"
    with col7:
          if st.button("Fraud"):
                st.session_state.page = "Fraud"   
    with col8:
          if st.button("Raw"):
                st.session_state.page = "Raw"
    with col9:
          if st.button("Aggregated"):
                st.session_state.page = "Aggregated"
    st.markdown(
        """
        <style>
         .reportview-container {
                background-color: black;  
                color: white;  
                height: 5px;
                width: 100%;
                margin-bottom: 30px;
            }
            .logo-container {
                display: flex;
                align-items: center;
                justify-content: center;
            }
            .dataframe {
                margin-right: 500px;
                margin-left:500px;
            }
       
        .st-emotion-cache-13ln4jf {
            max-width: 100% !important;  
            width: 100% !important;      
            padding: 4rem 1rem 10rem !important;
        }
        .css-1lcbmhc {
            padding-left: 0 !important;  
            padding-right: 0 !important; 
        }
        .st-emotion-cache-165ax5l {
           width: 70% !important;
           margin-bottom: 1rem;
            color: rgb(49, 51, 63);
            border-collapse: collapse;
            border: 1px solid rgba(49, 51, 63, 0.1);
            margin-left: 180px; !important;
        }
       .st-emotion-cache-a51556 {
    border-bottom: 1px solid rgba(49, 51, 63, 0.1);
    border-right: 1px solid rgba(49, 51, 63, 0.1);
    vertical-align: middle;
    padding: 0.25rem 0.375rem;
    font-weight: 400;
    color: rgba(49, 51, 63, 0.6);
    display: none;
        </style>
        """,
        unsafe_allow_html=True
    )

    st.markdown(
        """
        <div class="reportview-container">
           <div class="logo-container">
        </div>
        </div>
        """,
        unsafe_allow_html=True
    )

    if 'page' not in st.session_state:
        st.session_state.page = "search"
    if 'account_number' not in st.session_state:
        st.session_state.account_number = ""

    file = './1_Account_035_Result.xml'
    root = load_xml(file)

    if root is not None and 'data' not in st.session_state:
        st.session_state.data = extract_psummary_data(root)

    if st.session_state.page == "analyze":
        analyze_page()
    elif st.session_state.page == "Raw":
       raw_page()
    elif st.session_state.page == "Request":
       request_page()
    else:
        st.title("Aggregated Table")
       
        st.session_state.page = "account_details"
        st.write(f"{st.session_state.account_number}")

        raw_data, aggregated_data = extract_data_for_account_lxml(root)

        agg_df = pd.DataFrame(aggregated_data)
        if not agg_df.empty:
            st.table(agg_df)
        else:
            st.write("No Aggregated Data Found.")

     
if __name__ == "__main__":
    main()


# app.py
import streamlit as st
from mains import display_form  # Import the form page function
from Output import display_output  # Import the output page function
from Equifax import main1  # Assuming main1 is the correct function name for the data page
from Experian import experian_page  # Assuming main1 is the correct function name for the data page
from illion import illion_page  # Assuming main1 is the correct function name for the data page
from analyze import analyze_page # Assuming analyse_page is the correct function name for the anlayze page
from response import response_page # Assuming response_page is the correct function name for the response page
from request import request_page # Assuming request_page is the correct function name for the request page
from raw import raw_page # Assuming raw_page is the correct function name for the raw page
from summary import summary_page # Assuming summary_page is the correct function name for the summary page
from aggregated import aggregated_page # Assuming aggregated_page is the correct function name for the aggregated page
from demograph import demograph_page # Assuming aggregated_page is the correct function name for the aggregated page
from vericheck import vericheck_page # Assuming aggregated_page is the correct function name for the aggregated page
from fraud import fraud_page # Assuming aggregated_page is the correct function name for the aggregated page
from aml import aml_page # Assuming aggregated_page is the correct function name for the aggregated page


# Main logic for navigation
def main():
    # If there is no 'page' in session state, start on the form page
    if 'page' not in st.session_state:
        st.session_state.page = "form"  # Default to form page
    

    # Navigation control
    if st.session_state.page == "form":
       display_form()  # Show the form page
    elif st.session_state.page == "output":
       display_output()  # Show the output page
    elif st.session_state.page == "equifax":
       main1()  # Show the data page
    elif st.session_state.page == "experian":
       experian_page()# show the experian page
    elif st.session_state.page == "illion":
       illion_page() #show the illion page
    elif st.session_state.page == "analyze":
       analyze_page() #show the analyze page
    elif st.session_state.page == "Response":
       response_page() #show the response page
    elif st.session_state.page == "Request":
       request_page() #show the request page
    elif st.session_state.page == "Demograph":
        demograph_page() # show the demograph
    elif st.session_state.page == "VeriCheck":
        vericheck_page() # show the vericheck page
    elif st.session_state.page == "AML":
        aml_page() # show the aml page
    elif st.session_state.page == "Fraud":
        fraud_page() #show the fraud page
    elif st.session_state.page == "Summary":
        summary_page()  #show the summary page 
    elif st.session_state.page == "Raw":
        raw_page() #show the raw page
    elif st.session_state.page == "Aggregated":
        aggregated_page() #show the aggreagted

if __name__ == "__main__":  # Corrected the name check
    main()  # Call the main function to run the app

#main.py

import streamlit as st
import pandas as pd
import requests
from lxml import etree

# # API request and save function
# def fetch_and_save_response(application_id):
#     api_url = "https://your-api-endpoint.com/getData"  # Replace with actual API URL

#     # Construct the request payload
#     request_payload = {
#         "ApplicationID": application_id
#     }

#     # Send POST request to the API
#     response = requests.post(api_url, json=request_payload)

#     if response.status_code == 200:
#         response_data = response.json()  # Parse the JSON response

#         # Convert JSON to XML and save as xyz.xml
#         root = etree.Element("Root")
#         for key, value in response_data.items():
#             child = etree.SubElement(root, key)
#             child.text = str(value)

#         # Save XML response to a file
#         xml_file_name = "xyz.xml"
#         with open(xml_file_name, "wb") as f:
#             f.write(etree.tostring(root, pretty_print=True))

#         st.session_state.xml_file_path = xml_file_name  # Save the file path in session state
#         st.success(f"Response saved successfully as {xml_file_name}")
#     else:
#         st.error(f"Failed to fetch data. Status code: {response.status_code}")


#main page
def display_form():

# Display the image using st.image
    st.image("logo.png", width=250)

    st.markdown('<h1 class="centered-title">Search Criteria</h1>', unsafe_allow_html=True) #Search Criterian
#styling 
    st.markdown(
        
        """
        <style>
         .centered-title {
            text-align: center;  
            font-size: 40px;     
            font-weight: bold;   
            color: black;        
        }
        .reportview-container {
            background-color: black;  
            color: white;  
            height: 10px;
            width: 100%;
            margin-bottom: 30px;
        }
        .st-emotion-cache-1vt4y43 {
        display: inline-flex;
       -webkit-box-align: center;
        align-items: center;
       -webkit-box-pack: center;
        justify-content: center;
        font-weight: 400;
        padding: 0.25rem 0.75rem;
        min-height: 2.5rem;
         margin: 0px;
         line-height: 1.6;
        color: black !important;
         width: auto;
         user-select: none;
         border: 1px solid rgba(49, 51, 63, 0.2);
        float: center;
    }
        .search-label {
            font-size: 35px;  
            text-transform: uppercase;  
            margin-top: 5px;
        }
        .required {
            color: red;  
        }
        .custom-button {
            background-color: #4CAF50; 
            color: white;
            border: none;
            padding: 10px 20px;
            text-align: center;
            text-decoration: none;
            display: inline-block;
            font-size: 16px;
            cursor: pointer;
            border-radius: 5px;
            margin-right: 10px; 
        }
        .custom-button-clear {
            background-color: #f44336; 
            color: white;
            border: none;
            padding: 10px 20px;
            text-align: center;
            text-decoration: none;
            display: inline-block;
            font-size: 16px;
            cursor: pointer;
            border-radius: 5px;
        }
        .st-emotion-cache-13ln4jf {
            max-width: 100% !important;  
            width: 100% !important;      
            padding: 4rem 1rem 10rem; !important;
        }
        .css-1lcbmhc {
            padding-left: 0 !important;  
            padding-right: 0 !important; 
        }
        .form-container {
            margin-left: 200%;  
            margin-right: 200%;  
        }
        </style>
        """,
        unsafe_allow_html=True
    )
    
#Arrangment of the information on the page
    st.markdown(
        """
        <div class="reportview-container">
           <div class="logo-container">
            <div class="search-label">Search Criteria</div>
        </div>
        </div>
        """,
        unsafe_allow_html=True
    )
    
    #form
    if 'unique_id' not in st.session_state:
        st.session_state.unique_id = ""
    if 'application_id' not in st.session_state:
        st.session_state.application_id = ""
    if 'first_name' not in st.session_state:
        st.session_state.first_name = ""
    if 'last_name' not in st.session_state:
        st.session_state.last_name = ""
    if 'country_code' not in st.session_state:
        st.session_state.country_code = ""
    if 'application_date' not in st.session_state:
        st.session_state.application_date = None
    if 'application_time' not in st.session_state:
        st.session_state.application_time = None
    if 'group_member' not in st.session_state:
        st.session_state.group_member = ""
    if 'strategy_code' not in st.session_state:
        st.session_state.strategy_code = ""
    if 'search_type' not in st.session_state:
        st.session_state.search_type = "Full Search"
    if 'call_type' not in st.session_state:
        st.session_state.call_type = "Consumer"

   
    with st.form(key="submit_form1"):
        unique_id = st.text_input("Unique ID", value=st.session_state.unique_id)
        application_id = st.text_input("Application ID *", value=st.session_state.application_id)
        first_name = st.text_input("First Name", value=st.session_state.first_name)
        last_name = st.text_input("Last Name", value=st.session_state.last_name)
        country_code = st.text_input("Country Code", value=st.session_state.country_code)
        application_date = st.date_input("Application Date", value=st.session_state.application_date)
        application_time = st.time_input("Application Time", value=st.session_state.application_time)
        group_member = st.text_input("Group Member", value=st.session_state.group_member)
        strategy_code = st.text_input("Strategy Code", value=st.session_state.strategy_code)
        search_type = st.selectbox("Search Type", ["Full Search", "Partial Search"], index=["Full Search", "Partial Search"].index(st.session_state.search_type))
        call_type = st.selectbox("Call Type", ["Consumer", "Business"], index=["Consumer", "Business"].index(st.session_state.call_type))

#submit info
        submitted = st.form_submit_button("Submit")
        if submitted:
            if application_id:
                st.session_state.form_data = {
                    "Unique ID": unique_id,
                    "Application ID": application_id,
                    "First Name": first_name,
                    "Last Name": last_name,
                    "Country Code": country_code,
                    "Application Date": application_date,
                    "Application Time": application_time,
                    "Group Member": group_member,
                    "Strategy Code": strategy_code,
                    "Search Type": search_type,
                    "Call Type": call_type,
                }
                st.session_state.page = "output"  
            else:
                st.warning("Please enter the Application ID.")  
    #clearCriteria Info            
    if st.button("Clear Criteria"):
        for key in ['unique_id', 'application_id', 'first_name', 'last_name', 'country_code', 
                     'application_date', 'application_time', 'group_member', 'strategy_code', 
                     'search_type', 'call_type']:
            if key in st.session_state:
                del st.session_state[key]

        
        st.session_state.unique_id = "   "
        st.session_state.application_id = "   "
        st.session_state.first_name = "   "
        st.session_state.last_name = "   "
        st.session_state.country_code = "   "
        st.session_state.application_date = None
        st.session_state.application_time = None
        st.session_state.group_member = "   "
        st.session_state.strategy_code = "   "
        st.session_state.search_type = "Full Search"
        st.session_state.call_type = "Consumer"

        st.rerun()  
        request.py
import streamlit as st
import pandas as pd
import plotly.express as px
from lxml import etree

# Load the XML file
def load_xml(file):
    try:
        tree = etree.parse(file)
        root = tree.getroot()
        return root
    except Exception as e:
        st.error(f"Error loading XML file: {e}")
        return None

# Extract Provenir ID and Unique ID from XML file
def extract_ids_from_xml(root):
    header_segment = root.find(".//HeaderSegment")
    if header_segment is not None:
        provenir_id = header_segment.get("ProvenirID", "N/A")
        unique_id = header_segment.get("UniqueID", "N/A")
        return provenir_id, unique_id

    return "N/A", "N/A"

# Function to go back to the previous page
def go_back():
    if 'page_history' in st.session_state and st.session_state.page_history:
        st.session_state.page = st.session_state.page_history.pop()  # Go to the last visited page
    else:
        st.session_state.page = "form"  # Default to the form page if no history exists


# Function to create Request page
def request_page():
    #Styling
     st.markdown(""" 
        <style>
            .st-emotion-cache-13ln4jf {
                max-width: 100% !important;
                width: 100% !important;
                padding: 4rem 1rem 10rem; !important;
            }
            .dataframe {
                margin-right: 100px;
            }
            .css-1lcbmhc {
                padding-left: 0 !important;
                padding-right: 0 !important;
            }
        /* Style for the Provenir ID and Reference# */
        .top-info {
            position: absolute; 
            top: 10px; 
            right: 10px; 
            text-align: right; 
            font-size: 12px;
            color: black;
        }
       
        /* Align the text beside the logo */
        .header-text {
            display: inline-block;
            vertical-align: middle;
            font-size: 20px;
            font-weight: bold;
            color: black;
        }
        .st-emotion-cache-1vt4y43 {
         display: inline-flex;
         -webkit-box-align: center;
         align-items: center;
         -webkit-box-pack: center;
         justify-content: center;
         font-weight: 400;
         padding: 0.25rem 0.75rem;
         border-radius: 0.1rem;
         margin: 4px;
         line-height: 1.3;
        color: black;
        width: 110px;
        user-select: none;
        background-color: rgb(240 240 240);
        border: 1.5px solid rgb(0 0 0);
}
.st-emotion-cache-463q5x {
    margin: 0px;
    padding-right: 2.75rem;
    color: rgb(49, 51, 63);
    border-radius: 0.5rem;
    background-color: white;
}


    @media (max-width: 1024px) {
        .st-emotion-cache-1vt4y43 {
            width: 100%;  /* Make the buttons take full width on smaller screens */
            margin-bottom: 10px;  /* Add space between buttons */
        }
    }

    @media (max-width: 768px) {
        .st-emotion-cache-1vt4y43 {
            font-size: 12px;  /* Reduce the font size for smaller screens */
            padding: 0.2rem 0.6rem;  /* Reduce padding for better fit */
        }
        .st-emotion-cache-165ax5l {
    width: 90% !important;
    margin-bottom: 1rem;
    color: rgb(49, 51, 63);
    border-collapse: collapse;
    border: 1px solid rgba(49, 51, 63, 0.1);
    margin-left: 50px;
}
    }
      @media (max-width: 620px){
    .st-emotion-cache-165ax5l {
    width: 50% !important;
    margin-bottom: 1rem;
    color: rgb(49, 51, 63);
    border-collapse: collapse;
    border: 1px solid rgba(49, 51, 63, 0.1);
    margin-left: 20px;
}
}
.navbar {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            background-color: white; /* Change to match your app's theme */
            z-index: 1000; /* Ensure it stays on top of other elements */
            padding: 10px; /* Optional padding */
            border-bottom: 1px solid rgba(0, 0, 0, 0.1); /* Optional border */
        }
        /* Add spacing below header */
        .header-section {
            padding-bottom: 20px;
        }

        </style>
    """, unsafe_allow_html=True)
     # Load the XML file for Provenir_id and Unique_id
     file = './1_Account_035_Result.xml'
     root = load_xml(file)

     if root is None:
        st.error("Failed to load XML file.")
        return

  
     provenir_id, unique_id = extract_ids_from_xml(root)


     st.markdown(f"""
        <div class='top-info'>
        <b>Provenir ID:</b> {provenir_id}<br>
        <b>Unique ID:</b> {unique_id}
        </div>
    """, unsafe_allow_html=True)

     st.image("logo.png", width=200) #logo Arrangment
     st.markdown('<div class="navbar">', unsafe_allow_html=True)
    # Navbar Buttons
     if "page_history" not in st.session_state:
        st.session_state.page_history = []

    # Navbar Buttons
     navbar = st.container()
     with navbar:
        col1, col2, col3, col4, col5, col6, col7, col8, col9, col10 = st.columns(10)

        with col1:
            if st.button("Request"):
               st.session_state.page_history.append(st.session_state.page)
               st.session_state.page = "Request"        
        with col2:
            if st.button("Response"):
                st.session_state.page_history.append(st.session_state.page)
                st.session_state.page = "Response"

        with col3:
            if st.button("Demograph"):
                st.session_state.page_history.append(st.session_state.page)
                st.session_state.page = "Demograph"
        with col4:
            if st.button("Analyze"):
                st.session_state.page_history.append(st.session_state.page)
                st.session_state.page = "analyze"
        with col5:
            if st.button("VeriCheck"):
                st.session_state.page_history.append(st.session_state.page)
                st.session_state.page = "VeriCheck"
        with col6:
            if st.button("AML"):
                st.session_state.page_history.append(st.session_state.page)
                st.session_state.page = "AML"
        with col7:
            if st.button("Fraud"):
                st.session_state.page_history.append(st.session_state.page)
                st.session_state.page = "Fraud"
        with col8:
            if st.button("Raw"):
                st.session_state.page_history.append(st.session_state.page)
                st.session_state.page = "Raw"
        with col9:
            if st.button("Aggregated"):
                st.session_state.page_history.append(st.session_state.page)
                st.session_state.page = "Aggregated"
        with col10:
            if st.button("Summary"):
                st.session_state.page_history.append(st.session_state.page)
                st.session_state.page = "Summary"

     st.markdown('</div>', unsafe_allow_html=True)
     
     st.markdown(
        """
        <style>
         .reportview-container {
                background-color: black;  
                color: white;  
                height: 5px;
                width: 100%;
                margin-bottom: 30px;
            }
            .logo-container {
                display: flex;
                align-items: center;
                justify-content: center;
            }
        .st-emotion-cache-13ln4jf {
            max-width: 100% !important;  
            width: 100% !important;      
            padding: 4rem 4rem 10rem !important;
        }
        .css-1lcbmhc {
            padding-left: 0 !important;  
            padding-right: 0 !important; 
        }
        .st-emotion-cache-165ax5l {
           width: 70% !important;
           margin-bottom: 1rem;
            color: rgb(49, 51, 63);
            border-collapse: collapse;
            border: 1px solid rgba(49, 51, 63, 0.1);
            margin-left: 180px; !important;
        }
       .st-emotion-cache-a51556 {
           border-bottom: 1px solid rgba(49, 51, 63, 0.1);
           border-right: 1px solid rgba(49, 51, 63, 0.1);
           vertical-align: middle;
           padding: 0.25rem 0.375rem;
           font-weight: 400;
           color: rgba(49, 51, 63, 0.6);
           display: none;
        }
        </style>
        """,
        unsafe_allow_html=True
    )

     #Arrangment of the information on the page
     st.markdown(
        """
        <div class="reportview-container">
           <div class="logo-container">
        </div>
        </div>
        """,
        unsafe_allow_html=True
    )
    
        # Styling
     st.markdown(
            """
            <style>
            .st-emotion-cache-13ln4jf {
                max-width: 100% !important;
                width: 100% !important;
                padding: 4rem 1rem 10rem; !important;
            }
            .dataframe {
                margin-right: 100px;
            }
            .css-1lcbmhc {
                padding-left: 0 !important;
                padding-right: 0 !important;
            }
            </style>
            """,
            unsafe_allow_html=True
        )
       
     if 'form_data' in st.session_state:
        form_data = st.session_state.form_data

    # Create a list to hold all rows of form data (3 rows for each bureau)
        data_rows = [form_data.copy() for _ in range(3)]  # Create 3 copies of form_data

    # Generate output in Table format without the "Credit Bureaus" column
        data = pd.DataFrame(data_rows)

        # Display the table
        st.markdown(
            """
            <style>
                .dataframe {
                    border: 1px solid #ddd;
                    padding: 8px;
                    text-align: left;
                    border-collapse: collapse;
                    width: 85%;
                    margin-left: 100px;
                }
                .dataframe th, .dataframe td {
                    padding: 8px;
                    border-bottom: 1px solid #ddd;
                }
                .dataframe tr:hover {
                    background-color: #f5f5f5;
                }
            </style>
            """,
            unsafe_allow_html=True
        )
        st.markdown(data.to_html(escape=False, index=False), unsafe_allow_html=True)


 
        # Convert DataFrame to CSV format
     csv_data = data.to_csv(index=False)

    # Create two equal-width columns for "Download" and "Back" buttons
     col1, col2 = st.columns([1, 1])  # Equal width columns

     with col1:
        # Download button for CSV
        st.download_button(
            label="Download",
            data=csv_data,
            file_name='bureau_data.csv',
            mime='text/csv',
        )

     with col2:
         # Back button   
        if st.button("Back"):
         if len(st.session_state.page_history) > 0:
            st.session_state.page = st.session_state.page_history.pop()  # Go back to the previous page
         else:
            st.error("No previous page to go back to.")


response.py
import streamlit as st
import pandas as pd
import plotly.express as px
from lxml import etree

# Load the XML file
def load_xml(file):
    try:
        tree = etree.parse(file)
        root = tree.getroot()
        return root
    except Exception as e:
        st.error(f"Error loading XML file: {e}")
        return None
    
# Extract psummary data for analysis
def extract_psummary_data(root):
    psummary_data = []
    
    for psummary in root.xpath(".//PSUMMARY"):
        creditor_name = psummary.findtext("CreditorName", default="N/A")
        first_reported_limit_amt = int(psummary.findtext("FirstReportedLimitAmt", default=0))
        current_limit = int(psummary.findtext("CurrentLimit", default=0))
        account_status = psummary.findtext("AccountStatus", default="N/A")
        credit_card_type = psummary.findtext("CreditCardType", default="N/A")
        
        psummary_data.append({
            'CreditorName': creditor_name,
            'FirstReportedLimitAmt': first_reported_limit_amt,
            'CurrentLimit': current_limit,
            'AccountStatus': account_status,
            'CreditCardType': credit_card_type  
        })
        
    return pd.DataFrame(psummary_data)

# Function to load and extract data from the uploaded XML file
def load_and_extract_data(xml_file_path):
    try:
        tree = etree.parse(xml_file_path)
        root = tree.getroot()
        data = extract_psummary_data(root)
        st.session_state.data = data
        st.success("Data successfully extracted and loaded.")
    except Exception as e:
        st.error(f"Error loading XML file: {e}")

# Extract Provenir ID and Unique ID from XML file
def extract_ids_from_xml(root):
    header_segment = root.find(".//HeaderSegment")
    if header_segment is not None:
        provenir_id = header_segment.get("ProvenirID", "N/A")
        unique_id = header_segment.get("UniqueID", "N/A")
        return provenir_id, unique_id

    return "N/A", "N/A"

# Function to create Response page
def response_page():
    #Styling
     st.markdown(""" 
        <style>
            .st-emotion-cache-13ln4jf {
                max-width: 100% !important;
                width: 100% !important;
                padding: 4rem 1rem 10rem; !important;
            }
            .dataframe {
                margin-right: 100px;
                margin-left: 100px;
            }
            .css-1lcbmhc {
                padding-left: 0 !important;
                padding-right: 0 !important;
            }
        /* Style for the Provenir ID and Reference# */
        .top-info {
            position: absolute; 
            top: 10px; 
            right: 10px; 
            text-align: right; 
            font-size: 12px;
            font-family: Arial, sans-serif;
            color: black;
        }
       
        /* Align the text beside the logo */
        .header-text {
            display: inline-block;
            vertical-align: middle;
            font-family: Arial, sans-serif;
            font-size: 20px;
            font-weight: bold;
            color: black;
        }
      .st-emotion-cache-1vt4y43 {
    display: inline-flex;
    -webkit-box-align: center;
    align-items: center;
    -webkit-box-pack: center;
    justify-content: center;
    font-weight: 400;
    padding: 0.25rem 0.75rem;
    border-radius: 0.1rem;
    /* min-height: 1.5rem; */
    margin: 4px;
    line-height: 1.3;
    color: black;
    width: 110px;
    user-select: none;
    background-color: rgb(240 240 240);
    border: 1.5px solid rgb(0 0 0);
}
.st-emotion-cache-463q5x {
    margin: 0px;
    padding-right: 2.75rem;
    color: rgb(49, 51, 63);
    border-radius: 0.5rem;
    background-color: white;
}


    @media (max-width: 1024px) {
        .st-emotion-cache-1vt4y43 {
            width: 100%;  /* Make the buttons take full width on smaller screens */
            margin-bottom: 10px;  /* Add space between buttons */
        }
    }

    @media (max-width: 768px) {
        .st-emotion-cache-1vt4y43 {
            font-size: 12px;  /* Reduce the font size for smaller screens */
            padding: 0.2rem 0.6rem;  /* Reduce padding for better fit */
        }
        .st-emotion-cache-165ax5l {
    width: 90% !important;
    margin-bottom: 1rem;
    color: rgb(49, 51, 63);
    border-collapse: collapse;
    border: 1px solid rgba(49, 51, 63, 0.1);
    margin-left: 50px;
}
    }
      @media (max-width: 620px){
    .st-emotion-cache-165ax5l {
    width: 50% !important;
    margin-bottom: 1rem;
    color: rgb(49, 51, 63);
    border-collapse: collapse;
    border: 1px solid rgba(49, 51, 63, 0.1);
    margin-left: 20px;
}
}
.navbar {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            background-color: white; /* Change to match your app's theme */
            z-index: 1000; /* Ensure it stays on top of other elements */
            padding: 10px; /* Optional padding */
            border-bottom: 1px solid rgba(0, 0, 0, 0.1); /* Optional border */
        }
        /* Add spacing below header */
        .header-section {
            padding-bottom: 20px;
        }

        </style>
    """, unsafe_allow_html=True)
     # Load the XML file for Provenir_id and Unique_id
     file = './1_Account_035_Result.xml'
     root = load_xml(file)

     if root is None:
        st.error("Failed to load XML file.")
        return

  
     provenir_id, unique_id = extract_ids_from_xml(root)


     st.markdown(f"""
        <div class='top-info'>
        <b>Provenir ID:</b> {provenir_id}<br>
        <b>Unique ID:</b> {unique_id}
        </div>
    """, unsafe_allow_html=True)

     st.image("logo.png", width=200) #logo Arrangment
     st.markdown('<div class="navbar">', unsafe_allow_html=True)
    # Navbar Buttons
     if "page_history" not in st.session_state:
        st.session_state.page_history = []

    # Navbar Buttons
     navbar = st.container()
     with navbar:
        col1, col2, col3, col4, col5, col6, col7, col8, col9, col10 = st.columns(10)

        with col1:
            if st.button("Request"):
               st.session_state.page_history.append(st.session_state.page)
               st.session_state.page = "Request"        
        with col2:
            if st.button("Response"):
                st.session_state.page_history.append(st.session_state.page)
                st.session_state.page = "Response"

        with col3:
            if st.button("Demograph"):
                st.session_state.page_history.append(st.session_state.page)
                st.session_state.page = "Demograph"
        with col4:
            if st.button("Analyze"):
                st.session_state.page_history.append(st.session_state.page)
                st.session_state.page = "analyze"
        with col5:
            if st.button("VeriCheck"):
                st.session_state.page_history.append(st.session_state.page)
                st.session_state.page = "VeriCheck"
        with col6:
            if st.button("AML"):
                st.session_state.page_history.append(st.session_state.page)
                st.session_state.page = "AML"
        with col7:
            if st.button("Fraud"):
                st.session_state.page_history.append(st.session_state.page)
                st.session_state.page = "Fraud"
        with col8:
            if st.button("Raw"):
                st.session_state.page_history.append(st.session_state.page)
                st.session_state.page = "Raw"
        with col9:
            if st.button("Aggregated"):
                st.session_state.page_history.append(st.session_state.page)
                st.session_state.page = "Aggregated"
        with col10:
            if st.button("Summary"):
                st.session_state.page_history.append(st.session_state.page)
                st.session_state.page = "Summary"

     st.markdown('</div>', unsafe_allow_html=True)
     
     st.markdown(
        """
        <style>
         .reportview-container {
                background-color: black;  
                color: white;  
                height: 5px;
                width: 100%;
                margin-bottom: 30px;
            }
            .logo-container {
                display: flex;
                align-items: center;
                justify-content: center;
            }
        .st-emotion-cache-13ln4jf {
            max-width: 100% !important;  
            width: 100% !important;      
            padding: 4rem 4rem 10rem !important;
        }
        .css-1lcbmhc {
            padding-left: 0 !important;  
            padding-right: 0 !important; 
        }
        .st-emotion-cache-165ax5l {
           width: 70% !important;
           margin-bottom: 1rem;
            color: rgb(49, 51, 63);
            border-collapse: collapse;
            border: 1px solid rgba(49, 51, 63, 0.1);
            margin-left: 180px; !important;
        }
       .st-emotion-cache-a51556 {
           border-bottom: 1px solid rgba(49, 51, 63, 0.1);
           border-right: 1px solid rgba(49, 51, 63, 0.1);
           vertical-align: middle;
           padding: 0.25rem 0.375rem;
           font-weight: 400;
           color: rgba(49, 51, 63, 0.6);
           display: none;
        }
        </style>
        """,
        unsafe_allow_html=True
    )

     #Arrangment of the information on the page
     st.markdown(
        """
        <div class="reportview-container">
           <div class="logo-container">
        </div>
        </div>
        """,
        unsafe_allow_html=True
    )

     file_path = './1_Account_035_Result.xml'

    # Read and display the XML content
     with open(file_path, 'r') as file:
        xml_content = file.read()

    # Create two columns for the header and download button side by side
     col1, col2 = st.columns([3, 1])

     with col1:
        st.subheader("XML File Content")
    
     with col2:
        st.download_button(
            label="Download",
            data=xml_content,
            file_name="response.xml",
            mime="application/xml"
        )

    # Display the XML content in a code block below
     st.code(xml_content, language='xml')

     # Back button   
     if st.button("Back"):
         if len(st.session_state.page_history) > 0:
            st.session_state.page = st.session_state.page_history.pop()  # Go back to the previous page
         else:
            st.error("No previous page to go back to.")

summary.py
import streamlit as st
from lxml import etree

# Load the XML file
def load_xml(file):
    try:
        tree = etree.parse(file)
        root = tree.getroot()
        return root
    except Exception as e:
        st.error(f"Error loading XML file: {e}")
        return None
    


# Extract Provenir ID and Unique ID from XML file
def extract_ids_from_xml(root):
    header_segment = root.find(".//HeaderSegment")
    if header_segment is not None:
        provenir_id = header_segment.get("ProvenirID", "N/A")
        unique_id = header_segment.get("UniqueID", "N/A")
        return provenir_id, unique_id

    return "N/A", "N/A"

# Function to extract name and value from aggregated data
def extract_data_for_account_lxml(element):  
    aggregated_data = []
    interface_aggregations = element.xpath(".//InterfaceAggregations")

    for interface in interface_aggregations:
        aggregation_locals = interface.xpath(".//AggregationLocal")
        for agg_local in aggregation_locals:
            aggregated_items = agg_local.xpath("./Aggregated")
            for agg_item in aggregated_items:
                name = agg_item.get("Name")
                value = agg_item.get("Value")
                aggregated_data.append((name, value))  # Collect name and value as tuples
    return aggregated_data  # Return the aggregated data

# Function to display summary information based on extracted aggregated data
def display_summary_info(aggregated_data):
    # Ensure there is aggregated data to display
    if aggregated_data:
        # For this example, we will take the first name and value
        name, value = aggregated_data[0]  # Adjust as needed (or implement a selection mechanism)
    else:
        name, value = "N/A", "N/A"
        
    # Display the summary information using the HTML template
    st.markdown(f"""
    <div style="
        border: 2px solid black; 
        padding: 10px; 
        border-radius: 10px;
        background-color: #f9f9f9;
        ">
        <h1 style="font-size: 18px;">
            This applicant currently holds several open accounts, with the newest account being <b>{name}</b> months old. The total default unpaid amount is <b>{value}</b>, indicating a history of potential financial distress. These insights help underwriters assess the creditworthiness of the applicant by providing a snapshot of their current financial obligations and the recency of their credit activity.
        </h1>
    </div>
    """, unsafe_allow_html=True)
        
# Function to create Summary page
def summary_page():
    #Styling
     st.markdown(""" 
        <style>
            .st-emotion-cache-13ln4jf {
                max-width: 100% !important;
                width: 100% !important;
                padding: 4rem 1rem 10rem; !important;
            }
            .dataframe {
                margin-right: 100px;
                margin-left: 100px;
            }
            .css-1lcbmhc {
                padding-left: 0 !important;
                padding-right: 0 !important;
            }
        /* Style for the Provenir ID and Reference# */
        .top-info {
            position: absolute; 
            top: 10px; 
            right: 10px; 
            text-align: right; 
            font-size: 12px;
            font-family: Arial, sans-serif;
            color: black;
        }
       
        /* Align the text beside the logo */
        .header-text {
            display: inline-block;
            vertical-align: middle;
            font-family: Arial, sans-serif;
            font-size: 20px;
            font-weight: bold;
            color: black;
        }
      .st-emotion-cache-1vt4y43 {
    display: inline-flex;
    -webkit-box-align: center;
    align-items: center;
    -webkit-box-pack: center;
    justify-content: center;
    font-weight: 400;
    padding: 0.25rem 0.75rem;
    border-radius: 0.1rem;
    /* min-height: 1.5rem; */
    margin: 20px;
    line-height: 1.3;
    color: black;
    width: 110px;
    user-select: none;
    background-color: rgb(240 240 240);
    border: 1.5px solid rgb(0 0 0);
}
.st-emotion-cache-463q5x {
    margin: 0px;
    padding-right: 2.75rem;
    color: rgb(49, 51, 63);
    border-radius: 0.5rem;
    background-color: white;
}


    @media (max-width: 1024px) {
        .st-emotion-cache-1vt4y43 {
            width: 100%;  /* Make the buttons take full width on smaller screens */
            margin-bottom: 10px;  /* Add space between buttons */
        }
    }

    @media (max-width: 768px) {
        .st-emotion-cache-1vt4y43 {
            font-size: 12px;  /* Reduce the font size for smaller screens */
            padding: 0.2rem 0.6rem;  /* Reduce padding for better fit */
        }
        .st-emotion-cache-165ax5l {
    width: 90% !important;
    margin-bottom: 1rem;
    color: rgb(49, 51, 63);
    border-collapse: collapse;
    border: 1px solid rgba(49, 51, 63, 0.1);
    margin-left: 50px;
}
    }
      @media (max-width: 620px){
    .st-emotion-cache-165ax5l {
    width: 50% !important;
    margin-bottom: 1rem;
    color: rgb(49, 51, 63);
    border-collapse: collapse;
    border: 1px solid rgba(49, 51, 63, 0.1);
    margin-left: 20px;
}
}
.navbar {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            background-color: white; /* Change to match your app's theme */
            z-index: 1000; /* Ensure it stays on top of other elements */
            padding: 10px; /* Optional padding */
            border-bottom: 1px solid rgba(0, 0, 0, 0.1); /* Optional border */
        }
        /* Add spacing below header */
        .header-section {
            padding-bottom: 20px;
        }

        </style>
    """, unsafe_allow_html=True)
     
     # Load the XML file for Provenir_id and Unique_id
     file = './1_Account_035_Result.xml'
     root = load_xml(file)

     if root is None:
        st.error("Failed to load XML file.")
        return

  
     provenir_id, unique_id = extract_ids_from_xml(root)


     st.markdown(f"""
        <div class='top-info'>
        <b>Provenir ID:</b> {provenir_id}<br>
        <b>Unique ID:</b> {unique_id}
        </div>
    """, unsafe_allow_html=True)

     st.image("logo.png", width=200) #logo Arrangment
     st.markdown('<div class="navbar">', unsafe_allow_html=True)
    # Navbar Buttons
     if "page_history" not in st.session_state:
        st.session_state.page_history = []

    # Navbar Buttons
     navbar = st.container()
     with navbar:
        col1, col2, col3, col4, col5, col6, col7, col8, col9, col10 = st.columns(10)

        with col1:
            if st.button("Request"):
               st.session_state.page_history.append(st.session_state.page)
               st.session_state.page = "Request"        
        with col2:
            if st.button("Response"):
                st.session_state.page_history.append(st.session_state.page)
                st.session_state.page = "Response"

        with col3:
            if st.button("Demograph"):
                st.session_state.page_history.append(st.session_state.page)
                st.session_state.page = "Demograph"
        with col4:
            if st.button("Analyze"):
                st.session_state.page_history.append(st.session_state.page)
                st.session_state.page = "analyze"
        with col5:
            if st.button("VeriCheck"):
                st.session_state.page_history.append(st.session_state.page)
                st.session_state.page = "VeriCheck"
        with col6:
            if st.button("AML"):
                st.session_state.page_history.append(st.session_state.page)
                st.session_state.page = "AML"
        with col7:
            if st.button("Fraud"):
                st.session_state.page_history.append(st.session_state.page)
                st.session_state.page = "Fraud"
        with col8:
            if st.button("Raw"):
                st.session_state.page_history.append(st.session_state.page)
                st.session_state.page = "Raw"
        with col9:
            if st.button("Aggregated"):
                st.session_state.page_history.append(st.session_state.page)
                st.session_state.page = "Aggregated"
        with col10:
            if st.button("Summary"):
                st.session_state.page_history.append(st.session_state.page)
                st.session_state.page = "Summary"

     st.markdown('</div>', unsafe_allow_html=True)
     
     st.markdown(
        """
        <style>
         .reportview-container {
                background-color: black;  
                color: white;  
                height: 5px;
                width: 100%;
                margin-bottom: 30px;
            }
            .logo-container {
                display: flex;
                align-items: center;
                justify-content: center;
            }
        .st-emotion-cache-13ln4jf {
            max-width: 100% !important;  
            width: 100% !important;      
            padding: 4rem 4rem 10rem !important;
        }
        .css-1lcbmhc {
            padding-left: 0 !important;  
            padding-right: 0 !important; 
        }
        .st-emotion-cache-165ax5l {
           width: 70% !important;
           margin-bottom: 1rem;
            color: rgb(49, 51, 63);
            border-collapse: collapse;
            border: 1px solid rgba(49, 51, 63, 0.1);
            margin-left: 180px; !important;
        }
       .st-emotion-cache-a51556 {
           border-bottom: 1px solid rgba(49, 51, 63, 0.1);
           border-right: 1px solid rgba(49, 51, 63, 0.1);
           vertical-align: middle;
           padding: 0.25rem 0.375rem;
           font-weight: 400;
           color: rgba(49, 51, 63, 0.6);
           display: none;
        }
        </style>
        """,
        unsafe_allow_html=True
    )

     #Arrangment of the information on the page
     st.markdown(
        """
        <div class="reportview-container">
           <div class="logo-container">
        </div>
        </div>
        """,
        unsafe_allow_html=True
    )

    # Extract aggregated data
     aggregated_data = extract_data_for_account_lxml(root)

    # Call the display function to show the summary
     display_summary_info(aggregated_data)
     
      # Back button   
     if st.button("Back"):
         if len(st.session_state.page_history) > 0:
            st.session_state.page = st.session_state.page_history.pop()  # Go back to the previous page
         else:
            st.error("No previous page to go back to.")


     #experian.py
import streamlit as st
import pandas as pd
import plotly.express as px
from lxml import etree


# Load the XML file
def load_xml(file):
    try:
        tree = etree.parse(file)
        root = tree.getroot()
        return root
    except Exception as e:
        st.error(f"Error loading XML file: {e}")
        return None

# #Extracting Of Raw And Aggregated data from Xml file
def extract_data_for_account_lxml(element):
    raw_data = []
    aggregated_data = []

    interface_aggregations = element.xpath(".//InterfaceAggregations")

    for interface in interface_aggregations:
        aggregation_locals = interface.xpath(".//AggregationLocal")
        for agg_local in aggregation_locals:
            raw_items = agg_local.xpath("./Raw")
            for raw_item in raw_items:
                name = raw_item.get("Name")
                value = raw_item.get("Value")
                raw_data.append({"Name": name, "Value": value})

            aggregated_items = agg_local.xpath("./Aggregated")
            for agg_item in aggregated_items:
                name = agg_item.get("Name")
                value = agg_item.get("Value")
                description = agg_item.get("Description")

                # Initialize category variable
                category = ""

                # Determine the category based on the name
                if name.startswith("G1_"):
                    category = "G1_Demographics"
                elif name.startswith("G2_"):
                    category = "G2_Age"
                elif name.startswith("G3_"):
                    category = "G3_Credit History"
                elif name.startswith("G4_"):
                    category = "G4_Employment"
                elif name.startswith("G5_"):
                    category = "G5_Financial Status"
                elif name.startswith("G6_"):
                    category = "G6_Inquiries"
                elif name.startswith("G7_"):
                    category = "G7_Public Records"
                elif name.startswith("G8_"):
                    category = "G8_Collections"
                elif name.startswith("G9_"):
                    category = "G9_Fraud"
                elif name.startswith("G10_"):
                    category = "G10_Account Details"
                else:
                    category = "Other"

                # Append to aggregated_data as a row
                aggregated_data.append([
                    category,
                    name,
                    value,
                    description,
                ])

    # Custom sorting order
    custom_category_order = {
        "G1_Demographics": 1,
        "G2_Age": 2,
        "G3_Credit History": 3,
        "G4_Employment": 4,
        "G5_Financial Status": 5,
        "G6_Inquiries": 6,
        "G7_Public Records": 7,
        "G8_Collections": 8,
        "G9_Fraud": 9,
        "G10_Account Details": 10,
        "Other": 11,
    }

    # Sort the aggregated data by category and then by Name
    aggregated_data.sort(key=lambda x: (custom_category_order.get(x[0], 11), x[1]))

    return raw_data, aggregated_data

def display_data(aggregated_data):
    current_category = None
    for entry in aggregated_data:
        category = entry["Category"]
        
        # Only print the category header if it's different from the last printed category
        if category != current_category:
            if current_category is not None:
                print()  # Add a blank line before the next category
            print(category)  # Print category header
            current_category = category
            
        # Print data entries with specific formatting
        print(f"{entry['Name']}\t{entry['Value']}\t{entry['Description']}")  # Print data entries


# Extract Provenir ID and Unique ID from XML file
def extract_ids_from_xml(root):
    header_segment = root.find(".//HeaderSegment")
    if header_segment is not None:
        provenir_id = header_segment.get("ProvenirID", "N/A")
        unique_id = header_segment.get("UniqueID", "N/A")
        return provenir_id, unique_id

    return "N/A", "N/A"


# Main function Experian
def experian_page():
    
 #Styling
    st.markdown(""" 
        <style>
        /* Style for the Provenir ID and Reference# */
        .top-info {
            position: absolute; 
            top: 10px; 
            right: 10px; 
            text-align: right; 
            font-size: 12px;
            font-family: Arial, sans-serif;
            color: black;
        }
       
        /* Align the text beside the logo */
        .header-text {
            display: inline-block;
            vertical-align: middle;
            font-family: Arial, sans-serif;
            font-size: 20px;
            font-weight: bold;
            color: black;
        }
      .st-emotion-cache-1vt4y43 {
    display: inline-flex;
    -webkit-box-align: center;
    align-items: center;
    -webkit-box-pack: center;
    justify-content: center;
    font-weight: 400;
    padding: 0.25rem 0.75rem;
    border-radius: 0.1rem;
    /* min-height: 1.5rem; */
    margin: 4px;
    line-height: 1.3;
    color: black;
    width: 110px;
    user-select: none;
    background-color: rgb(240 240 240);
    border: 1.5px solid rgb(0 0 0);
}
.st-emotion-cache-463q5x {
    margin: 0px;
    padding-right: 2.75rem;
    color: rgb(49, 51, 63);
    border-radius: 0.5rem;
    background-color: white;
}


    @media (max-width: 1024px) {
        .st-emotion-cache-1vt4y43 {
            width: 100%;  /* Make the buttons take full width on smaller screens */
            margin-bottom: 10px;  /* Add space between buttons */
        }
    }

    @media (max-width: 768px) {
        .st-emotion-cache-1vt4y43 {
            font-size: 12px;  /* Reduce the font size for smaller screens */
            padding: 0.2rem 0.6rem;  /* Reduce padding for better fit */
        }
        .st-emotion-cache-165ax5l {
    width: 90% !important;
    margin-bottom: 1rem;
    color: rgb(49, 51, 63);
    border-collapse: collapse;
    border: 1px solid rgba(49, 51, 63, 0.1);
    margin-left: 50px;
}
    }
      @media (max-width: 620px){
    .st-emotion-cache-165ax5l {
    width: 50% !important;
    margin-bottom: 1rem;
    color: rgb(49, 51, 63);
    border-collapse: collapse;
    border: 1px solid rgba(49, 51, 63, 0.1);
    margin-left: 20px;
}
}
.navbar {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            background-color: white; /* Change to match your app's theme */
            z-index: 1000; /* Ensure it stays on top of other elements */
            padding: 10px; /* Optional padding */
            border-bottom: 1px solid rgba(0, 0, 0, 0.1); /* Optional border */
        }
        /* Add spacing below header */
        .header-section {
            padding-bottom: 20px;
        }

        </style>
    """, unsafe_allow_html=True)

    # Load the XML file for Provenir_id and Unique_id
    file = './1_Account_035_Result.xml'
    root = load_xml(file)

    if root is None:
        st.error("Failed to load XML file.")
        return

  
    provenir_id, unique_id = extract_ids_from_xml(root)


    st.markdown(f"""
        <div class='top-info'>
        <b>Provenir ID:</b> {provenir_id}<br>
        <b>Unique ID:</b> {unique_id}
        </div>
    """, unsafe_allow_html=True)

    st.image("logo.png", width=200) #logo Arrangment
    
    st.markdown('<div class="navbar">', unsafe_allow_html=True)
    # Navbar Buttons
    if "page_history" not in st.session_state:
        st.session_state.page_history = []

    # Navbar Buttons
    navbar = st.container()
    with navbar:
        col1, col2, col3, col4, col5, col6, col7, col8, col9, col10 = st.columns(10)

        with col1:
            if st.button("Request"):
               st.session_state.page_history.append(st.session_state.page)
               st.session_state.page = "Request"        
        with col2:
            if st.button("Response"):
                st.session_state.page_history.append(st.session_state.page)
                st.session_state.page = "Response"

        with col3:
            if st.button("Demograph"):
                st.session_state.page_history.append(st.session_state.page)
                st.session_state.page = "Demograph"
        with col4:
            if st.button("Analyze"):
                st.session_state.page_history.append(st.session_state.page)
                st.session_state.page = "analyze"
        with col5:
            if st.button("VeriCheck"):
                st.session_state.page_history.append(st.session_state.page)
                st.session_state.page = "VeriCheck"
        with col6:
            if st.button("AML"):
                st.session_state.page_history.append(st.session_state.page)
                st.session_state.page = "AML"
        with col7:
            if st.button("Fraud"):
                st.session_state.page_history.append(st.session_state.page)
                st.session_state.page = "Fraud"
        with col8:
            if st.button("Raw"):
                st.session_state.page_history.append(st.session_state.page)
                st.session_state.page = "Raw"
        with col9:
            if st.button("Aggregated"):
                st.session_state.page_history.append(st.session_state.page)
                st.session_state.page = "Aggregated"
        with col10:
            if st.button("Summary"):
                st.session_state.page_history.append(st.session_state.page)
                st.session_state.page = "Summary"

    st.markdown('</div>', unsafe_allow_html=True)
     
                
#Styling
    st.markdown(
        """
        <style>
         .reportview-container {
                background-color: black;  
                color: white;  
                height: 5px;
                width: 100%;
                margin-bottom: 30px;
            }
            .logo-container {
                display: flex;
                align-items: center;
                justify-content: center;
            }
            .dataframe {
                margin-right: 500px;
                margin-left:500px;
            }
       
        .st-emotion-cache-13ln4jf {
            max-width: 100% !important;  
            width: 100% !important;      
            padding: 4rem 4rem 10rem !important;
        }
        .css-1lcbmhc {
            padding-left: 0 !important;  
            padding-right: 0 !important; 
        }
        .st-emotion-cache-165ax5l {
           width: 70% !important;
           margin-bottom: 1rem;
            color: rgb(49, 51, 63);
            border-collapse: collapse;
            border: 1px solid rgba(49, 51, 63, 0.1);
            margin-left: 180px; !important;
        }
       .st-emotion-cache-a51556 {
           border-bottom: 1px solid rgba(49, 51, 63, 0.1);
           border-right: 1px solid rgba(49, 51, 63, 0.1);
           vertical-align: middle;
           padding: 0.25rem 0.375rem;
           font-weight: 400;
           color: rgba(49, 51, 63, 0.6);
           display: none;
        }
        </style>
        """,
        unsafe_allow_html=True
    )

#Arrangment of the information on the page
    st.markdown(
        """
        <div class="reportview-container">
           <div class="logo-container">
        </div>
        </div>
        """,
        unsafe_allow_html=True
    )

    st.title("Aggregated Data")
    # Extract raw data using the existing function
    raw_data, aggregated_data = extract_data_for_account_lxml(root)

    # Convert raw data to a DataFrame for display
    agg_df = pd.DataFrame(aggregated_data)
    if not agg_df.empty:
     st.table(agg_df)  # Display the raw data in a table format
        
         # Back button   
    if st.button("Back"):
         if len(st.session_state.page_history) > 0:
            st.session_state.page = st.session_state.page_history.pop()  # Go back to the previous page
         else:
            st.error("No previous page to go back to.")

#equifax.py
import streamlit as st
import pandas as pd
import plotly.express as px
from lxml import etree



# Load the XML file
def load_xml(file):
    try:
        tree = etree.parse(file)
        root = tree.getroot()
        return root
    except Exception as e:
        st.error(f"Error loading XML file: {e}")
        return None

# #Extracting Of Raw And Aggregated data from Xml file
def extract_data_for_account_lxml(element):
    raw_data = []
    aggregated_data = []

    interface_aggregations = element.xpath(".//InterfaceAggregations")

    for interface in interface_aggregations:
        aggregation_locals = interface.xpath(".//AggregationLocal")
        for agg_local in aggregation_locals:
            raw_items = agg_local.xpath("./Raw")
            for raw_item in raw_items:
                name = raw_item.get("Name")
                value = raw_item.get("Value")
                raw_data.append({"Name": name, "Value": value})

            aggregated_items = agg_local.xpath("./Aggregated")
            for agg_item in aggregated_items:
                name = agg_item.get("Name")
                value = agg_item.get("Value")
                description = agg_item.get("Description")

                # Initialize category variable
                category = ""

                # Determine the category based on the name
                if name.startswith("G1_"):
                    category = "G1_Demographics"
                elif name.startswith("G2_"):
                    category = "G2_Age"
                elif name.startswith("G3_"):
                    category = "G3_Credit History"
                elif name.startswith("G4_"):
                    category = "G4_Employment"
                elif name.startswith("G5_"):
                    category = "G5_Financial Status"
                elif name.startswith("G6_"):
                    category = "G6_Inquiries"
                elif name.startswith("G7_"):
                    category = "G7_Public Records"
                elif name.startswith("G8_"):
                    category = "G8_Collections"
                elif name.startswith("G9_"):
                    category = "G9_Fraud"
                elif name.startswith("G10_"):
                    category = "G10_Account Details"
                else:
                    category = "Other"

                # Append to aggregated_data as a row
                aggregated_data.append([
                    category,
                    name,
                    value,
                    description,
                ])

    # Custom sorting order
    custom_category_order = {
        "G1_Demographics": 1,
        "G2_Age": 2,
        "G3_Credit History": 3,
        "G4_Employment": 4,
        "G5_Financial Status": 5,
        "G6_Inquiries": 6,
        "G7_Public Records": 7,
        "G8_Collections": 8,
        "G9_Fraud": 9,
        "G10_Account Details": 10,
        "Other": 11,
    }

    # Sort the aggregated data by category and then by Name
    aggregated_data.sort(key=lambda x: (custom_category_order.get(x[0], 11), x[1]))

    return raw_data, aggregated_data

def display_data(aggregated_data):
    current_category = None
    for entry in aggregated_data:
        category = entry["Category"]
        
        # Only print the category header if it's different from the last printed category
        if category != current_category:
            if current_category is not None:
                print()  # Add a blank line before the next category
            print(category)  # Print category header
            current_category = category
            
        # Print data entries with specific formatting
        print(f"{entry['Name']}\t{entry['Value']}\t{entry['Description']}")  # Print data entries


# Extract Provenir ID and Unique ID from XML file
def extract_ids_from_xml(root):
    header_segment = root.find(".//HeaderSegment")
    if header_segment is not None:
        provenir_id = header_segment.get("ProvenirID", "N/A")
        unique_id = header_segment.get("UniqueID", "N/A")
        return provenir_id, unique_id

    return "N/A", "N/A"

# Main function Equifax
def main1():
    
 #Styling
    st.markdown(""" 
        <style>
        /* Style for the Provenir ID and Reference# */
        .top-info {
            position: absolute; 
            top: 10px; 
            right: 10px; 
            text-align: right; 
            font-size: 12px;
            font-family: Arial, sans-serif;
            color: black;
        }
       
        /* Align the text beside the logo */
        .header-text {
            display: inline-block;
            vertical-align: middle;
            font-family: Arial, sans-serif;
            font-size: 20px;
            font-weight: bold;
            color: black;
        }
      .st-emotion-cache-1vt4y43 {
    display: inline-flex;
    -webkit-box-align: center;
    align-items: center;
    -webkit-box-pack: center;
    justify-content: center;
    font-weight: 400;
    padding: 0.25rem 0.75rem;
    border-radius: 0.1rem;
    /* min-height: 1.5rem; */
    margin: 4px;
    line-height: 1.3;
    color: black;
    width: 110px;
    user-select: none;
    background-color: rgb(240 240 240);
    border: 1.5px solid rgb(0 0 0);
}
.st-emotion-cache-463q5x {
    margin: 0px;
    padding-right: 2.75rem;
    color: rgb(49, 51, 63);
    border-radius: 0.5rem;
    background-color: white;
}


    @media (max-width: 1024px) {
        .st-emotion-cache-1vt4y43 {
            width: 100%;  /* Make the buttons take full width on smaller screens */
            margin-bottom: 10px;  /* Add space between buttons */
        }
    }

    @media (max-width: 768px) {
        .st-emotion-cache-1vt4y43 {
            font-size: 12px;  /* Reduce the font size for smaller screens */
            padding: 0.2rem 0.6rem;  /* Reduce padding for better fit */
        }
        .st-emotion-cache-165ax5l {
    width: 90% !important;
    margin-bottom: 1rem;
    color: rgb(49, 51, 63);
    border-collapse: collapse;
    border: 1px solid rgba(49, 51, 63, 0.1);
    margin-left: 50px;
}
    }
      @media (max-width: 620px){
    .st-emotion-cache-165ax5l {
    width: 50% !important;
    margin-bottom: 1rem;
    color: rgb(49, 51, 63);
    border-collapse: collapse;
    border: 1px solid rgba(49, 51, 63, 0.1);
    margin-left: 20px;
}
}
.navbar {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            background-color: white; /* Change to match your app's theme */
            z-index: 1000; /* Ensure it stays on top of other elements */
            padding: 10px; /* Optional padding */
            border-bottom: 1px solid rgba(0, 0, 0, 0.1); /* Optional border */
        }
        /* Add spacing below header */
        .header-section {
            padding-bottom: 20px;
        }

        </style>
    """, unsafe_allow_html=True)

    # Load the XML file for Provenir_id and Unique_id
    file = './1_Account_035_Result.xml'
    root = load_xml(file)

    if root is None:
        st.error("Failed to load XML file.")
        return

  
    provenir_id, unique_id = extract_ids_from_xml(root)


    st.markdown(f"""
        <div class='top-info'>
        <b>Provenir ID:</b> {provenir_id}<br>
        <b>Unique ID:</b> {unique_id}
        </div>
    """, unsafe_allow_html=True)

    st.image("logo.png", width=200) #logo Arrangment
    
    st.markdown('<div class="navbar">', unsafe_allow_html=True)
    # Navbar Buttons
    if "page_history" not in st.session_state:
        st.session_state.page_history = []

    # Navbar Buttons
    navbar = st.container()
    with navbar:
        col1, col2, col3, col4, col5, col6, col7, col8, col9, col10 = st.columns(10)

        with col1:
            if st.button("Request"):
               st.session_state.page_history.append(st.session_state.page)
               st.session_state.page = "Request"        
        with col2:
            if st.button("Response"):
                st.session_state.page_history.append(st.session_state.page)
                st.session_state.page = "Response"

        with col3:
            if st.button("Demograph"):
                st.session_state.page_history.append(st.session_state.page)
                st.session_state.page = "Demograph"
        with col4:
            if st.button("Analyze"):
                st.session_state.page_history.append(st.session_state.page)
                st.session_state.page = "analyze"
        with col5:
            if st.button("VeriCheck"):
                st.session_state.page_history.append(st.session_state.page)
                st.session_state.page = "VeriCheck"
        with col6:
            if st.button("AML"):
                st.session_state.page_history.append(st.session_state.page)
                st.session_state.page = "AML"
        with col7:
            if st.button("Fraud"):
                st.session_state.page_history.append(st.session_state.page)
                st.session_state.page = "Fraud"
        with col8:
            if st.button("Raw"):
                st.session_state.page_history.append(st.session_state.page)
                st.session_state.page = "Raw"
        with col9:
            if st.button("Aggregated"):
                st.session_state.page_history.append(st.session_state.page)
                st.session_state.page = "Aggregated"
        with col10:
            if st.button("Summary"):
                st.session_state.page_history.append(st.session_state.page)
                st.session_state.page = "Summary"

    st.markdown('</div>', unsafe_allow_html=True)
     
                
#Styling
    st.markdown(
        """
        <style>
         .reportview-container {
                background-color: black;  
                color: white;  
                height: 5px;
                width: 100%;
                margin-bottom: 30px;
            }
            .logo-container {
                display: flex;
                align-items: center;
                justify-content: center;
            }
            .dataframe {
                margin-right: 500px;
                margin-left:500px;
            }
       
        .st-emotion-cache-13ln4jf {
            max-width: 100% !important;  
            width: 100% !important;      
            padding: 4rem 4rem 10rem !important;
        }
        .css-1lcbmhc {
            padding-left: 0 !important;  
            padding-right: 0 !important; 
        }
        .st-emotion-cache-165ax5l {
           width: 70% !important;
           margin-bottom: 1rem;
            color: rgb(49, 51, 63);
            border-collapse: collapse;
            border: 1px solid rgba(49, 51, 63, 0.1);
            margin-left: 180px; !important;
        }
       .st-emotion-cache-a51556 {
           border-bottom: 1px solid rgba(49, 51, 63, 0.1);
           border-right: 1px solid rgba(49, 51, 63, 0.1);
           vertical-align: middle;
           padding: 0.25rem 0.375rem;
           font-weight: 400;
           color: rgba(49, 51, 63, 0.6);
           display: none;
        }
        </style>
        """,
        unsafe_allow_html=True
    )

#Arrangment of the information on the page
    st.markdown(
        """
        <div class="reportview-container">
           <div class="logo-container">
        </div>
        </div>
        """,
        unsafe_allow_html=True
    )

    st.title("Aggregated Data")
    # Extract raw data using the existing function
    raw_data, aggregated_data = extract_data_for_account_lxml(root)

    # Convert raw data to a DataFrame for display
    agg_df = pd.DataFrame(aggregated_data)
    if not agg_df.empty:
     st.table(agg_df)  # Display the raw data in a table format
        
         # Back button   
    if st.button("Back"):
         if len(st.session_state.page_history) > 0:
            st.session_state.page = st.session_state.page_history.pop()  # Go back to the previous page
         else:
            st.error("No previous page to go back to.")

#aggregated.py
import streamlit as st
import pandas as pd
import plotly.express as px
from lxml import etree

# Load the XML file
def load_xml(file):
    try:
        tree = etree.parse(file)
        root = tree.getroot()
        return root
    except Exception as e:
        st.error(f"Error loading XML file: {e}")
        return None
 


# Extract Provenir ID and Unique ID from XML file
def extract_ids_from_xml(root):
    header_segment = root.find(".//HeaderSegment")
    if header_segment is not None:
        provenir_id = header_segment.get("ProvenirID", "N/A")
        unique_id = header_segment.get("UniqueID", "N/A")
        return provenir_id, unique_id

    return "N/A", "N/A"

# #Extracting Of Raw And Aggregated data from Xml file
def extract_data_for_account_lxml(element):
    raw_data = []
    aggregated_data = []

    interface_aggregations = element.xpath(".//InterfaceAggregations")

    for interface in interface_aggregations:
        aggregation_locals = interface.xpath(".//AggregationLocal")
        for agg_local in aggregation_locals:
            raw_items = agg_local.xpath("./Raw")
            for raw_item in raw_items:
                name = raw_item.get("Name")
                value = raw_item.get("Value")
                raw_data.append({"Name": name, "Value": value})

            aggregated_items = agg_local.xpath("./Aggregated")
            for agg_item in aggregated_items:
                name = agg_item.get("Name")
                value = agg_item.get("Value")
                description = agg_item.get("Description")

                # Initialize category variable
                category = ""

                # Determine the category based on the name
                if name.startswith("G1_"):
                    category = "G1_Demographics"
                elif name.startswith("G2_"):
                    category = "G2_Age"
                elif name.startswith("G3_"):
                    category = "G3_Credit History"
                elif name.startswith("G4_"):
                    category = "G4_Employment"
                elif name.startswith("G5_"):
                    category = "G5_Financial Status"
                elif name.startswith("G6_"):
                    category = "G6_Inquiries"
                elif name.startswith("G7_"):
                    category = "G7_Public Records"
                elif name.startswith("G8_"):
                    category = "G8_Collections"
                elif name.startswith("G9_"):
                    category = "G9_Fraud"
                elif name.startswith("G10_"):
                    category = "G10_Account Details"
                else:
                    category = "Other"

                # Append to aggregated_data as a row
                aggregated_data.append([
                    category,
                    name,
                    value,
                    description,
                ])

    # Custom sorting order
    custom_category_order = {
        "G1_Demographics": 1,
        "G2_Age": 2,
        "G3_Credit History": 3,
        "G4_Employment": 4,
        "G5_Financial Status": 5,
        "G6_Inquiries": 6,
        "G7_Public Records": 7,
        "G8_Collections": 8,
        "G9_Fraud": 9,
        "G10_Account Details": 10,
        "Other": 11,
    }

    # Sort the aggregated data by category and then by Name
    aggregated_data.sort(key=lambda x: (custom_category_order.get(x[0], 11), x[1]))

    return raw_data, aggregated_data


# Function to create aggregated page
def aggregated_page():
    #Styling
     st.markdown(""" 
        <style>
            .st-emotion-cache-13ln4jf {
                max-width: 100% !important;
                width: 100% !important;
                padding: 4rem 1rem 10rem; !important;
            }
            .dataframe {
                margin-right: 100px;
                margin-left: 100px;
            }
            .css-1lcbmhc {
                padding-left: 0 !important;
                padding-right: 0 !important;
            }
        /* Style for the Provenir ID and Reference# */
        .top-info {
            position: absolute; 
            top: 10px; 
            right: 10px; 
            text-align: right; 
            font-size: 12px;
            font-family: Arial, sans-serif;
            color: black;
        }
       
        /* Align the text beside the logo */
        .header-text {
            display: inline-block;
            vertical-align: middle;
            font-family: Arial, sans-serif;
            font-size: 20px;
            font-weight: bold;
            color: black;
        }
      .st-emotion-cache-1vt4y43 {
    display: inline-flex;
    -webkit-box-align: center;
    align-items: center;
    -webkit-box-pack: center;
    justify-content: center;
    font-weight: 400;
    padding: 0.25rem 0.75rem;
    border-radius: 0.1rem;
    /* min-height: 1.5rem; */
    margin: 4px;
    line-height: 1.3;
    color: black;
    width: 110px;
    user-select: none;
    background-color: rgb(240 240 240);
    border: 1.5px solid rgb(0 0 0);
}
.st-emotion-cache-463q5x {
    margin: 0px;
    padding-right: 2.75rem;
    color: rgb(49, 51, 63);
    border-radius: 0.5rem;
    background-color: white;
}


    @media (max-width: 1024px) {
        .st-emotion-cache-1vt4y43 {
            width: 100%;  /* Make the buttons take full width on smaller screens */
            margin-bottom: 10px;  /* Add space between buttons */
        }
    }

    @media (max-width: 768px) {
        .st-emotion-cache-1vt4y43 {
            font-size: 12px;  /* Reduce the font size for smaller screens */
            padding: 0.2rem 0.6rem;  /* Reduce padding for better fit */
        }
        .st-emotion-cache-165ax5l {
    width: 90% !important;
    margin-bottom: 1rem;
    color: rgb(49, 51, 63);
    border-collapse: collapse;
    border: 1px solid rgba(49, 51, 63, 0.1);
    margin-left: 50px;
}
    }
      @media (max-width: 620px){
    .st-emotion-cache-165ax5l {
    width: 50% !important;
    margin-bottom: 1rem;
    color: rgb(49, 51, 63);
    border-collapse: collapse;
    border: 1px solid rgba(49, 51, 63, 0.1);
    margin-left: 20px;
}
}
.navbar {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            background-color: white; /* Change to match your app's theme */
            z-index: 1000; /* Ensure it stays on top of other elements */
            padding: 10px; /* Optional padding */
            border-bottom: 1px solid rgba(0, 0, 0, 0.1); /* Optional border */
        }
        /* Add spacing below header */
        .header-section {
            padding-bottom: 20px;
        }

        </style>
    """, unsafe_allow_html=True)
     
     # Load the XML file for Provenir_id and Unique_id
     file = './1_Account_035_Result.xml'
     root = load_xml(file)

     if root is None:
        st.error("Failed to load XML file.")
        return

  
     provenir_id, unique_id = extract_ids_from_xml(root)


     st.markdown(f"""
        <div class='top-info'>
        <b>Provenir ID:</b> {provenir_id}<br>
        <b>Unique ID:</b> {unique_id}
        </div>
    """, unsafe_allow_html=True)

     st.image("logo.png", width=200) #logo Arrangment
     st.markdown('<div class="navbar">', unsafe_allow_html=True)
    # Navbar Buttons
     if "page_history" not in st.session_state:
        st.session_state.page_history = []

    # Navbar Buttons
     navbar = st.container()
     with navbar:
        col1, col2, col3, col4, col5, col6, col7, col8, col9, col10 = st.columns(10)

        with col1:
            if st.button("Request"):
               st.session_state.page_history.append(st.session_state.page)
               st.session_state.page = "Request"        
        with col2:
            if st.button("Response"):
                st.session_state.page_history.append(st.session_state.page)
                st.session_state.page = "Response"

        with col3:
            if st.button("Demograph"):
                st.session_state.page_history.append(st.session_state.page)
                st.session_state.page = "Demograph"
        with col4:
            if st.button("Analyze"):
                st.session_state.page_history.append(st.session_state.page)
                st.session_state.page = "analyze"
        with col5:
            if st.button("VeriCheck"):
                st.session_state.page_history.append(st.session_state.page)
                st.session_state.page = "VeriCheck"
        with col6:
            if st.button("AML"):
                st.session_state.page_history.append(st.session_state.page)
                st.session_state.page = "AML"
        with col7:
            if st.button("Fraud"):
                st.session_state.page_history.append(st.session_state.page)
                st.session_state.page = "Fraud"
        with col8:
            if st.button("Raw"):
                st.session_state.page_history.append(st.session_state.page)
                st.session_state.page = "Raw"
        with col9:
            if st.button("Aggregated"):
                st.session_state.page_history.append(st.session_state.page)
                st.session_state.page = "Aggregated"
        with col10:
            if st.button("Summary"):
                st.session_state.page_history.append(st.session_state.page)
                st.session_state.page = "Summary"

     st.markdown('</div>', unsafe_allow_html=True)
     
     
     st.markdown(
        """
        <style>
         .reportview-container {
                background-color: black;  
                color: white;  
                height: 5px;
                width: 100%;
                margin-bottom: 30px;
            }
            .logo-container {
                display: flex;
                align-items: center;
                justify-content: center;
            }
        .st-emotion-cache-13ln4jf {
            max-width: 100% !important;  
            width: 100% !important;      
            padding: 4rem 4rem 10rem !important;
        }
        .css-1lcbmhc {
            padding-left: 0 !important;  
            padding-right: 0 !important; 
        }
        .st-emotion-cache-165ax5l {
           width: 70% !important;
           margin-bottom: 1rem;
            color: rgb(49, 51, 63);
            border-collapse: collapse;
            border: 1px solid rgba(49, 51, 63, 0.1);
            margin-left: 180px; !important;
        }
       .st-emotion-cache-a51556 {
           border-bottom: 1px solid rgba(49, 51, 63, 0.1);
           border-right: 1px solid rgba(49, 51, 63, 0.1);
           vertical-align: middle;
           padding: 0.25rem 0.375rem;
           font-weight: 400;
           color: rgba(49, 51, 63, 0.6);
           display: none;
        }
        </style>
        """,
        unsafe_allow_html=True
    )

     #Arrangment of the information on the page
     st.markdown(
        """
        <div class="reportview-container">
           <div class="logo-container">
        </div>
        </div>
        """,
        unsafe_allow_html=True
    )

     st.title("Aggregated Data")
  # Extract raw data using the existing function
     raw_data, aggregated_data = extract_data_for_account_lxml(root)
         # Convert raw data to a DataFrame for display
     agg_df = pd.DataFrame(aggregated_data)
     if not agg_df.empty:
            st.table(agg_df) # Display the raw data in a table format
     else:
            st.write("No Aggregated Data Found.")
      # Back button   
     if st.button("Back"):
         if len(st.session_state.page_history) > 0:
            st.session_state.page = st.session_state.page_history.pop()  # Go back to the previous page
         else:
            st.error("No previous page to go back to.")

#output.py
import streamlit as st
import pandas as pd
import requests
from lxml import etree

def display_output():
    st.image("logo.png", width=200)  # Logo Arrangement

    # Arrangement of the information on the page
    st.markdown(
        """
        <div class="reportview-container">
           <div class="logo-container"></div>
        </div>
        """,
        unsafe_allow_html=True
    )

    # Styling
    st.markdown(
        """
        <style>
            .st-emotion-cache-13ln4jf {
                max-width: 100% !important;  
                width: 100% !important;      
                padding: 4rem 1rem 10rem !important;
            }
            .stApp {
                margin-left: 0rem;
            }
            .centered-title {
                text-align: center;  
                font-size: 40px;     
                font-weight: bold;   
                color: black;        
            }
            .reportview-container {
                background-color: black;  
                color: white;  
                height: 10px;
                width: 100%;
                margin-bottom: 30px;
            }
            .logo-container {
                display: flex;
                align-items: center;
                justify-content: center;
            }
            # .dataframe {
            #     margin-right: 100px;
            #     margin-left: 25px;
            # }
            .css-1lcbmhc {
                padding-left: 0 !important;  
                padding-right: 0 !important; 
            }
            .back-button {
                margin-left: 20%;  
            }
            .stButton {
                margin-left: 10px;  /* Adjust margin for better alignment */
            }
            .st-emotion-cache-1vt4y43 {
                display: inline-flex;
                -webkit-box-align: center;
                align-items: center;
                -webkit-box-pack: center;
                justify-content: center;
                font-weight: 400;
                padding: 0.25rem 0.75rem;
                min-height: 2.5rem;
                margin: 0px;
                line-height: 1.6;
                color: black;
                width: auto;
                user-select: none;
                border: 1px solid rgba(49, 51, 63, 0.2);
                margin-left: 100px;
            }
            .st-emotion-cache-ocqkz7 {
             display: flex;
             flex-wrap: wrap;
             -webkit-box-flex: 1;
             flex-grow: 1;
            -webkit-box-align: stretch;
            align-items: stretch;
            gap: 1rem;
            margin-left: 150px;
            }
        </style>
        """,
        unsafe_allow_html=True
    )

    if 'form_data' in st.session_state:
        form_data = st.session_state.form_data

    # Create a list to hold all rows of form data (3 rows for each bureau)
        data_rows = [form_data.copy() for _ in range(3)]  # Create 3 copies of form_data

    # Generate output in Table format without the "Credit Bureaus" column
        data = pd.DataFrame(data_rows)

        # Display the table
        st.markdown(
            """
            <style>
                .dataframe {
                    border: 1px solid #ddd;
                    padding: 8px;
                    text-align: left;
                    border-collapse: collapse;
                    width: 85%;
                    margin-left: 100px;
                }
                .dataframe th, .dataframe td {
                    padding: 8px;
                    border-bottom: 1px solid #ddd;
                }
                .dataframe tr:hover {
                    background-color: #f5f5f5;
                }
            </style>
            """,
            unsafe_allow_html=True
        )
        st.markdown(data.to_html(escape=False, index=False), unsafe_allow_html=True)

        # Display buttons in a horizontal line below the table
        col1, col2, col3 = st.columns([1, 1, 1])  # Create 3 equal-width columns

        with col1:
            if st.button("Equifax"):
                st.session_state.page = "equifax"  # Navigate to Equifax page
                st.rerun()
        
        with col2:
            if st.button("Experian"):
                st.session_state.page = "experian"  # Navigate to Experian page
                st.rerun()
        
        with col3:
            if st.button("Illion"):
                st.session_state.page = "illion"  # Navigate to Illion page
                st.rerun()

        # Return Button to go back
        if st.button("Return"):
            if 'form_data' in st.session_state:
                del st.session_state.form_data
            st.session_state.page = "form"

#aml.py
import streamlit as st
from lxml import etree

# Load the XML file
def load_xml(file):
    try:
        tree = etree.parse(file)
        root = tree.getroot()
        return root
    except Exception as e:
        st.error(f"Error loading XML file: {e}")
        return None
    


# Extract Provenir ID and Unique ID from XML file
def extract_ids_from_xml(root):
    header_segment = root.find(".//HeaderSegment")
    if header_segment is not None:
        provenir_id = header_segment.get("ProvenirID", "N/A")
        unique_id = header_segment.get("UniqueID", "N/A")
        return provenir_id, unique_id

    return "N/A", "N/A"

        
# Function to create Aml page
def  aml_page():
    #Styling
     st.markdown(""" 
        <style>
            .st-emotion-cache-13ln4jf {
                max-width: 100% !important;
                width: 100% !important;
                padding: 4rem 1rem 10rem; !important;
            }
            .dataframe {
                margin-right: 100px;
                margin-left: 100px;
            }
            .css-1lcbmhc {
                padding-left: 0 !important;
                padding-right: 0 !important;
            }
        /* Style for the Provenir ID and Reference# */
        .top-info {
            position: absolute; 
            top: 10px; 
            right: 10px; 
            text-align: right; 
            font-size: 12px;
            font-family: Arial, sans-serif;
            color: black;
        }
       
        /* Align the text beside the logo */
        .header-text {
            display: inline-block;
            vertical-align: middle;
            font-family: Arial, sans-serif;
            font-size: 20px;
            font-weight: bold;
            color: black;
        }
      .st-emotion-cache-1vt4y43 {
    display: inline-flex;
    -webkit-box-align: center;
    align-items: center;
    -webkit-box-pack: center;
    justify-content: center;
    font-weight: 400;
    padding: 0.25rem 0.75rem;
    border-radius: 0.1rem;
    /* min-height: 1.5rem; */
    margin: 20px;
    line-height: 1.3;
    color: black;
    width: 110px;
    user-select: none;
    background-color: rgb(240 240 240);
    border: 1.5px solid rgb(0 0 0);
}
.st-emotion-cache-463q5x {
    margin: 0px;
    padding-right: 2.75rem;
    color: rgb(49, 51, 63);
    border-radius: 0.5rem;
    background-color: white;
}


    @media (max-width: 1024px) {
        .st-emotion-cache-1vt4y43 {
            width: 100%;  /* Make the buttons take full width on smaller screens */
            margin-bottom: 10px;  /* Add space between buttons */
        }
    }

    @media (max-width: 768px) {
        .st-emotion-cache-1vt4y43 {
            font-size: 12px;  /* Reduce the font size for smaller screens */
            padding: 0.2rem 0.6rem;  /* Reduce padding for better fit */
        }
        .st-emotion-cache-165ax5l {
    width: 90% !important;
    margin-bottom: 1rem;
    color: rgb(49, 51, 63);
    border-collapse: collapse;
    border: 1px solid rgba(49, 51, 63, 0.1);
    margin-left: 50px;
}
    }
      @media (max-width: 620px){
    .st-emotion-cache-165ax5l {
    width: 50% !important;
    margin-bottom: 1rem;
    color: rgb(49, 51, 63);
    border-collapse: collapse;
    border: 1px solid rgba(49, 51, 63, 0.1);
    margin-left: 20px;
}
}
.navbar {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            background-color: white; /* Change to match your app's theme */
            z-index: 1000; /* Ensure it stays on top of other elements */
            padding: 10px; /* Optional padding */
            border-bottom: 1px solid rgba(0, 0, 0, 0.1); /* Optional border */
        }
        /* Add spacing below header */
        .header-section {
            padding-bottom: 20px;
        }

        </style>
    """, unsafe_allow_html=True)
     
     # Load the XML file for Provenir_id and Unique_id
     file = './1_Account_035_Result.xml'
     root = load_xml(file)

     if root is None:
        st.error("Failed to load XML file.")
        return

  
     provenir_id, unique_id = extract_ids_from_xml(root)


     st.markdown(f"""
        <div class='top-info'>
        <b>Provenir ID:</b> {provenir_id}<br>
        <b>Unique ID:</b> {unique_id}
        </div>
    """, unsafe_allow_html=True)

     st.image("logo.png", width=200) #logo Arrangment
     st.markdown('<div class="navbar">', unsafe_allow_html=True)
    # Navbar Buttons
     if "page_history" not in st.session_state:
        st.session_state.page_history = []

    # Navbar Buttons
     navbar = st.container()
     with navbar:
        col1, col2, col3, col4, col5, col6, col7, col8, col9, col10 = st.columns(10)

        with col1:
            if st.button("Request"):
               st.session_state.page_history.append(st.session_state.page)
               st.session_state.page = "Request"        
        with col2:
            if st.button("Response"):
                st.session_state.page_history.append(st.session_state.page)
                st.session_state.page = "Response"

        with col3:
            if st.button("Demograph"):
                st.session_state.page_history.append(st.session_state.page)
                st.session_state.page = "Demograph"
        with col4:
            if st.button("Analyze"):
                st.session_state.page_history.append(st.session_state.page)
                st.session_state.page = "analyze"
        with col5:
            if st.button("VeriCheck"):
                st.session_state.page_history.append(st.session_state.page)
                st.session_state.page = "VeriCheck"
        with col6:
            if st.button("AML"):
                st.session_state.page_history.append(st.session_state.page)
                st.session_state.page = "AML"
        with col7:
            if st.button("Fraud"):
                st.session_state.page_history.append(st.session_state.page)
                st.session_state.page = "Fraud"
        with col8:
            if st.button("Raw"):
                st.session_state.page_history.append(st.session_state.page)
                st.session_state.page = "Raw"
        with col9:
            if st.button("Aggregated"):
                st.session_state.page_history.append(st.session_state.page)
                st.session_state.page = "Aggregated"
        with col10:
            if st.button("Summary"):
                st.session_state.page_history.append(st.session_state.page)
                st.session_state.page = "Summary"

     st.markdown('</div>', unsafe_allow_html=True)
     
     st.markdown(
        """
        <style>
         .reportview-container {
                background-color: black;  
                color: white;  
                height: 5px;
                width: 100%;
                margin-bottom: 30px;
            }
            .logo-container {
                display: flex;
                align-items: center;
                justify-content: center;
            }
        .st-emotion-cache-13ln4jf {
            max-width: 100% !important;  
            width: 100% !important;      
            padding: 4rem 4rem 10rem !important;
        }
        .css-1lcbmhc {
            padding-left: 0 !important;  
            padding-right: 0 !important; 
        }
        .st-emotion-cache-165ax5l {
           width: 70% !important;
           margin-bottom: 1rem;
            color: rgb(49, 51, 63);
            border-collapse: collapse;
            border: 1px solid rgba(49, 51, 63, 0.1);
            margin-left: 180px; !important;
        }
       .st-emotion-cache-a51556 {
           border-bottom: 1px solid rgba(49, 51, 63, 0.1);
           border-right: 1px solid rgba(49, 51, 63, 0.1);
           vertical-align: middle;
           padding: 0.25rem 0.375rem;
           font-weight: 400;
           color: rgba(49, 51, 63, 0.6);
           display: none;
        }
        </style>
        """,
        unsafe_allow_html=True
    )

     #Arrangment of the information on the page
     st.markdown(
        """
        <div class="reportview-container">
           <div class="logo-container">
        </div>
        </div>
        """,
        unsafe_allow_html=True
    )
     
     st.write("AML")
     
      # Back button   
     if st.button("Back"):
         if len(st.session_state.page_history) > 0:
            st.session_state.page = st.session_state.page_history.pop()  # Go back to the previous page
         else:
            st.error("No previous page to go back to.")
      

#demograph.py
import streamlit as st
from lxml import etree

# Load the XML file
def load_xml(file):
    try:
        tree = etree.parse(file)
        root = tree.getroot()
        return root
    except Exception as e:
        st.error(f"Error loading XML file: {e}")
        return None
    


# Extract Provenir ID and Unique ID from XML file
def extract_ids_from_xml(root):
    header_segment = root.find(".//HeaderSegment")
    if header_segment is not None:
        provenir_id = header_segment.get("ProvenirID", "N/A")
        unique_id = header_segment.get("UniqueID", "N/A")
        return provenir_id, unique_id

    return "N/A", "N/A"

        
# Function to create demograph page
def demograph_page():
    #Styling
     st.markdown(""" 
        <style>
            .st-emotion-cache-13ln4jf {
                max-width: 100% !important;
                width: 100% !important;
                padding: 4rem 1rem 10rem; !important;
            }
            .dataframe {
                margin-right: 100px;
                margin-left: 100px;
            }
            .css-1lcbmhc {
                padding-left: 0 !important;
                padding-right: 0 !important;
            }
        /* Style for the Provenir ID and Reference# */
        .top-info {
            position: absolute; 
            top: 10px; 
            right: 10px; 
            text-align: right; 
            font-size: 12px;
            font-family: Arial, sans-serif;
            color: black;
        }
       
        /* Align the text beside the logo */
        .header-text {
            display: inline-block;
            vertical-align: middle;
            font-family: Arial, sans-serif;
            font-size: 20px;
            font-weight: bold;
            color: black;
        }
      .st-emotion-cache-1vt4y43 {
    display: inline-flex;
    -webkit-box-align: center;
    align-items: center;
    -webkit-box-pack: center;
    justify-content: center;
    font-weight: 400;
    padding: 0.25rem 0.75rem;
    border-radius: 0.1rem;
    /* min-height: 1.5rem; */
    margin: 20px;
    line-height: 1.3;
    color: black;
    width: 110px;
    user-select: none;
    background-color: rgb(240 240 240);
    border: 1.5px solid rgb(0 0 0);
}
.st-emotion-cache-463q5x {
    margin: 0px;
    padding-right: 2.75rem;
    color: rgb(49, 51, 63);
    border-radius: 0.5rem;
    background-color: white;
}


    @media (max-width: 1024px) {
        .st-emotion-cache-1vt4y43 {
            width: 100%;  /* Make the buttons take full width on smaller screens */
            margin-bottom: 10px;  /* Add space between buttons */
        }
    }

    @media (max-width: 768px) {
        .st-emotion-cache-1vt4y43 {
            font-size: 12px;  /* Reduce the font size for smaller screens */
            padding: 0.2rem 0.6rem;  /* Reduce padding for better fit */
        }
        .st-emotion-cache-165ax5l {
    width: 90% !important;
    margin-bottom: 1rem;
    color: rgb(49, 51, 63);
    border-collapse: collapse;
    border: 1px solid rgba(49, 51, 63, 0.1);
    margin-left: 50px;
}
    }
      @media (max-width: 620px){
    .st-emotion-cache-165ax5l {
    width: 50% !important;
    margin-bottom: 1rem;
    color: rgb(49, 51, 63);
    border-collapse: collapse;
    border: 1px solid rgba(49, 51, 63, 0.1);
    margin-left: 20px;
}
}
.navbar {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            background-color: white; /* Change to match your app's theme */
            z-index: 1000; /* Ensure it stays on top of other elements */
            padding: 10px; /* Optional padding */
            border-bottom: 1px solid rgba(0, 0, 0, 0.1); /* Optional border */
        }
        /* Add spacing below header */
        .header-section {
            padding-bottom: 20px;
        }

        </style>
    """, unsafe_allow_html=True)
     
     # Load the XML file for Provenir_id and Unique_id
     file = './1_Account_035_Result.xml'
     root = load_xml(file)

     if root is None:
        st.error("Failed to load XML file.")
        return

  
     provenir_id, unique_id = extract_ids_from_xml(root)


     st.markdown(f"""
        <div class='top-info'>
        <b>Provenir ID:</b> {provenir_id}<br>
        <b>Unique ID:</b> {unique_id}
        </div>
    """, unsafe_allow_html=True)

     st.image("logo.png", width=200) #logo Arrangment
     st.markdown('<div class="navbar">', unsafe_allow_html=True)
    # Navbar Buttons
     if "page_history" not in st.session_state:
        st.session_state.page_history = []

    # Navbar Buttons
     navbar = st.container()
     with navbar:
        col1, col2, col3, col4, col5, col6, col7, col8, col9, col10 = st.columns(10)

        with col1:
            if st.button("Request"):
               st.session_state.page_history.append(st.session_state.page)
               st.session_state.page = "Request"        
        with col2:
            if st.button("Response"):
                st.session_state.page_history.append(st.session_state.page)
                st.session_state.page = "Response"

        with col3:
            if st.button("Demograph"):
                st.session_state.page_history.append(st.session_state.page)
                st.session_state.page = "Demograph"
        with col4:
            if st.button("Analyze"):
                st.session_state.page_history.append(st.session_state.page)
                st.session_state.page = "analyze"
        with col5:
            if st.button("VeriCheck"):
                st.session_state.page_history.append(st.session_state.page)
                st.session_state.page = "VeriCheck"
        with col6:
            if st.button("AML"):
                st.session_state.page_history.append(st.session_state.page)
                st.session_state.page = "AML"
        with col7:
            if st.button("Fraud"):
                st.session_state.page_history.append(st.session_state.page)
                st.session_state.page = "Fraud"
        with col8:
            if st.button("Raw"):
                st.session_state.page_history.append(st.session_state.page)
                st.session_state.page = "Raw"
        with col9:
            if st.button("Aggregated"):
                st.session_state.page_history.append(st.session_state.page)
                st.session_state.page = "Aggregated"
        with col10:
            if st.button("Summary"):
                st.session_state.page_history.append(st.session_state.page)
                st.session_state.page = "Summary"

     st.markdown('</div>', unsafe_allow_html=True)
     
     st.markdown(
        """
        <style>
         .reportview-container {
                background-color: black;  
                color: white;  
                height: 5px;
                width: 100%;
                margin-bottom: 30px;
            }
            .logo-container {
                display: flex;
                align-items: center;
                justify-content: center;
            }
        .st-emotion-cache-13ln4jf {
            max-width: 100% !important;  
            width: 100% !important;      
            padding: 4rem 4rem 10rem !important;
        }
        .css-1lcbmhc {
            padding-left: 0 !important;  
            padding-right: 0 !important; 
        }
        .st-emotion-cache-165ax5l {
           width: 70% !important;
           margin-bottom: 1rem;
            color: rgb(49, 51, 63);
            border-collapse: collapse;
            border: 1px solid rgba(49, 51, 63, 0.1);
            margin-left: 180px; !important;
        }
       .st-emotion-cache-a51556 {
           border-bottom: 1px solid rgba(49, 51, 63, 0.1);
           border-right: 1px solid rgba(49, 51, 63, 0.1);
           vertical-align: middle;
           padding: 0.25rem 0.375rem;
           font-weight: 400;
           color: rgba(49, 51, 63, 0.6);
           display: none;
        }
        </style>
        """,
        unsafe_allow_html=True
    )

     #Arrangment of the information on the page
     st.markdown(
        """
        <div class="reportview-container">
           <div class="logo-container">
        </div>
        </div>
        """,
        unsafe_allow_html=True
    )
     
     st.write("Demograph")
     
      # Back button   
     if st.button("Back"):
         if len(st.session_state.page_history) > 0:
            st.session_state.page = st.session_state.page_history.pop()  # Go back to the previous page
         else:
            st.error("No previous page to go back to.")
     #fraud.py
   import streamlit as st
from lxml import etree

# Load the XML file
def load_xml(file):
    try:
        tree = etree.parse(file)
        root = tree.getroot()
        return root
    except Exception as e:
        st.error(f"Error loading XML file: {e}")
        return None
    


# Extract Provenir ID and Unique ID from XML file
def extract_ids_from_xml(root):
    header_segment = root.find(".//HeaderSegment")
    if header_segment is not None:
        provenir_id = header_segment.get("ProvenirID", "N/A")
        unique_id = header_segment.get("UniqueID", "N/A")
        return provenir_id, unique_id

    return "N/A", "N/A"

        
# Function to create fraud page
def fraud_page():
    #Styling
     st.markdown(""" 
        <style>
            .st-emotion-cache-13ln4jf {
                max-width: 100% !important;
                width: 100% !important;
                padding: 4rem 1rem 10rem; !important;
            }
            .dataframe {
                margin-right: 100px;
                margin-left: 100px;
            }
            .css-1lcbmhc {
                padding-left: 0 !important;
                padding-right: 0 !important;
            }
        /* Style for the Provenir ID and Reference# */
        .top-info {
            position: absolute; 
            top: 10px; 
            right: 10px; 
            text-align: right; 
            font-size: 12px;
            font-family: Arial, sans-serif;
            color: black;
        }
       
        /* Align the text beside the logo */
        .header-text {
            display: inline-block;
            vertical-align: middle;
            font-family: Arial, sans-serif;
            font-size: 20px;
            font-weight: bold;
            color: black;
        }
      .st-emotion-cache-1vt4y43 {
    display: inline-flex;
    -webkit-box-align: center;
    align-items: center;
    -webkit-box-pack: center;
    justify-content: center;
    font-weight: 400;
    padding: 0.25rem 0.75rem;
    border-radius: 0.1rem;
    /* min-height: 1.5rem; */
    margin: 20px;
    line-height: 1.3;
    color: black;
    width: 110px;
    user-select: none;
    background-color: rgb(240 240 240);
    border: 1.5px solid rgb(0 0 0);
}
.st-emotion-cache-463q5x {
    margin: 0px;
    padding-right: 2.75rem;
    color: rgb(49, 51, 63);
    border-radius: 0.5rem;
    background-color: white;
}


    @media (max-width: 1024px) {
        .st-emotion-cache-1vt4y43 {
            width: 100%;  /* Make the buttons take full width on smaller screens */
            margin-bottom: 10px;  /* Add space between buttons */
        }
    }

    @media (max-width: 768px) {
        .st-emotion-cache-1vt4y43 {
            font-size: 12px;  /* Reduce the font size for smaller screens */
            padding: 0.2rem 0.6rem;  /* Reduce padding for better fit */
        }
        .st-emotion-cache-165ax5l {
    width: 90% !important;
    margin-bottom: 1rem;
    color: rgb(49, 51, 63);
    border-collapse: collapse;
    border: 1px solid rgba(49, 51, 63, 0.1);
    margin-left: 50px;
}
    }
      @media (max-width: 620px){
    .st-emotion-cache-165ax5l {
    width: 50% !important;
    margin-bottom: 1rem;
    color: rgb(49, 51, 63);
    border-collapse: collapse;
    border: 1px solid rgba(49, 51, 63, 0.1);
    margin-left: 20px;
}
}
.navbar {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            background-color: white; /* Change to match your app's theme */
            z-index: 1000; /* Ensure it stays on top of other elements */
            padding: 10px; /* Optional padding */
            border-bottom: 1px solid rgba(0, 0, 0, 0.1); /* Optional border */
        }
        /* Add spacing below header */
        .header-section {
            padding-bottom: 20px;
        }

        </style>
    """, unsafe_allow_html=True)
     
     # Load the XML file for Provenir_id and Unique_id
     file = './1_Account_035_Result.xml'
     root = load_xml(file)

     if root is None:
        st.error("Failed to load XML file.")
        return

  
     provenir_id, unique_id = extract_ids_from_xml(root)


     st.markdown(f"""
        <div class='top-info'>
        <b>Provenir ID:</b> {provenir_id}<br>
        <b>Unique ID:</b> {unique_id}
        </div>
    """, unsafe_allow_html=True)

     st.image("logo.png", width=200) #logo Arrangment
     st.markdown('<div class="navbar">', unsafe_allow_html=True)
    # Navbar Buttons
     if "page_history" not in st.session_state:
        st.session_state.page_history = []

    # Navbar Buttons
     navbar = st.container()
     with navbar:
        col1, col2, col3, col4, col5, col6, col7, col8, col9, col10 = st.columns(10)

        with col1:
            if st.button("Request"):
               st.session_state.page_history.append(st.session_state.page)
               st.session_state.page = "Request"        
        with col2:
            if st.button("Response"):
                st.session_state.page_history.append(st.session_state.page)
                st.session_state.page = "Response"

        with col3:
            if st.button("Demograph"):
                st.session_state.page_history.append(st.session_state.page)
                st.session_state.page = "Demograph"
        with col4:
            if st.button("Analyze"):
                st.session_state.page_history.append(st.session_state.page)
                st.session_state.page = "analyze"
        with col5:
            if st.button("VeriCheck"):
                st.session_state.page_history.append(st.session_state.page)
                st.session_state.page = "VeriCheck"
        with col6:
            if st.button("AML"):
                st.session_state.page_history.append(st.session_state.page)
                st.session_state.page = "AML"
        with col7:
            if st.button("Fraud"):
                st.session_state.page_history.append(st.session_state.page)
                st.session_state.page = "Fraud"
        with col8:
            if st.button("Raw"):
                st.session_state.page_history.append(st.session_state.page)
                st.session_state.page = "Raw"
        with col9:
            if st.button("Aggregated"):
                st.session_state.page_history.append(st.session_state.page)
                st.session_state.page = "Aggregated"
        with col10:
            if st.button("Summary"):
                st.session_state.page_history.append(st.session_state.page)
                st.session_state.page = "Summary"

     st.markdown('</div>', unsafe_allow_html=True)
     
     st.markdown(
        """
        <style>
         .reportview-container {
                background-color: black;  
                color: white;  
                height: 5px;
                width: 100%;
                margin-bottom: 30px;
            }
            .logo-container {
                display: flex;
                align-items: center;
                justify-content: center;
            }
        .st-emotion-cache-13ln4jf {
            max-width: 100% !important;  
            width: 100% !important;      
            padding: 4rem 4rem 10rem !important;
        }
        .css-1lcbmhc {
            padding-left: 0 !important;  
            padding-right: 0 !important; 
        }
        .st-emotion-cache-165ax5l {
           width: 70% !important;
           margin-bottom: 1rem;
            color: rgb(49, 51, 63);
            border-collapse: collapse;
            border: 1px solid rgba(49, 51, 63, 0.1);
            margin-left: 180px; !important;
        }
       .st-emotion-cache-a51556 {
           border-bottom: 1px solid rgba(49, 51, 63, 0.1);
           border-right: 1px solid rgba(49, 51, 63, 0.1);
           vertical-align: middle;
           padding: 0.25rem 0.375rem;
           font-weight: 400;
           color: rgba(49, 51, 63, 0.6);
           display: none;
        }
        </style>
        """,
        unsafe_allow_html=True
    )

     #Arrangment of the information on the page
     st.markdown(
        """
        <div class="reportview-container">
           <div class="logo-container">
        </div>
        </div>
        """,
        unsafe_allow_html=True
    )
     
     st.write("fraud")
     
      # Back button   
     if st.button("Back"):
         if len(st.session_state.page_history) > 0:
            st.session_state.page = st.session_state.page_history.pop()  # Go back to the previous page
         else:
            st.error("No previous page to go back to.")
     #illion.py
import streamlit as st
import pandas as pd
import plotly.express as px
from lxml import etree


# Load the XML file
def load_xml(file):
    try:
        tree = etree.parse(file)
        root = tree.getroot()
        return root
    except Exception as e:
        st.error(f"Error loading XML file: {e}")
        return None

# #Extracting Of Raw And Aggregated data from Xml file
def extract_data_for_account_lxml(element):
    raw_data = []
    aggregated_data = []

    interface_aggregations = element.xpath(".//InterfaceAggregations")

    for interface in interface_aggregations:
        aggregation_locals = interface.xpath(".//AggregationLocal")
        for agg_local in aggregation_locals:
            raw_items = agg_local.xpath("./Raw")
            for raw_item in raw_items:
                name = raw_item.get("Name")
                value = raw_item.get("Value")
                raw_data.append({"Name": name, "Value": value})

            aggregated_items = agg_local.xpath("./Aggregated")
            for agg_item in aggregated_items:
                name = agg_item.get("Name")
                value = agg_item.get("Value")
                description = agg_item.get("Description")

                # Initialize category variable
                category = ""

                # Determine the category based on the name
                if name.startswith("G1_"):
                    category = "G1_Demographics"
                elif name.startswith("G2_"):
                    category = "G2_Age"
                elif name.startswith("G3_"):
                    category = "G3_Credit History"
                elif name.startswith("G4_"):
                    category = "G4_Employment"
                elif name.startswith("G5_"):
                    category = "G5_Financial Status"
                elif name.startswith("G6_"):
                    category = "G6_Inquiries"
                elif name.startswith("G7_"):
                    category = "G7_Public Records"
                elif name.startswith("G8_"):
                    category = "G8_Collections"
                elif name.startswith("G9_"):
                    category = "G9_Fraud"
                elif name.startswith("G10_"):
                    category = "G10_Account Details"
                else:
                    category = "Other"

                # Append to aggregated_data as a row
                aggregated_data.append([
                    category,
                    name,
                    value,
                    description,
                ])

    # Custom sorting order
    custom_category_order = {
        "G1_Demographics": 1,
        "G2_Age": 2,
        "G3_Credit History": 3,
        "G4_Employment": 4,
        "G5_Financial Status": 5,
        "G6_Inquiries": 6,
        "G7_Public Records": 7,
        "G8_Collections": 8,
        "G9_Fraud": 9,
        "G10_Account Details": 10,
        "Other": 11,
    }

    # Sort the aggregated data by category and then by Name
    aggregated_data.sort(key=lambda x: (custom_category_order.get(x[0], 11), x[1]))

    return raw_data, aggregated_data

def display_data(aggregated_data):
    current_category = None
    for entry in aggregated_data:
        category = entry["Category"]
        
        # Only print the category header if it's different from the last printed category
        if category != current_category:
            if current_category is not None:
                print()  # Add a blank line before the next category
            print(category)  # Print category header
            current_category = category
            
        # Print data entries with specific formatting
        print(f"{entry['Name']}\t{entry['Value']}\t{entry['Description']}")  # Print data entries


# Extract Provenir ID and Unique ID from XML file
def extract_ids_from_xml(root):
    header_segment = root.find(".//HeaderSegment")
    if header_segment is not None:
        provenir_id = header_segment.get("ProvenirID", "N/A")
        unique_id = header_segment.get("UniqueID", "N/A")
        return provenir_id, unique_id

    return "N/A", "N/A"


# Main function illion
def illion_page():
    
 #Styling
    st.markdown(""" 
        <style>
        /* Style for the Provenir ID and Reference# */
        .top-info {
            position: absolute; 
            top: 10px; 
            right: 10px; 
            text-align: right; 
            font-size: 12px;
            font-family: Arial, sans-serif;
            color: black;
        }
       
        /* Align the text beside the logo */
        .header-text {
            display: inline-block;
            vertical-align: middle;
            font-family: Arial, sans-serif;
            font-size: 20px;
            font-weight: bold;
            color: black;
        }
      .st-emotion-cache-1vt4y43 {
    display: inline-flex;
    -webkit-box-align: center;
    align-items: center;
    -webkit-box-pack: center;
    justify-content: center;
    font-weight: 400;
    padding: 0.25rem 0.75rem;
    border-radius: 0.1rem;
    /* min-height: 1.5rem; */
    margin: 4px;
    line-height: 1.3;
    color: black;
    width: 110px;
    user-select: none;
    background-color: rgb(240 240 240);
    border: 1.5px solid rgb(0 0 0);
}
.st-emotion-cache-463q5x {
    margin: 0px;
    padding-right: 2.75rem;
    color: rgb(49, 51, 63);
    border-radius: 0.5rem;
    background-color: white;
}


    @media (max-width: 1024px) {
        .st-emotion-cache-1vt4y43 {
            width: 100%;  /* Make the buttons take full width on smaller screens */
            margin-bottom: 10px;  /* Add space between buttons */
        }
    }

    @media (max-width: 768px) {
        .st-emotion-cache-1vt4y43 {
            font-size: 12px;  /* Reduce the font size for smaller screens */
            padding: 0.2rem 0.6rem;  /* Reduce padding for better fit */
        }
        .st-emotion-cache-165ax5l {
    width: 90% !important;
    margin-bottom: 1rem;
    color: rgb(49, 51, 63);
    border-collapse: collapse;
    border: 1px solid rgba(49, 51, 63, 0.1);
    margin-left: 50px;
}
    }
      @media (max-width: 620px){
    .st-emotion-cache-165ax5l {
    width: 50% !important;
    margin-bottom: 1rem;
    color: rgb(49, 51, 63);
    border-collapse: collapse;
    border: 1px solid rgba(49, 51, 63, 0.1);
    margin-left: 20px;
}
}
.navbar {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            background-color: white; /* Change to match your app's theme */
            z-index: 1000; /* Ensure it stays on top of other elements */
            padding: 10px; /* Optional padding */
            border-bottom: 1px solid rgba(0, 0, 0, 0.1); /* Optional border */
        }
        /* Add spacing below header */
        .header-section {
            padding-bottom: 20px;
        }

        </style>
    """, unsafe_allow_html=True)

    # Load the XML file for Provenir_id and Unique_id
    file = './1_Account_035_Result.xml'
    root = load_xml(file)

    if root is None:
        st.error("Failed to load XML file.")
        return

  
    provenir_id, unique_id = extract_ids_from_xml(root)


    st.markdown(f"""
        <div class='top-info'>
        <b>Provenir ID:</b> {provenir_id}<br>
        <b>Unique ID:</b> {unique_id}
        </div>
    """, unsafe_allow_html=True)

    st.image("logo.png", width=200) #logo Arrangment
    
    st.markdown('<div class="navbar">', unsafe_allow_html=True)
    # Navbar Buttons
    if "page_history" not in st.session_state:
        st.session_state.page_history = []

    # Navbar Buttons
    navbar = st.container()
    with navbar:
        col1, col2, col3, col4, col5, col6, col7, col8, col9, col10 = st.columns(10)

        with col1:
            if st.button("Request"):
               st.session_state.page_history.append(st.session_state.page)
               st.session_state.page = "Request"        
        with col2:
            if st.button("Response"):
                st.session_state.page_history.append(st.session_state.page)
                st.session_state.page = "Response"

        with col3:
            if st.button("Demograph"):
                st.session_state.page_history.append(st.session_state.page)
                st.session_state.page = "Demograph"
        with col4:
            if st.button("Analyze"):
                st.session_state.page_history.append(st.session_state.page)
                st.session_state.page = "analyze"
        with col5:
            if st.button("VeriCheck"):
                st.session_state.page_history.append(st.session_state.page)
                st.session_state.page = "VeriCheck"
        with col6:
            if st.button("AML"):
                st.session_state.page_history.append(st.session_state.page)
                st.session_state.page = "AML"
        with col7:
            if st.button("Fraud"):
                st.session_state.page_history.append(st.session_state.page)
                st.session_state.page = "Fraud"
        with col8:
            if st.button("Raw"):
                st.session_state.page_history.append(st.session_state.page)
                st.session_state.page = "Raw"
        with col9:
            if st.button("Aggregated"):
                st.session_state.page_history.append(st.session_state.page)
                st.session_state.page = "Aggregated"
        with col10:
            if st.button("Summary"):
                st.session_state.page_history.append(st.session_state.page)
                st.session_state.page = "Summary"

    st.markdown('</div>', unsafe_allow_html=True)
     
                
#Styling
    st.markdown(
        """
        <style>
         .reportview-container {
                background-color: black;  
                color: white;  
                height: 5px;
                width: 100%;
                margin-bottom: 30px;
            }
            .logo-container {
                display: flex;
                align-items: center;
                justify-content: center;
            }
            .dataframe {
                margin-right: 500px;
                margin-left:500px;
            }
       
        .st-emotion-cache-13ln4jf {
            max-width: 100% !important;  
            width: 100% !important;      
            padding: 4rem 4rem 10rem !important;
        }
        .css-1lcbmhc {
            padding-left: 0 !important;  
            padding-right: 0 !important; 
        }
        .st-emotion-cache-165ax5l {
           width: 70% !important;
           margin-bottom: 1rem;
            color: rgb(49, 51, 63);
            border-collapse: collapse;
            border: 1px solid rgba(49, 51, 63, 0.1);
            margin-left: 180px; !important;
        }
       .st-emotion-cache-a51556 {
           border-bottom: 1px solid rgba(49, 51, 63, 0.1);
           border-right: 1px solid rgba(49, 51, 63, 0.1);
           vertical-align: middle;
           padding: 0.25rem 0.375rem;
           font-weight: 400;
           color: rgba(49, 51, 63, 0.6);
           display: none;
        }
        </style>
        """,
        unsafe_allow_html=True
    )

#Arrangment of the information on the page
    st.markdown(
        """
        <div class="reportview-container">
           <div class="logo-container">
        </div>
        </div>
        """,
        unsafe_allow_html=True
    )

    st.title("Aggregated Data")
    # Extract raw data using the existing function
    raw_data, aggregated_data = extract_data_for_account_lxml(root)

    # Convert raw data to a DataFrame for display
    agg_df = pd.DataFrame(aggregated_data)
    if not agg_df.empty:
     st.table(agg_df)  # Display the raw data in a table format
        
         # Back button   
    if st.button("Back"):
         if len(st.session_state.page_history) > 0:
            st.session_state.page = st.session_state.page_history.pop()  # Go back to the previous page
         else:
            st.error("No previous page to go back to.")




#analyse.py
import streamlit as st
import pandas as pd
import plotly.express as px
from lxml import etree

# Load the XML file
def load_xml(file):
    try:
        tree = etree.parse(file)
        root = tree.getroot()
        return root
    except Exception as e:
        st.error(f"Error loading XML file: {e}")
        return None

# Extract Provenir ID and Unique ID from XML file
def extract_ids_from_xml(root):
    header_segment = root.find(".//HeaderSegment")
    if header_segment is not None:
        provenir_id = header_segment.get("ProvenirID", "N/A")
        unique_id = header_segment.get("UniqueID", "N/A")
        return provenir_id, unique_id
    return "N/A", "N/A"

# Extract PSUMMARY data from XML
def extract_psummary_data(root):
    psummary_data = []
    psummary_elements = root.xpath(".//PSUMMARY")

    for psummary in psummary_elements:
        creditor_name = psummary.findtext("CreditorName", default="N/A")
        first_reported_limit_amt = int(psummary.findtext("FirstReportedLimitAmt", default=0))
        current_limit = int(psummary.findtext("CurrentLimit", default=0))
        account_status = psummary.findtext("AccountStatus", default="N/A")
        credit_card_type = psummary.findtext("CreditCardType", default="N/A")
        term_loan= psummary.findtext("TermOfLoan", default="N/A")

        psummary_data.append({
            'CreditorName': creditor_name,
            'FirstReportedLimitAmt': first_reported_limit_amt,
            'CurrentLimit': current_limit,
            'AccountStatus': account_status,
            'CreditCardType': credit_card_type,
            'TermOfLoan': term_loan
        })

    return pd.DataFrame(psummary_data)

# Function to create analysis page
def analyze_page():
    #Styling
     st.markdown(""" 
        <style>
            .st-emotion-cache-13ln4jf {
                max-width: 100% !important;
                width: 100% !important;
                padding: 4rem 1rem 10rem; !important;
            }
            .dataframe {
                margin-right: 100px;
            }
            .css-1lcbmhc {
                padding-left: 0 !important;
                padding-right: 0 !important;
            }
        /* Style for the Provenir ID and Reference# */
        .top-info {
            position: absolute; 
            top: 10px; 
            right: 10px; 
            text-align: right; 
            font-size: 12px;
            color: black;
        }
       
        /* Align the text beside the logo */
        .header-text {
            display: inline-block;
            vertical-align: middle;
            font-size: 20px;
            font-weight: bold;
            color: black;
        }
        .st-emotion-cache-1vt4y43 {
         display: inline-flex;
         -webkit-box-align: center;
         align-items: center;
         -webkit-box-pack: center;
         justify-content: center;
         font-weight: 400;
         padding: 0.25rem 0.75rem;
         border-radius: 0.1rem;
         margin: 4px;
         line-height: 1.3;
        color: black;
        width: 110px;
        user-select: none;
        background-color: rgb(240 240 240);
        border: 1.5px solid rgb(0 0 0);
}
.st-emotion-cache-463q5x {
    margin: 0px;
    padding-right: 2.75rem;
    color: rgb(49, 51, 63);
    border-radius: 0.5rem;
    background-color: white;
}


    @media (max-width: 1024px) {
        .st-emotion-cache-1vt4y43 {
            width: 100%;  /* Make the buttons take full width on smaller screens */
            margin-bottom: 10px;  /* Add space between buttons */
        }
    }

    @media (max-width: 768px) {
        .st-emotion-cache-1vt4y43 {
            font-size: 12px;  /* Reduce the font size for smaller screens */
            padding: 0.2rem 0.6rem;  /* Reduce padding for better fit */
        }
        .st-emotion-cache-165ax5l {
    width: 90% !important;
    margin-bottom: 1rem;
    color: rgb(49, 51, 63);
    border-collapse: collapse;
    border: 1px solid rgba(49, 51, 63, 0.1);
    margin-left: 50px;
}
    }
      @media (max-width: 620px){
    .st-emotion-cache-165ax5l {
    width: 50% !important;
    margin-bottom: 1rem;
    color: rgb(49, 51, 63);
    border-collapse: collapse;
    border: 1px solid rgba(49, 51, 63, 0.1);
    margin-left: 20px;
}
}
.navbar {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            background-color: white; /* Change to match your app's theme */
            z-index: 1000; /* Ensure it stays on top of other elements */
            padding: 10px; /* Optional padding */
            border-bottom: 1px solid rgba(0, 0, 0, 0.1); /* Optional border */
        }
        /* Add spacing below header */
        .header-section {
            padding-bottom: 20px;
        }

        </style>
    """, unsafe_allow_html=True)
    
     if 'data' not in st.session_state:
        try:
            tree = etree.parse('./1_Account_035_Result.xml')
            root = tree.getroot()
            data = extract_psummary_data(root)
            if data.empty:
                st.error("No data extracted from the XML file.")
                return
            st.session_state.data = data
            st.success("Data successfully extracted and loaded.")
        except Exception as e:
            st.error(f"Error loading XML file: {e}")
            return
        
     # Load the XML file for Provenir_id and Unique_id
     file = './1_Account_035_Result.xml'
     root = load_xml(file)

     if root is None:
        st.error("Failed to load XML file.")
        return

  
     provenir_id, unique_id = extract_ids_from_xml(root)


     st.markdown(f"""
        <div class='top-info'>
        <b>Provenir ID:</b> {provenir_id}<br>
        <b>Unique ID:</b> {unique_id}
        </div>
    """, unsafe_allow_html=True)

     st.image("logo.png", width=200) #logo Arrangment
     st.markdown('<div class="navbar">', unsafe_allow_html=True)
    # Navbar Buttons
     if "page_history" not in st.session_state:
        st.session_state.page_history = []

    # Navbar Buttons
     navbar = st.container()
     with navbar:
        col1, col2, col3, col4, col5, col6, col7, col8, col9, col10 = st.columns(10)

        with col1:
            if st.button("Request"):
               st.session_state.page_history.append(st.session_state.page)
               st.session_state.page = "Request"        
        with col2:
            if st.button("Response"):
                st.session_state.page_history.append(st.session_state.page)
                st.session_state.page = "Response"

        with col3:
            if st.button("Demograph"):
                st.session_state.page_history.append(st.session_state.page)
                st.session_state.page = "Demograph"
        with col4:
            if st.button("Analyze"):
                st.session_state.page_history.append(st.session_state.page)
                st.session_state.page = "analyze"
        with col5:
            if st.button("VeriCheck"):
                st.session_state.page_history.append(st.session_state.page)
                st.session_state.page = "VeriCheck"
        with col6:
            if st.button("AML"):
                st.session_state.page_history.append(st.session_state.page)
                st.session_state.page = "AML"
        with col7:
            if st.button("Fraud"):
                st.session_state.page_history.append(st.session_state.page)
                st.session_state.page = "Fraud"
        with col8:
            if st.button("Raw"):
                st.session_state.page_history.append(st.session_state.page)
                st.session_state.page = "Raw"
        with col9:
            if st.button("Aggregated"):
                st.session_state.page_history.append(st.session_state.page)
                st.session_state.page = "Aggregated"
        with col10:
            if st.button("Summary"):
                st.session_state.page_history.append(st.session_state.page)
                st.session_state.page = "Summary"

     st.markdown('</div>', unsafe_allow_html=True)
     
     
     st.markdown(
        """
        <style>
         .reportview-container {
                background-color: black;  
                color: white;  
                height: 5px;
                width: 100%;
                margin-bottom: 30px;
            }
            .logo-container {
                display: flex;
                align-items: center;
                justify-content: center;
            }
        .st-emotion-cache-13ln4jf {
            max-width: 100% !important;  
            width: 100% !important;      
            padding: 4rem 4rem 10rem !important;
        }
        .css-1lcbmhc {
            padding-left: 0 !important;  
            padding-right: 0 !important; 
        }
        .st-emotion-cache-165ax5l {
           width: 70% !important;
           margin-bottom: 1rem;
            color: rgb(49, 51, 63);
            border-collapse: collapse;
            border: 1px solid rgba(49, 51, 63, 0.1);
            margin-left: 180px; !important;
        }
       .st-emotion-cache-a51556 {
           border-bottom: 1px solid rgba(49, 51, 63, 0.1);
           border-right: 1px solid rgba(49, 51, 63, 0.1);
           vertical-align: middle;
           padding: 0.25rem 0.375rem;
           font-weight: 400;
           color: rgba(49, 51, 63, 0.6);
           display: none;
        }
        </style>
        """,
        unsafe_allow_html=True
    )

     #Arrangment of the information on the page
     st.markdown(
        """
        <div class="reportview-container">
           <div class="logo-container">
        </div>
        </div>
        """,
        unsafe_allow_html=True
    )
    
        # Styling
     st.markdown(
            """
            <style>
            .st-emotion-cache-13ln4jf {
                max-width: 100% !important;
                width: 100% !important;
                padding: 4rem 1rem 10rem; !important;
            }
            .dataframe {
                margin-right: 100px;
                margin-left: 100px;
            }
            .css-1lcbmhc {
                padding-left: 0 !important;
                padding-right: 0 !important;
            }
            </style>
            """,
            unsafe_allow_html=True
        )
       
     st.markdown(
    """
    <style>
        .st-emotion-cache-1db838k {
           width: 258px;
           position: relative;
}
         .stSelectbox {
            width: 300px !important;  /* Set your desired width here */
            margin-left: 20px;  /* Set your desired left margin here */
        }
    </style>
    """,
    unsafe_allow_html=True
)
     st.subheader("Analysis Page")

    # Check if data is available in session state
     if 'data' not in st.session_state or st.session_state.data.empty:
        st.error("No data available to plot. Please check the XML file.")
        return

     data = st.session_state.data
     graph_type = st.selectbox("Select a graph type to display:", ["Line Graph", "Bar Graph", "Pie Chart"])

     chart_placeholder = st.empty()
     with chart_placeholder.container():
          if graph_type == "Line Graph":
            # Add selectbox for Y-axis variable
            y_axis_option = st.selectbox("Select Y-axis value", options=["CurrentLimit", "FirstReportedLimitAmt", "TermOfLoan"])
            line_fig = px.line(data, x='CreditorName', y=y_axis_option, title=f"{y_axis_option} by Creditor Name")
            st.plotly_chart(line_fig)
          
          elif graph_type == "Bar Graph":
            y_and_color_option = st.selectbox("Select Y-axis value", options=["CurrentLimit", "FirstReportedLimitAmt", "TermOfLoan"])
            st.subheader(f"Bar Graph of { y_and_color_option} by Creditor Name")
            bar_fig = px.bar(data, x='CreditorName', y= y_and_color_option, 
                     color=  y_and_color_option,  # Use the selected color column
                     title=f"{ y_and_color_option} by Creditor Name",
                     color_discrete_sequence=px.colors.qualitative.Plotly)  # Use a qualitative color scale
            st.plotly_chart(bar_fig)

          elif graph_type == "Pie Chart":
            st.subheader("Pie Chart of Account Status (Open vs Closed)")
    # Initialize counts
            Open_count = 0
            Closed_count = 0

    # Loop through the AccountStatus values and count occurrences
            for status in data['AccountStatus']:
             if status == 'O':
               Open_count += 1
             elif status == 'C':
              Closed_count += 1


    # Prepare data for the pie chart only if there's at least one count
            if Open_count == 0 and Closed_count == 0:
             st.error("No data available for Open or Closed accounts.")
             return

            pie_data = pd.DataFrame({
             'AccountStatus': ['Open', 'Closed'],
             'Count': [Open_count, Closed_count]
            })

    # Create the pie chart
            pie_fig = px.pie(pie_data, names='AccountStatus', values='Count', title="Distribution of Account Status")
            st.plotly_chart(pie_fig)

 # Back button   
     if st.button("Back"):
         if len(st.session_state.page_history) > 0:
            st.session_state.page = st.session_state.page_history.pop()  # Go back to the previous page
         else:
            st.error("No previous page to go back to.")

# raw.py

import streamlit as st
import pandas as pd
import plotly.express as px
from lxml import etree

# Load the XML file
def load_xml(file):
    try:
        tree = etree.parse(file)
        root = tree.getroot()
        return root
    except Exception as e:
        st.error(f"Error loading XML file: {e}")
        return None
 


# Extract Provenir ID and Unique ID from XML file
def extract_ids_from_xml(root):
    header_segment = root.find(".//HeaderSegment")
    if header_segment is not None:
        provenir_id = header_segment.get("ProvenirID", "N/A")
        unique_id = header_segment.get("UniqueID", "N/A")
        return provenir_id, unique_id

    return "N/A", "N/A"

# #Extracting Of Raw And Aggregated data from Xml file
def extract_data_for_account_lxml(element):
    raw_data = []
    aggregated_data = []

    interface_aggregations = element.xpath(".//InterfaceAggregations")

    for interface in interface_aggregations:
        aggregation_locals = interface.xpath(".//AggregationLocal")
        for agg_local in aggregation_locals:
            raw_items = agg_local.xpath("./Raw")
            for raw_item in raw_items:
                name = raw_item.get("Name")
                value = raw_item.get("Value")
                raw_data.append({"Name": name, "Value": value})

            aggregated_items = agg_local.xpath("./Aggregated")
            for agg_item in aggregated_items:
                name = agg_item.get("Name")
                value = agg_item.get("Value")
                description = agg_item.get("Description")

                # Initialize category variable
                category = ""

                # Determine the category based on the name
                if name.startswith("G1_"):
                    category = "G1_Demographics"
                elif name.startswith("G2_"):
                    category = "G2_Age"
                elif name.startswith("G3_"):
                    category = "G3_Credit History"
                elif name.startswith("G4_"):
                    category = "G4_Employment"
                elif name.startswith("G5_"):
                    category = "G5_Financial Status"
                elif name.startswith("G6_"):
                    category = "G6_Inquiries"
                elif name.startswith("G7_"):
                    category = "G7_Public Records"
                elif name.startswith("G8_"):
                    category = "G8_Collections"
                elif name.startswith("G9_"):
                    category = "G9_Fraud"
                elif name.startswith("G10_"):
                    category = "G10_Account Details"
                else:
                    category = "Other"

                # Append to aggregated_data as a row
                aggregated_data.append([
                    category,
                    name,
                    value,
                    description,
                ])

    # Custom sorting order
    custom_category_order = {
        "G1_Demographics": 1,
        "G2_Age": 2,
        "G3_Credit History": 3,
        "G4_Employment": 4,
        "G5_Financial Status": 5,
        "G6_Inquiries": 6,
        "G7_Public Records": 7,
        "G8_Collections": 8,
        "G9_Fraud": 9,
        "G10_Account Details": 10,
        "Other": 11,
    }

    # Sort the aggregated data by category and then by Name
    aggregated_data.sort(key=lambda x: (custom_category_order.get(x[0], 11), x[1]))

    return raw_data, aggregated_data


# Function to create Raw page
def raw_page():
    #Styling
     st.markdown(""" 
        <style>
            .st-emotion-cache-13ln4jf {
                max-width: 100% !important;
                width: 100% !important;
                padding: 4rem 1rem 10rem; !important;
            }
            .dataframe {
                margin-right: 100px;
                margin-left: 100px;
            }
            .css-1lcbmhc {
                padding-left: 0 !important;
                padding-right: 0 !important;
            }
        /* Style for the Provenir ID and Reference# */
        .top-info {
            position: absolute; 
            top: 10px; 
            right: 10px; 
            text-align: right; 
            font-size: 12px;
            font-family: Arial, sans-serif;
            color: black;
        }
       
        /* Align the text beside the logo */
        .header-text {
            display: inline-block;
            vertical-align: middle;
            font-family: Arial, sans-serif;
            font-size: 20px;
            font-weight: bold;
            color: black;
        }
      .st-emotion-cache-1vt4y43 {
    display: inline-flex;
    -webkit-box-align: center;
    align-items: center;
    -webkit-box-pack: center;
    justify-content: center;
    font-weight: 400;
    padding: 0.25rem 0.75rem;
    border-radius: 0.1rem;
    /* min-height: 1.5rem; */
    margin: 4px;
    line-height: 1.3;
    color: black;
    width: 110px;
    user-select: none;
    background-color: rgb(240 240 240);
    border: 1.5px solid rgb(0 0 0);
}
.st-emotion-cache-463q5x {
    margin: 0px;
    padding-right: 2.75rem;
    color: rgb(49, 51, 63);
    border-radius: 0.5rem;
    background-color: white;
}


    @media (max-width: 1024px) {
        .st-emotion-cache-1vt4y43 {
            width: 100%;  /* Make the buttons take full width on smaller screens */
            margin-bottom: 10px;  /* Add space between buttons */
        }
    }

    @media (max-width: 768px) {
        .st-emotion-cache-1vt4y43 {
            font-size: 12px;  /* Reduce the font size for smaller screens */
            padding: 0.2rem 0.6rem;  /* Reduce padding for better fit */
        }
        .st-emotion-cache-165ax5l {
    width: 90% !important;
    margin-bottom: 1rem;
    color: rgb(49, 51, 63);
    border-collapse: collapse;
    border: 1px solid rgba(49, 51, 63, 0.1);
    margin-left: 50px;
}
    }
      @media (max-width: 620px){
    .st-emotion-cache-165ax5l {
    width: 50% !important;
    margin-bottom: 1rem;
    color: rgb(49, 51, 63);
    border-collapse: collapse;
    border: 1px solid rgba(49, 51, 63, 0.1);
    margin-left: 20px;
}
}
.navbar {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            background-color: white; /* Change to match your app's theme */
            z-index: 1000; /* Ensure it stays on top of other elements */
            padding: 10px; /* Optional padding */
            border-bottom: 1px solid rgba(0, 0, 0, 0.1); /* Optional border */
        }
        /* Add spacing below header */
        .header-section {
            padding-bottom: 20px;
        }

        </style>
    """, unsafe_allow_html=True)
     
     # Load the XML file for Provenir_id and Unique_id
     file = './1_Account_035_Result.xml'
     root = load_xml(file)

     if root is None:
        st.error("Failed to load XML file.")
        return

  
     provenir_id, unique_id = extract_ids_from_xml(root)


     st.markdown(f"""
        <div class='top-info'>
        <b>Provenir ID:</b> {provenir_id}<br>
        <b>Unique ID:</b> {unique_id}
        </div>
    """, unsafe_allow_html=True)

     st.image("logo.png", width=200) #logo Arrangment
     st.markdown('<div class="navbar">', unsafe_allow_html=True)
     
     if "page_history" not in st.session_state:
        st.session_state.page_history = []

    # Navbar Buttons
     navbar = st.container()
     with navbar:
        col1, col2, col3, col4, col5, col6, col7, col8, col9, col10 = st.columns(10)

        with col1:
            if st.button("Request"):
               st.session_state.page_history.append(st.session_state.page)
               st.session_state.page = "Request"        
        with col2:
            if st.button("Response"):
                st.session_state.page_history.append(st.session_state.page)
                st.session_state.page = "Response"

        with col3:
            if st.button("Demograph"):
                st.session_state.page_history.append(st.session_state.page)
                st.session_state.page = "Demograph"
        with col4:
            if st.button("Analyze"):
                st.session_state.page_history.append(st.session_state.page)
                st.session_state.page = "analyze"
        with col5:
            if st.button("VeriCheck"):
                st.session_state.page_history.append(st.session_state.page)
                st.session_state.page = "VeriCheck"
        with col6:
            if st.button("AML"):
                st.session_state.page_history.append(st.session_state.page)
                st.session_state.page = "AML"
        with col7:
            if st.button("Fraud"):
                st.session_state.page_history.append(st.session_state.page)
                st.session_state.page = "Fraud"
        with col8:
            if st.button("Raw"):
                st.session_state.page_history.append(st.session_state.page)
                st.session_state.page = "Raw"
        with col9:
            if st.button("Aggregated"):
                st.session_state.page_history.append(st.session_state.page)
                st.session_state.page = "Aggregated"
        with col10:
            if st.button("Summary"):
                st.session_state.page_history.append(st.session_state.page)
                st.session_state.page = "Summary"

     st.markdown('</div>', unsafe_allow_html=True)
     
     st.markdown(
        """
        <style>
         .reportview-container {
                background-color: black;  
                color: white;  
                height: 5px;
                width: 100%;
                margin-bottom: 30px;
            }
            .logo-container {
                display: flex;
                align-items: center;
                justify-content: center;
            }
        .st-emotion-cache-13ln4jf {
            max-width: 100% !important;  
            width: 100% !important;      
            padding: 4rem 4rem 10rem !important;
        }
        .css-1lcbmhc {
            padding-left: 0 !important;  
            padding-right: 0 !important; 
        }
        .st-emotion-cache-165ax5l {
           width: 70% !important;
           margin-bottom: 1rem;
            color: rgb(49, 51, 63);
            border-collapse: collapse;
            border: 1px solid rgba(49, 51, 63, 0.1);
            margin-left: 180px; !important;
        }
       .st-emotion-cache-a51556 {
           border-bottom: 1px solid rgba(49, 51, 63, 0.1);
           border-right: 1px solid rgba(49, 51, 63, 0.1);
           vertical-align: middle;
           padding: 0.25rem 0.375rem;
           font-weight: 400;
           color: rgba(49, 51, 63, 0.6);
           display: none;
        }
        </style>
        """,
        unsafe_allow_html=True
    )

     #Arrangment of the information on the page
     st.markdown(
        """
        <div class="reportview-container">
           <div class="logo-container">
        </div>
        </div>
        """,
        unsafe_allow_html=True
    )

     st.title("Raw Data Table")

     file = './1_Account_035_Result.xml'
     root = load_xml(file)

     if root is None:
        st.error("Failed to load XML file.")
        return

    # Extract raw data using the existing function
     raw_data, _ = extract_data_for_account_lxml(root)

     if raw_data:
        # Convert raw data to a DataFrame for display
        raw_df = pd.DataFrame(raw_data)
        st.table(raw_df)  # Display the raw data in a table format
     else:
        st.write("No Raw Data Found.")
        
     # Back button   
     if st.button("Back"):
        if len(st.session_state.page_history) > 0:
            st.session_state.page = st.session_state.page_history.pop()  # Go back to the previous page
        else:
            st.error("No previous page to go back to.")

#vericheck.py
import streamlit as st
from lxml import etree

# Load the XML file
def load_xml(file):
    try:
        tree = etree.parse(file)
        root = tree.getroot()
        return root
    except Exception as e:
        st.error(f"Error loading XML file: {e}")
        return None
    


# Extract Provenir ID and Unique ID from XML file
def extract_ids_from_xml(root):
    header_segment = root.find(".//HeaderSegment")
    if header_segment is not None:
        provenir_id = header_segment.get("ProvenirID", "N/A")
        unique_id = header_segment.get("UniqueID", "N/A")
        return provenir_id, unique_id

    return "N/A", "N/A"

        
# Function to create Vericheck page
def vericheck_page():
    #Styling
     st.markdown(""" 
        <style>
            .st-emotion-cache-13ln4jf {
                max-width: 100% !important;
                width: 100% !important;
                padding: 4rem 1rem 10rem; !important;
            }
            .dataframe {
                margin-right: 100px;
                margin-left: 100px;
            }
            .css-1lcbmhc {
                padding-left: 0 !important;
                padding-right: 0 !important;
            }
        /* Style for the Provenir ID and Reference# */
        .top-info {
            position: absolute; 
            top: 10px; 
            right: 10px; 
            text-align: right; 
            font-size: 12px;
            font-family: Arial, sans-serif;
            color: black;
        }
       
        /* Align the text beside the logo */
        .header-text {
            display: inline-block;
            vertical-align: middle;
            font-family: Arial, sans-serif;
            font-size: 20px;
            font-weight: bold;
            color: black;
        }
      .st-emotion-cache-1vt4y43 {
    display: inline-flex;
    -webkit-box-align: center;
    align-items: center;
    -webkit-box-pack: center;
    justify-content: center;
    font-weight: 400;
    padding: 0.25rem 0.75rem;
    border-radius: 0.1rem;
    /* min-height: 1.5rem; */
    margin: 20px;
    line-height: 1.3;
    color: black;
    width: 110px;
    user-select: none;
    background-color: rgb(240 240 240);
    border: 1.5px solid rgb(0 0 0);
}
.st-emotion-cache-463q5x {
    margin: 0px;
    padding-right: 2.75rem;
    color: rgb(49, 51, 63);
    border-radius: 0.5rem;
    background-color: white;
}


    @media (max-width: 1024px) {
        .st-emotion-cache-1vt4y43 {
            width: 100%;  /* Make the buttons take full width on smaller screens */
            margin-bottom: 10px;  /* Add space between buttons */
        }
    }

    @media (max-width: 768px) {
        .st-emotion-cache-1vt4y43 {
            font-size: 12px;  /* Reduce the font size for smaller screens */
            padding: 0.2rem 0.6rem;  /* Reduce padding for better fit */
        }
        .st-emotion-cache-165ax5l {
    width: 90% !important;
    margin-bottom: 1rem;
    color: rgb(49, 51, 63);
    border-collapse: collapse;
    border: 1px solid rgba(49, 51, 63, 0.1);
    margin-left: 50px;
}
    }
      @media (max-width: 620px){
    .st-emotion-cache-165ax5l {
    width: 50% !important;
    margin-bottom: 1rem;
    color: rgb(49, 51, 63);
    border-collapse: collapse;
    border: 1px solid rgba(49, 51, 63, 0.1);
    margin-left: 20px;
}
}
.navbar {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            background-color: white; /* Change to match your app's theme */
            z-index: 1000; /* Ensure it stays on top of other elements */
            padding: 10px; /* Optional padding */
            border-bottom: 1px solid rgba(0, 0, 0, 0.1); /* Optional border */
        }
        /* Add spacing below header */
        .header-section {
            padding-bottom: 20px;
        }

        </style>
    """, unsafe_allow_html=True)
     
     # Load the XML file for Provenir_id and Unique_id
     file = './1_Account_035_Result.xml'
     root = load_xml(file)

     if root is None:
        st.error("Failed to load XML file.")
        return

  
     provenir_id, unique_id = extract_ids_from_xml(root)


     st.markdown(f"""
        <div class='top-info'>
        <b>Provenir ID:</b> {provenir_id}<br>
        <b>Unique ID:</b> {unique_id}
        </div>
    """, unsafe_allow_html=True)

     st.image("logo.png", width=200) #logo Arrangment
     st.markdown('<div class="navbar">', unsafe_allow_html=True)
    # Navbar Buttons
     if "page_history" not in st.session_state:
        st.session_state.page_history = []

    # Navbar Buttons
     navbar = st.container()
     with navbar:
        col1, col2, col3, col4, col5, col6, col7, col8, col9, col10 = st.columns(10)

        with col1:
            if st.button("Request"):
               st.session_state.page_history.append(st.session_state.page)
               st.session_state.page = "Request"        
        with col2:
            if st.button("Response"):
                st.session_state.page_history.append(st.session_state.page)
                st.session_state.page = "Response"

        with col3:
            if st.button("Demograph"):
                st.session_state.page_history.append(st.session_state.page)
                st.session_state.page = "Demograph"
        with col4:
            if st.button("Analyze"):
                st.session_state.page_history.append(st.session_state.page)
                st.session_state.page = "analyze"
        with col5:
            if st.button("VeriCheck"):
                st.session_state.page_history.append(st.session_state.page)
                st.session_state.page = "VeriCheck"
        with col6:
            if st.button("AML"):
                st.session_state.page_history.append(st.session_state.page)
                st.session_state.page = "AML"
        with col7:
            if st.button("Fraud"):
                st.session_state.page_history.append(st.session_state.page)
                st.session_state.page = "Fraud"
        with col8:
            if st.button("Raw"):
                st.session_state.page_history.append(st.session_state.page)
                st.session_state.page = "Raw"
        with col9:
            if st.button("Aggregated"):
                st.session_state.page_history.append(st.session_state.page)
                st.session_state.page = "Aggregated"
        with col10:
            if st.button("Summary"):
                st.session_state.page_history.append(st.session_state.page)
                st.session_state.page = "Summary"

     st.markdown('</div>', unsafe_allow_html=True)
     
     st.markdown(
        """
        <style>
         .reportview-container {
                background-color: black;  
                color: white;  
                height: 5px;
                width: 100%;
                margin-bottom: 30px;
            }
            .logo-container {
                display: flex;
                align-items: center;
                justify-content: center;
            }
        .st-emotion-cache-13ln4jf {
            max-width: 100% !important;  
            width: 100% !important;      
            padding: 4rem 4rem 10rem !important;
        }
        .css-1lcbmhc {
            padding-left: 0 !important;  
            padding-right: 0 !important; 
        }
        .st-emotion-cache-165ax5l {
           width: 70% !important;
           margin-bottom: 1rem;
            color: rgb(49, 51, 63);
            border-collapse: collapse;
            border: 1px solid rgba(49, 51, 63, 0.1);
            margin-left: 180px; !important;
        }
       .st-emotion-cache-a51556 {
           border-bottom: 1px solid rgba(49, 51, 63, 0.1);
           border-right: 1px solid rgba(49, 51, 63, 0.1);
           vertical-align: middle;
           padding: 0.25rem 0.375rem;
           font-weight: 400;
           color: rgba(49, 51, 63, 0.6);
           display: none;
        }
        </style>
        """,
        unsafe_allow_html=True
    )

     #Arrangment of the information on the page
     st.markdown(
        """
        <div class="reportview-container">
           <div class="logo-container">
        </div>
        </div>
        """,
        unsafe_allow_html=True
    )
     
     st.write("Vericheck")
     
      # Back button   
     if st.button("Back"):
         if len(st.session_state.page_history) > 0:
            st.session_state.page = st.session_state.page_history.pop()  # Go back to the previous page
         else:
            st.error("No previous page to go back to.")
   
